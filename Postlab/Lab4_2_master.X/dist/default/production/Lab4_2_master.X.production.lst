

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Fri Aug 11 00:08:59 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    31                           	psect	text18,local,class=CODE,merge=1,delta=2
    32                           	psect	text19,local,class=CODE,merge=1,delta=2
    33                           	psect	text20,local,class=CODE,merge=1,delta=2
    34                           	psect	text21,local,class=CODE,merge=1,delta=2
    35                           	psect	text22,local,class=CODE,merge=1,delta=2
    36                           	psect	text23,local,class=CODE,merge=1,delta=2
    37                           	psect	text24,local,class=CODE,merge=1,delta=2
    38                           	psect	intentry,global,class=CODE,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    49                           	dabs	1,0x7E,2
    50     0000                     
    51                           ; Version 2.40
    52                           ; Generated 17/11/2021 GMT
    53                           ; 
    54                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution. Publication is not required when
    68                           ;        this file is used in an embedded application.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F887 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86     0000                     	;# 
    87     0001                     	;# 
    88     0002                     	;# 
    89     0003                     	;# 
    90     0004                     	;# 
    91     0005                     	;# 
    92     0006                     	;# 
    93     0007                     	;# 
    94     0008                     	;# 
    95     0009                     	;# 
    96     000A                     	;# 
    97     000B                     	;# 
    98     000C                     	;# 
    99     000D                     	;# 
   100     000E                     	;# 
   101     000E                     	;# 
   102     000F                     	;# 
   103     0010                     	;# 
   104     0011                     	;# 
   105     0012                     	;# 
   106     0013                     	;# 
   107     0014                     	;# 
   108     0015                     	;# 
   109     0015                     	;# 
   110     0016                     	;# 
   111     0017                     	;# 
   112     0018                     	;# 
   113     0019                     	;# 
   114     001A                     	;# 
   115     001B                     	;# 
   116     001B                     	;# 
   117     001C                     	;# 
   118     001D                     	;# 
   119     001E                     	;# 
   120     001F                     	;# 
   121     0081                     	;# 
   122     0085                     	;# 
   123     0086                     	;# 
   124     0087                     	;# 
   125     0088                     	;# 
   126     0089                     	;# 
   127     008C                     	;# 
   128     008D                     	;# 
   129     008E                     	;# 
   130     008F                     	;# 
   131     0090                     	;# 
   132     0091                     	;# 
   133     0092                     	;# 
   134     0093                     	;# 
   135     0093                     	;# 
   136     0093                     	;# 
   137     0094                     	;# 
   138     0095                     	;# 
   139     0096                     	;# 
   140     0097                     	;# 
   141     0098                     	;# 
   142     0099                     	;# 
   143     009A                     	;# 
   144     009B                     	;# 
   145     009C                     	;# 
   146     009D                     	;# 
   147     009E                     	;# 
   148     009F                     	;# 
   149     0105                     	;# 
   150     0107                     	;# 
   151     0108                     	;# 
   152     0109                     	;# 
   153     010C                     	;# 
   154     010C                     	;# 
   155     010D                     	;# 
   156     010E                     	;# 
   157     010F                     	;# 
   158     0185                     	;# 
   159     0187                     	;# 
   160     0188                     	;# 
   161     0189                     	;# 
   162     018C                     	;# 
   163     018D                     	;# 
   164     0000                     	;# 
   165     0001                     	;# 
   166     0002                     	;# 
   167     0003                     	;# 
   168     0004                     	;# 
   169     0005                     	;# 
   170     0006                     	;# 
   171     0007                     	;# 
   172     0008                     	;# 
   173     0009                     	;# 
   174     000A                     	;# 
   175     000B                     	;# 
   176     000C                     	;# 
   177     000D                     	;# 
   178     000E                     	;# 
   179     000E                     	;# 
   180     000F                     	;# 
   181     0010                     	;# 
   182     0011                     	;# 
   183     0012                     	;# 
   184     0013                     	;# 
   185     0014                     	;# 
   186     0015                     	;# 
   187     0015                     	;# 
   188     0016                     	;# 
   189     0017                     	;# 
   190     0018                     	;# 
   191     0019                     	;# 
   192     001A                     	;# 
   193     001B                     	;# 
   194     001B                     	;# 
   195     001C                     	;# 
   196     001D                     	;# 
   197     001E                     	;# 
   198     001F                     	;# 
   199     0081                     	;# 
   200     0085                     	;# 
   201     0086                     	;# 
   202     0087                     	;# 
   203     0088                     	;# 
   204     0089                     	;# 
   205     008C                     	;# 
   206     008D                     	;# 
   207     008E                     	;# 
   208     008F                     	;# 
   209     0090                     	;# 
   210     0091                     	;# 
   211     0092                     	;# 
   212     0093                     	;# 
   213     0093                     	;# 
   214     0093                     	;# 
   215     0094                     	;# 
   216     0095                     	;# 
   217     0096                     	;# 
   218     0097                     	;# 
   219     0098                     	;# 
   220     0099                     	;# 
   221     009A                     	;# 
   222     009B                     	;# 
   223     009C                     	;# 
   224     009D                     	;# 
   225     009E                     	;# 
   226     009F                     	;# 
   227     0105                     	;# 
   228     0107                     	;# 
   229     0108                     	;# 
   230     0109                     	;# 
   231     010C                     	;# 
   232     010C                     	;# 
   233     010D                     	;# 
   234     010E                     	;# 
   235     010F                     	;# 
   236     0185                     	;# 
   237     0187                     	;# 
   238     0188                     	;# 
   239     0189                     	;# 
   240     018C                     	;# 
   241     018D                     	;# 
   242     0000                     	;# 
   243     0001                     	;# 
   244     0002                     	;# 
   245     0003                     	;# 
   246     0004                     	;# 
   247     0005                     	;# 
   248     0006                     	;# 
   249     0007                     	;# 
   250     0008                     	;# 
   251     0009                     	;# 
   252     000A                     	;# 
   253     000B                     	;# 
   254     000C                     	;# 
   255     000D                     	;# 
   256     000E                     	;# 
   257     000E                     	;# 
   258     000F                     	;# 
   259     0010                     	;# 
   260     0011                     	;# 
   261     0012                     	;# 
   262     0013                     	;# 
   263     0014                     	;# 
   264     0015                     	;# 
   265     0015                     	;# 
   266     0016                     	;# 
   267     0017                     	;# 
   268     0018                     	;# 
   269     0019                     	;# 
   270     001A                     	;# 
   271     001B                     	;# 
   272     001B                     	;# 
   273     001C                     	;# 
   274     001D                     	;# 
   275     001E                     	;# 
   276     001F                     	;# 
   277     0081                     	;# 
   278     0085                     	;# 
   279     0086                     	;# 
   280     0087                     	;# 
   281     0088                     	;# 
   282     0089                     	;# 
   283     008C                     	;# 
   284     008D                     	;# 
   285     008E                     	;# 
   286     008F                     	;# 
   287     0090                     	;# 
   288     0091                     	;# 
   289     0092                     	;# 
   290     0093                     	;# 
   291     0093                     	;# 
   292     0093                     	;# 
   293     0094                     	;# 
   294     0095                     	;# 
   295     0096                     	;# 
   296     0097                     	;# 
   297     0098                     	;# 
   298     0099                     	;# 
   299     009A                     	;# 
   300     009B                     	;# 
   301     009C                     	;# 
   302     009D                     	;# 
   303     009E                     	;# 
   304     009F                     	;# 
   305     0105                     	;# 
   306     0107                     	;# 
   307     0108                     	;# 
   308     0109                     	;# 
   309     010C                     	;# 
   310     010C                     	;# 
   311     010D                     	;# 
   312     010E                     	;# 
   313     010F                     	;# 
   314     0185                     	;# 
   315     0187                     	;# 
   316     0188                     	;# 
   317     0189                     	;# 
   318     018C                     	;# 
   319     018D                     	;# 
   320     0000                     	;# 
   321     0001                     	;# 
   322     0002                     	;# 
   323     0003                     	;# 
   324     0004                     	;# 
   325     0005                     	;# 
   326     0006                     	;# 
   327     0007                     	;# 
   328     0008                     	;# 
   329     0009                     	;# 
   330     000A                     	;# 
   331     000B                     	;# 
   332     000C                     	;# 
   333     000D                     	;# 
   334     000E                     	;# 
   335     000E                     	;# 
   336     000F                     	;# 
   337     0010                     	;# 
   338     0011                     	;# 
   339     0012                     	;# 
   340     0013                     	;# 
   341     0014                     	;# 
   342     0015                     	;# 
   343     0015                     	;# 
   344     0016                     	;# 
   345     0017                     	;# 
   346     0018                     	;# 
   347     0019                     	;# 
   348     001A                     	;# 
   349     001B                     	;# 
   350     001B                     	;# 
   351     001C                     	;# 
   352     001D                     	;# 
   353     001E                     	;# 
   354     001F                     	;# 
   355     0081                     	;# 
   356     0085                     	;# 
   357     0086                     	;# 
   358     0087                     	;# 
   359     0088                     	;# 
   360     0089                     	;# 
   361     008C                     	;# 
   362     008D                     	;# 
   363     008E                     	;# 
   364     008F                     	;# 
   365     0090                     	;# 
   366     0091                     	;# 
   367     0092                     	;# 
   368     0093                     	;# 
   369     0093                     	;# 
   370     0093                     	;# 
   371     0094                     	;# 
   372     0095                     	;# 
   373     0096                     	;# 
   374     0097                     	;# 
   375     0098                     	;# 
   376     0099                     	;# 
   377     009A                     	;# 
   378     009B                     	;# 
   379     009C                     	;# 
   380     009D                     	;# 
   381     009E                     	;# 
   382     009F                     	;# 
   383     0105                     	;# 
   384     0107                     	;# 
   385     0108                     	;# 
   386     0109                     	;# 
   387     010C                     	;# 
   388     010C                     	;# 
   389     010D                     	;# 
   390     010E                     	;# 
   391     010F                     	;# 
   392     0185                     	;# 
   393     0187                     	;# 
   394     0188                     	;# 
   395     0189                     	;# 
   396     018C                     	;# 
   397     018D                     	;# 
   398     0000                     	;# 
   399     0001                     	;# 
   400     0002                     	;# 
   401     0003                     	;# 
   402     0004                     	;# 
   403     0005                     	;# 
   404     0006                     	;# 
   405     0007                     	;# 
   406     0008                     	;# 
   407     0009                     	;# 
   408     000A                     	;# 
   409     000B                     	;# 
   410     000C                     	;# 
   411     000D                     	;# 
   412     000E                     	;# 
   413     000E                     	;# 
   414     000F                     	;# 
   415     0010                     	;# 
   416     0011                     	;# 
   417     0012                     	;# 
   418     0013                     	;# 
   419     0014                     	;# 
   420     0015                     	;# 
   421     0015                     	;# 
   422     0016                     	;# 
   423     0017                     	;# 
   424     0018                     	;# 
   425     0019                     	;# 
   426     001A                     	;# 
   427     001B                     	;# 
   428     001B                     	;# 
   429     001C                     	;# 
   430     001D                     	;# 
   431     001E                     	;# 
   432     001F                     	;# 
   433     0081                     	;# 
   434     0085                     	;# 
   435     0086                     	;# 
   436     0087                     	;# 
   437     0088                     	;# 
   438     0089                     	;# 
   439     008C                     	;# 
   440     008D                     	;# 
   441     008E                     	;# 
   442     008F                     	;# 
   443     0090                     	;# 
   444     0091                     	;# 
   445     0092                     	;# 
   446     0093                     	;# 
   447     0093                     	;# 
   448     0093                     	;# 
   449     0094                     	;# 
   450     0095                     	;# 
   451     0096                     	;# 
   452     0097                     	;# 
   453     0098                     	;# 
   454     0099                     	;# 
   455     009A                     	;# 
   456     009B                     	;# 
   457     009C                     	;# 
   458     009D                     	;# 
   459     009E                     	;# 
   460     009F                     	;# 
   461     0105                     	;# 
   462     0107                     	;# 
   463     0108                     	;# 
   464     0109                     	;# 
   465     010C                     	;# 
   466     010C                     	;# 
   467     010D                     	;# 
   468     010E                     	;# 
   469     010F                     	;# 
   470     0185                     	;# 
   471     0187                     	;# 
   472     0188                     	;# 
   473     0189                     	;# 
   474     018C                     	;# 
   475     018D                     	;# 
   476                           
   477                           	psect	idataBANK0
   478     0A8E                     __pidataBANK0:
   479                           
   480                           ;initializer for _sec
   481     0A8E  3432               	retlw	50
   482     0A8F  3400               	retlw	0
   483                           
   484                           ;initializer for _min
   485     0A90  343B               	retlw	59
   486     0A91  3400               	retlw	0
   487                           
   488                           ;initializer for _hour
   489     0A92  3410               	retlw	16
   490     0A93  3400               	retlw	0
   491                           
   492                           ;initializer for _date
   493     0A94  3408               	retlw	8
   494     0A95  3400               	retlw	0
   495                           
   496                           ;initializer for _month
   497     0A96  3408               	retlw	8
   498     0A97  3400               	retlw	0
   499                           
   500                           ;initializer for _year
   501     0A98  3417               	retlw	23
   502     0A99  3400               	retlw	0
   503     0008                     _PORTDbits	set	8
   504     0008                     _PORTD	set	8
   505     0006                     _PORTB	set	6
   506     0005                     _PORTA	set	5
   507     0006                     _PORTBbits	set	6
   508     000B                     _INTCONbits	set	11
   509     0013                     _SSPBUF	set	19
   510     0014                     _SSPCON	set	20
   511     0043                     _RD3	set	67
   512     0047                     _RD7	set	71
   513     0046                     _RD6	set	70
   514     0045                     _RD5	set	69
   515     0044                     _RD4	set	68
   516     0063                     _SSPIF	set	99
   517     005E                     _PEIE	set	94
   518     005F                     _GIE	set	95
   519     0081                     _OPTION_REGbits	set	129
   520     0096                     _IOCB	set	150
   521     0095                     _WPUB	set	149
   522     0086                     _TRISB	set	134
   523     0088                     _TRISD	set	136
   524     0085                     _TRISA	set	133
   525     008F                     _OSCCONbits	set	143
   526     0091                     _SSPCON2bits	set	145
   527     0087                     _TRISCbits	set	135
   528     0094                     _SSPSTAT	set	148
   529     0093                     _SSPADD	set	147
   530     0091                     _SSPCON2	set	145
   531     0463                     _SSPIE	set	1123
   532     043C                     _TRISC4	set	1084
   533     043B                     _TRISC3	set	1083
   534     0189                     _ANSELH	set	393
   535     0188                     _ANSEL	set	392
   536                           
   537                           	psect	strings
   538     0800                     __pstrings:
   539     0800                     stringtab:
   540     0800                     __stringtab:
   541                           
   542                           ;	String table - string pointers are 1 byte each
   543     0800  1BFF               	btfsc	btemp+1,7
   544     0801  280A               	ljmp	stringcode
   545     0802  1383               	bcf	3,7
   546     0803  187F               	btfsc	btemp+1,0
   547     0804  1783               	bsf	3,7
   548     0805  0800               	movf	0,w
   549     0806  0A84               	incf	4,f
   550     0807  1903               	skipnz
   551     0808  0AFF               	incf	btemp+1,f
   552     0809  0008               	return
   553     080A                     stringcode:
   554     080A                     stringdir:
   555     080A  3008               	movlw	high stringdir
   556     080B  008A               	movwf	10
   557     080C  0804               	movf	4,w
   558     080D  0A84               	incf	4,f
   559     080E  0782               	addwf	2,f
   560     080F                     __stringbase:
   561     080F  3400               	retlw	0
   562     0810                     __end_of__stringtab:
   563     0810                     STR_4:
   564     0810  3444               	retlw	68	;'D'
   565     0811  3461               	retlw	97	;'a'
   566     0812  3474               	retlw	116	;'t'
   567     0813  3465               	retlw	101	;'e'
   568     0814  343A               	retlw	58	;':'
   569     0815  3420               	retlw	32	;' '
   570     0816  3400               	retlw	0
   571     0817                     STR_1:
   572     0817  3453               	retlw	83	;'S'
   573     0818  3431               	retlw	49	;'1'
   574     0819  343A               	retlw	58	;':'
   575     081A  3420               	retlw	32	;' '
   576     081B  3400               	retlw	0
   577     081C                     STR_2:
   578     081C  3420               	retlw	32	;' '
   579     081D  3420               	retlw	32	;' '
   580     081E  3420               	retlw	32	;' '
   581     081F  3400               	retlw	0
   582     0817                     
   583                           	psect	cinit
   584     0013                     start_initialization:	
   585                           ; #config settings
   586                           
   587     0013                     __initialization:
   588                           
   589                           ; Initialize objects allocated to BANK0
   590     0013  1383               	bcf	3,7	;select IRP bank0
   591     0014  305E               	movlw	low (__pdataBANK0+12)
   592     0015  00FD               	movwf	btemp+-1
   593     0016  300A               	movlw	high __pidataBANK0
   594     0017  00FE               	movwf	btemp
   595     0018  308E               	movlw	low __pidataBANK0
   596     0019  00FF               	movwf	btemp+1
   597     001A  3052               	movlw	low __pdataBANK0
   598     001B  0084               	movwf	4
   599     001C  120A  158A  22C5  120A  118A  	fcall	init_ram0
   600                           
   601                           ; Clear objects allocated to BANK0
   602     0021  01C5               	clrf	__pbssBANK0& (0+127)
   603     0022  01C6               	clrf	(__pbssBANK0+1)& (0+127)
   604     0023  01C7               	clrf	(__pbssBANK0+2)& (0+127)
   605     0024  01C8               	clrf	(__pbssBANK0+3)& (0+127)
   606     0025  01C9               	clrf	(__pbssBANK0+4)& (0+127)
   607     0026  01CA               	clrf	(__pbssBANK0+5)& (0+127)
   608     0027  01CB               	clrf	(__pbssBANK0+6)& (0+127)
   609     0028  01CC               	clrf	(__pbssBANK0+7)& (0+127)
   610     0029  01CD               	clrf	(__pbssBANK0+8)& (0+127)
   611     002A  01CE               	clrf	(__pbssBANK0+9)& (0+127)
   612     002B  01CF               	clrf	(__pbssBANK0+10)& (0+127)
   613     002C  01D0               	clrf	(__pbssBANK0+11)& (0+127)
   614     002D  01D1               	clrf	(__pbssBANK0+12)& (0+127)
   615     002E                     end_of_initialization:	
   616                           ;End of C runtime variable initialization code
   617                           
   618     002E                     __end_of__initialization:
   619     002E  0183               	clrf	3
   620     002F  120A  118A  2832   	ljmp	_main	;jump to C main() function
   621                           
   622                           	psect	bssBANK0
   623     0045                     __pbssBANK0:
   624     0045                     _slaveVal:
   625     0045                     	ds	1
   626     0046                     _buffer3:
   627     0046                     	ds	4
   628     004A                     _buffer2:
   629     004A                     	ds	4
   630     004E                     _buffer:
   631     004E                     	ds	4
   632                           
   633                           	psect	dataBANK0
   634     0052                     __pdataBANK0:
   635     0052                     _sec:
   636     0052                     	ds	2
   637     0054                     _min:
   638     0054                     	ds	2
   639     0056                     _hour:
   640     0056                     	ds	2
   641     0058                     _date:
   642     0058                     	ds	2
   643     005A                     _month:
   644     005A                     	ds	2
   645     005C                     _year:
   646     005C                     	ds	2
   647                           
   648                           	psect	inittext
   649     0AC1                     init_fetch0:	
   650                           ;	Called with low address in FSR and high address in W
   651                           
   652     0AC1  087E               	movf	btemp,w
   653     0AC2  008A               	movwf	10
   654     0AC3  087F               	movf	btemp+1,w
   655     0AC4  0082               	movwf	2
   656     0AC5                     init_ram0:	
   657                           ;Called with:
   658                           ;	high address of idata address in btemp 
   659                           ;	low address of idata address in btemp+1 
   660                           ;	low address of data in FSR
   661                           ;	high address + 1 of data in btemp-1
   662                           
   663     0AC5  120A  158A  22C1  120A  158A  	fcall	init_fetch0
   664     0ACA  0080               	movwf	0
   665     0ACB  0A84               	incf	4,f
   666     0ACC  0804               	movf	4,w
   667     0ACD  067D               	xorwf	btemp+-1,w
   668     0ACE  1903               	btfsc	3,2
   669     0ACF  3400               	retlw	0
   670     0AD0  0AFF               	incf	btemp+1,f
   671     0AD1  1903               	btfsc	3,2
   672     0AD2  0AFE               	incf	btemp,f
   673     0AD3  2AC5               	goto	init_ram0
   674                           
   675                           	psect	cstackBANK1
   676     00A0                     __pcstackBANK1:
   677     00A0                     main@hour0:
   678                           
   679                           ; 1 bytes @ 0x0
   680     00A0                     	ds	1
   681     00A1                     main@hour1:
   682                           
   683                           ; 1 bytes @ 0x1
   684     00A1                     	ds	1
   685     00A2                     main@date0:
   686                           
   687                           ; 1 bytes @ 0x2
   688     00A2                     	ds	1
   689     00A3                     main@date1:
   690                           
   691                           ; 1 bytes @ 0x3
   692     00A3                     	ds	1
   693     00A4                     main@month0:
   694                           
   695                           ; 1 bytes @ 0x4
   696     00A4                     	ds	1
   697     00A5                     main@month1:
   698                           
   699                           ; 1 bytes @ 0x5
   700     00A5                     	ds	1
   701     00A6                     main@year0:
   702                           
   703                           ; 1 bytes @ 0x6
   704     00A6                     	ds	1
   705     00A7                     main@year1:
   706                           
   707                           ; 1 bytes @ 0x7
   708     00A7                     	ds	1
   709                           
   710                           	psect	cstackCOMMON
   711     0070                     __pcstackCOMMON:
   712     0070                     ?_setup:
   713     0070                     ?_Lcd_Clear:	
   714                           ; 1 bytes @ 0x0
   715                           
   716     0070                     ?_Lcd_Write_Char:	
   717                           ; 1 bytes @ 0x0
   718                           
   719     0070                     ?_Lcd_Init:	
   720                           ; 1 bytes @ 0x0
   721                           
   722     0070                     ?_I2C_Master_Wait:	
   723                           ; 1 bytes @ 0x0
   724                           
   725     0070                     ?_I2C_Master_Start:	
   726                           ; 1 bytes @ 0x0
   727                           
   728     0070                     ?_I2C_Master_RepeatedStart:	
   729                           ; 1 bytes @ 0x0
   730                           
   731     0070                     ?_I2C_Master_Stop:	
   732                           ; 1 bytes @ 0x0
   733                           
   734     0070                     ?_isr:	
   735                           ; 1 bytes @ 0x0
   736                           
   737     0070                     ?_main:	
   738                           ; 1 bytes @ 0x0
   739                           
   740     0070                     ?_Lcd_Port:	
   741                           ; 1 bytes @ 0x0
   742                           
   743     0070                     ?_Lcd_Cmd:	
   744                           ; 1 bytes @ 0x0
   745                           
   746     0070                     ?i1_I2C_Master_Wait:	
   747                           ; 1 bytes @ 0x0
   748                           
   749     0070                     ??i1_I2C_Master_Wait:	
   750                           ; 1 bytes @ 0x0
   751                           
   752     0070                     ?i1_I2C_Master_Start:	
   753                           ; 1 bytes @ 0x0
   754                           
   755     0070                     ??i1_I2C_Master_Start:	
   756                           ; 1 bytes @ 0x0
   757                           
   758     0070                     ?i1_I2C_Master_Stop:	
   759                           ; 1 bytes @ 0x0
   760                           
   761     0070                     ??i1_I2C_Master_Stop:	
   762                           ; 1 bytes @ 0x0
   763                           
   764     0070                     ?_ioc_init:	
   765                           ; 1 bytes @ 0x0
   766                           
   767     0070                     ?i1___wmul:	
   768                           ; 2 bytes @ 0x0
   769                           
   770     0070                     ?i1___awdiv:	
   771                           ; 2 bytes @ 0x0
   772                           
   773     0070                     ?i1___awmod:	
   774                           ; 2 bytes @ 0x0
   775                           
   776     0070                     i1___wmul@multiplier:	
   777                           ; 2 bytes @ 0x0
   778                           
   779     0070                     i1___awdiv@divisor:	
   780                           ; 2 bytes @ 0x0
   781                           
   782     0070                     i1___awmod@divisor:	
   783                           ; 2 bytes @ 0x0
   784                           
   785                           
   786                           ; 2 bytes @ 0x0
   787     0070                     	ds	2
   788     0072                     i1___wmul@multiplicand:
   789     0072                     i1___awdiv@dividend:	
   790                           ; 2 bytes @ 0x2
   791                           
   792     0072                     i1___awmod@dividend:	
   793                           ; 2 bytes @ 0x2
   794                           
   795                           
   796                           ; 2 bytes @ 0x2
   797     0072                     	ds	2
   798     0074                     ??i1___wmul:
   799     0074                     ??i1___awdiv:	
   800                           ; 1 bytes @ 0x4
   801                           
   802     0074                     ??i1___awmod:	
   803                           ; 1 bytes @ 0x4
   804                           
   805     0074                     i1___wmul@product:	
   806                           ; 1 bytes @ 0x4
   807                           
   808                           
   809                           ; 2 bytes @ 0x4
   810     0074                     	ds	1
   811     0075                     i1___awdiv@counter:
   812     0075                     i1___awmod@counter:	
   813                           ; 1 bytes @ 0x5
   814                           
   815                           
   816                           ; 1 bytes @ 0x5
   817     0075                     	ds	1
   818     0076                     i1___awdiv@sign:
   819     0076                     i1___awmod@sign:	
   820                           ; 1 bytes @ 0x6
   821                           
   822                           
   823                           ; 1 bytes @ 0x6
   824     0076                     	ds	1
   825     0077                     i1___awdiv@quotient:
   826                           
   827                           ; 2 bytes @ 0x7
   828     0077                     	ds	2
   829     0079                     ?i1_d2b:
   830     0079                     i1d2b@to_convert:	
   831                           ; 2 bytes @ 0x9
   832                           
   833                           
   834                           ; 2 bytes @ 0x9
   835     0079                     	ds	2
   836     007B                     ?i1_I2C_Master_Write:
   837     007B                     ??i1_d2b:	
   838                           ; 1 bytes @ 0xB
   839                           
   840     007B                     i1I2C_Master_Write@d:	
   841                           ; 1 bytes @ 0xB
   842                           
   843                           
   844                           ; 2 bytes @ 0xB
   845     007B                     	ds	2
   846     007D                     ??i1_I2C_Master_Write:
   847                           
   848                           	psect	cstackBANK0
   849     0020                     __pcstackBANK0:	
   850                           ; 1 bytes @ 0xD
   851                           
   852     0020                     i1d2b@digit:
   853                           
   854                           ; 2 bytes @ 0x0
   855     0020                     	ds	2
   856     0022                     i1d2b@bcd:
   857                           
   858                           ; 2 bytes @ 0x2
   859     0022                     	ds	2
   860     0024                     i1d2b@multiplier:
   861                           
   862                           ; 2 bytes @ 0x4
   863     0024                     	ds	2
   864     0026                     ??_isr:
   865                           
   866                           ; 1 bytes @ 0x6
   867     0026                     	ds	6
   868     002C                     ??_ioc_init:
   869     002C                     ??_I2C_Master_Wait:	
   870                           ; 1 bytes @ 0xC
   871                           
   872     002C                     ??_I2C_Master_Start:	
   873                           ; 1 bytes @ 0xC
   874                           
   875     002C                     ??_I2C_Master_RepeatedStart:	
   876                           ; 1 bytes @ 0xC
   877                           
   878     002C                     ??_I2C_Master_Stop:	
   879                           ; 1 bytes @ 0xC
   880                           
   881     002C                     ??_Lcd_Port:	
   882                           ; 1 bytes @ 0xC
   883                           
   884     002C                     ?_I2C_Master_Read:	
   885                           ; 1 bytes @ 0xC
   886                           
   887     002C                     ?___wmul:	
   888                           ; 2 bytes @ 0xC
   889                           
   890     002C                     ?___awdiv:	
   891                           ; 2 bytes @ 0xC
   892                           
   893     002C                     ?___awmod:	
   894                           ; 2 bytes @ 0xC
   895                           
   896     002C                     ?___lldiv:	
   897                           ; 2 bytes @ 0xC
   898                           
   899     002C                     Lcd_Port@a:	
   900                           ; 4 bytes @ 0xC
   901                           
   902     002C                     ioc_init@pin:	
   903                           ; 1 bytes @ 0xC
   904                           
   905     002C                     I2C_Master_Read@a:	
   906                           ; 1 bytes @ 0xC
   907                           
   908     002C                     ___wmul@multiplier:	
   909                           ; 2 bytes @ 0xC
   910                           
   911     002C                     ___awdiv@divisor:	
   912                           ; 2 bytes @ 0xC
   913                           
   914     002C                     ___awmod@divisor:	
   915                           ; 2 bytes @ 0xC
   916                           
   917     002C                     ___lldiv@divisor:	
   918                           ; 2 bytes @ 0xC
   919                           
   920                           
   921                           ; 4 bytes @ 0xC
   922     002C                     	ds	1
   923     002D                     ??_Lcd_Write_Char:
   924     002D                     ??_Lcd_Cmd:	
   925                           ; 1 bytes @ 0xD
   926                           
   927                           
   928                           ; 1 bytes @ 0xD
   929     002D                     	ds	1
   930     002E                     ??_I2C_Master_Read:
   931     002E                     Lcd_Write_Char@temp:	
   932                           ; 1 bytes @ 0xE
   933                           
   934     002E                     ___wmul@multiplicand:	
   935                           ; 1 bytes @ 0xE
   936                           
   937     002E                     ___awdiv@dividend:	
   938                           ; 2 bytes @ 0xE
   939                           
   940     002E                     ___awmod@dividend:	
   941                           ; 2 bytes @ 0xE
   942                           
   943                           
   944                           ; 2 bytes @ 0xE
   945     002E                     	ds	1
   946     002F                     Lcd_Cmd@a:
   947     002F                     Lcd_Write_Char@y:	
   948                           ; 1 bytes @ 0xF
   949                           
   950                           
   951                           ; 1 bytes @ 0xF
   952     002F                     	ds	1
   953     0030                     ??_Lcd_Clear:
   954     0030                     ?_Lcd_Set_Cursor:	
   955                           ; 1 bytes @ 0x10
   956                           
   957     0030                     ??_Lcd_Init:	
   958                           ; 1 bytes @ 0x10
   959                           
   960     0030                     ??___wmul:	
   961                           ; 1 bytes @ 0x10
   962                           
   963     0030                     ??___awdiv:	
   964                           ; 1 bytes @ 0x10
   965                           
   966     0030                     ??___awmod:	
   967                           ; 1 bytes @ 0x10
   968                           
   969     0030                     Lcd_Set_Cursor@b:	
   970                           ; 1 bytes @ 0x10
   971                           
   972     0030                     Lcd_Write_Char@a:	
   973                           ; 1 bytes @ 0x10
   974                           
   975     0030                     I2C_Master_Read@temp:	
   976                           ; 1 bytes @ 0x10
   977                           
   978     0030                     ___wmul@product:	
   979                           ; 2 bytes @ 0x10
   980                           
   981     0030                     ___lldiv@dividend:	
   982                           ; 2 bytes @ 0x10
   983                           
   984                           
   985                           ; 4 bytes @ 0x10
   986     0030                     	ds	1
   987     0031                     ??_Lcd_Set_Cursor:
   988     0031                     ?_Lcd_Write_String:	
   989                           ; 1 bytes @ 0x11
   990                           
   991     0031                     ___awdiv@counter:	
   992                           ; 1 bytes @ 0x11
   993                           
   994     0031                     ___awmod@counter:	
   995                           ; 1 bytes @ 0x11
   996                           
   997     0031                     Lcd_Write_String@a:	
   998                           ; 1 bytes @ 0x11
   999                           
  1000                           
  1001                           ; 2 bytes @ 0x11
  1002     0031                     	ds	1
  1003     0032                     ?_b2d:
  1004     0032                     Lcd_Set_Cursor@a:	
  1005                           ; 2 bytes @ 0x12
  1006                           
  1007     0032                     ___awdiv@sign:	
  1008                           ; 1 bytes @ 0x12
  1009                           
  1010     0032                     ___awmod@sign:	
  1011                           ; 1 bytes @ 0x12
  1012                           
  1013     0032                     b2d@to_convert:	
  1014                           ; 1 bytes @ 0x12
  1015                           
  1016                           
  1017                           ; 2 bytes @ 0x12
  1018     0032                     	ds	1
  1019     0033                     ??_Lcd_Write_String:
  1020     0033                     Lcd_Set_Cursor@z:	
  1021                           ; 1 bytes @ 0x13
  1022                           
  1023     0033                     ___awdiv@quotient:	
  1024                           ; 1 bytes @ 0x13
  1025                           
  1026                           
  1027                           ; 2 bytes @ 0x13
  1028     0033                     	ds	1
  1029     0034                     ??_b2d:
  1030     0034                     ??___lldiv:	
  1031                           ; 1 bytes @ 0x14
  1032                           
  1033     0034                     Lcd_Set_Cursor@y:	
  1034                           ; 1 bytes @ 0x14
  1035                           
  1036                           
  1037                           ; 1 bytes @ 0x14
  1038     0034                     	ds	1
  1039     0035                     ?_uint8ToString:
  1040     0035                     ?_d2b:	
  1041                           ; 1 bytes @ 0x15
  1042                           
  1043     0035                     uint8ToString@str:	
  1044                           ; 2 bytes @ 0x15
  1045                           
  1046     0035                     Lcd_Set_Cursor@temp:	
  1047                           ; 1 bytes @ 0x15
  1048                           
  1049     0035                     d2b@to_convert:	
  1050                           ; 1 bytes @ 0x15
  1051                           
  1052     0035                     ___lldiv@quotient:	
  1053                           ; 2 bytes @ 0x15
  1054                           
  1055                           
  1056                           ; 4 bytes @ 0x15
  1057     0035                     	ds	1
  1058     0036                     ??_uint8ToString:
  1059     0036                     Lcd_Write_String@i:	
  1060                           ; 1 bytes @ 0x16
  1061                           
  1062                           
  1063                           ; 2 bytes @ 0x16
  1064     0036                     	ds	1
  1065     0037                     ??_d2b:
  1066     0037                     d2b@digit:	
  1067                           ; 1 bytes @ 0x17
  1068                           
  1069                           
  1070                           ; 2 bytes @ 0x17
  1071     0037                     	ds	2
  1072     0039                     uint8ToString@num:
  1073     0039                     ___lldiv@counter:	
  1074                           ; 1 bytes @ 0x19
  1075                           
  1076     0039                     d2b@bcd:	
  1077                           ; 1 bytes @ 0x19
  1078                           
  1079                           
  1080                           ; 2 bytes @ 0x19
  1081     0039                     	ds	1
  1082     003A                     ?_I2C_Master_Init:
  1083     003A                     uint8ToString@tempChar:	
  1084                           ; 1 bytes @ 0x1A
  1085                           
  1086     003A                     I2C_Master_Init@c:	
  1087                           ; 1 bytes @ 0x1A
  1088                           
  1089                           
  1090                           ; 4 bytes @ 0x1A
  1091     003A                     	ds	1
  1092     003B                     uint8ToString@i:
  1093     003B                     d2b@multiplier:	
  1094                           ; 1 bytes @ 0x1B
  1095                           
  1096                           
  1097                           ; 2 bytes @ 0x1B
  1098     003B                     	ds	1
  1099     003C                     uint8ToString@left:
  1100                           
  1101                           ; 1 bytes @ 0x1C
  1102     003C                     	ds	1
  1103     003D                     ?_I2C_Master_Write:
  1104     003D                     uint8ToString@right:	
  1105                           ; 1 bytes @ 0x1D
  1106                           
  1107     003D                     I2C_Master_Write@d:	
  1108                           ; 1 bytes @ 0x1D
  1109                           
  1110                           
  1111                           ; 2 bytes @ 0x1D
  1112     003D                     	ds	1
  1113     003E                     ??_I2C_Master_Init:
  1114     003E                     uint8ToString@temp:	
  1115                           ; 1 bytes @ 0x1E
  1116                           
  1117                           
  1118                           ; 1 bytes @ 0x1E
  1119     003E                     	ds	1
  1120     003F                     ??_I2C_Master_Write:
  1121                           
  1122                           ; 1 bytes @ 0x1F
  1123     003F                     	ds	3
  1124     0042                     ??_setup:
  1125     0042                     ??_main:	
  1126                           ; 1 bytes @ 0x22
  1127                           
  1128                           
  1129                           ; 1 bytes @ 0x22
  1130     0042                     	ds	3
  1131                           
  1132                           	psect	maintext
  1133     0032                     __pmaintext:	
  1134 ;;
  1135 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1136 ;;
  1137 ;; *************** function _main *****************
  1138 ;; Defined at:
  1139 ;;		line 165 in file "main.c"
  1140 ;; Parameters:    Size  Location     Type
  1141 ;;		None
  1142 ;; Auto vars:     Size  Location     Type
  1143 ;;  year1           1    7[BANK1 ] unsigned char 
  1144 ;;  year0           1    6[BANK1 ] unsigned char 
  1145 ;;  month1          1    5[BANK1 ] unsigned char 
  1146 ;;  month0          1    4[BANK1 ] unsigned char 
  1147 ;;  date1           1    3[BANK1 ] unsigned char 
  1148 ;;  date0           1    2[BANK1 ] unsigned char 
  1149 ;;  hour1           1    1[BANK1 ] unsigned char 
  1150 ;;  hour0           1    0[BANK1 ] unsigned char 
  1151 ;; Return value:  Size  Location     Type
  1152 ;;                  1    wreg      void 
  1153 ;; Registers used:
  1154 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1155 ;; Tracked objects:
  1156 ;;		On entry : B00/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1160 ;;      Params:         0       0       0       0       0
  1161 ;;      Locals:         0       0       8       0       0
  1162 ;;      Temps:          0       3       0       0       0
  1163 ;;      Totals:         0       3       8       0       0
  1164 ;;Total ram usage:       11 bytes
  1165 ;; Hardware stack levels required when called: 7
  1166 ;; This function calls:
  1167 ;;		_I2C_Master_Read
  1168 ;;		_I2C_Master_RepeatedStart
  1169 ;;		_I2C_Master_Start
  1170 ;;		_I2C_Master_Stop
  1171 ;;		_I2C_Master_Write
  1172 ;;		_Lcd_Clear
  1173 ;;		_Lcd_Set_Cursor
  1174 ;;		_Lcd_Write_Char
  1175 ;;		_Lcd_Write_String
  1176 ;;		___awdiv
  1177 ;;		___awmod
  1178 ;;		_b2d
  1179 ;;		_d2b
  1180 ;;		_setup
  1181 ;;		_uint8ToString
  1182 ;; This function is called by:
  1183 ;;		Startup code after reset
  1184 ;; This function uses a non-reentrant model
  1185 ;;
  1186                           
  1187     0032                     _main:	
  1188                           ;psect for function _main
  1189                           
  1190     0032                     l2905:	
  1191                           ;incstack = 0
  1192                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1193                           
  1194                           
  1195                           ;main.c: 166:     setup();
  1196     0032  120A  158A  2787  120A  118A  	fcall	_setup
  1197     0037                     l2907:
  1198                           
  1199                           ;main.c: 169:     I2C_Master_Start();
  1200     0037  120A  158A  2268  120A  118A  	fcall	_I2C_Master_Start
  1201     003C                     l2909:
  1202                           
  1203                           ;main.c: 170:     I2C_Master_Write(0xD0);
  1204     003C  30D0               	movlw	208
  1205     003D  1283               	bcf	3,5	;RP0=0, select bank0
  1206     003E  1303               	bcf	3,6	;RP1=0, select bank0
  1207     003F  00BD               	movwf	I2C_Master_Write@d
  1208     0040  3000               	movlw	0
  1209     0041  00BE               	movwf	I2C_Master_Write@d+1
  1210     0042  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1211     0047                     l2911:
  1212                           
  1213                           ;main.c: 171:     I2C_Master_Write(0x00);
  1214     0047  3000               	movlw	0
  1215     0048  1283               	bcf	3,5	;RP0=0, select bank0
  1216     0049  1303               	bcf	3,6	;RP1=0, select bank0
  1217     004A  00BD               	movwf	I2C_Master_Write@d
  1218     004B  00BE               	movwf	I2C_Master_Write@d+1
  1219     004C  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1220     0051                     l2913:
  1221                           
  1222                           ;main.c: 172:     I2C_Master_Write(d2b(sec));
  1223     0051  1283               	bcf	3,5	;RP0=0, select bank0
  1224     0052  1303               	bcf	3,6	;RP1=0, select bank0
  1225     0053  0853               	movf	_sec+1,w
  1226     0054  00B6               	movwf	d2b@to_convert+1
  1227     0055  0852               	movf	_sec,w
  1228     0056  00B5               	movwf	d2b@to_convert
  1229     0057  120A  158A  258C  120A  118A  	fcall	_d2b
  1230     005C  1283               	bcf	3,5	;RP0=0, select bank0
  1231     005D  1303               	bcf	3,6	;RP1=0, select bank0
  1232     005E  0836               	movf	?_d2b+1,w
  1233     005F  00BE               	movwf	I2C_Master_Write@d+1
  1234     0060  0835               	movf	?_d2b,w
  1235     0061  00BD               	movwf	I2C_Master_Write@d
  1236     0062  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1237     0067                     l2915:
  1238                           
  1239                           ;main.c: 173:     I2C_Master_Stop();
  1240     0067  120A  158A  2271  120A  118A  	fcall	_I2C_Master_Stop
  1241     006C                     l2917:
  1242                           
  1243                           ;main.c: 174:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1244     006C  3002               	movlw	2
  1245     006D  1283               	bcf	3,5	;RP0=0, select bank0
  1246     006E  1303               	bcf	3,6	;RP1=0, select bank0
  1247     006F  00C4               	movwf	??_main+2
  1248     0070  3004               	movlw	4
  1249     0071  00C3               	movwf	??_main+1
  1250     0072  30B9               	movlw	185
  1251     0073  00C2               	movwf	??_main
  1252     0074                     u2347:
  1253     0074  0BC2               	decfsz	??_main,f
  1254     0075  2874               	goto	u2347
  1255     0076  0BC3               	decfsz	??_main+1,f
  1256     0077  2874               	goto	u2347
  1257     0078  0BC4               	decfsz	??_main+2,f
  1258     0079  2874               	goto	u2347
  1259     007A  287B               	nop2
  1260     007B                     l2919:
  1261                           
  1262                           ;main.c: 178:     I2C_Master_Start();
  1263     007B  120A  158A  2268  120A  118A  	fcall	_I2C_Master_Start
  1264     0080                     l2921:
  1265                           
  1266                           ;main.c: 179:     I2C_Master_Write(0xD0);
  1267     0080  30D0               	movlw	208
  1268     0081  1283               	bcf	3,5	;RP0=0, select bank0
  1269     0082  1303               	bcf	3,6	;RP1=0, select bank0
  1270     0083  00BD               	movwf	I2C_Master_Write@d
  1271     0084  3000               	movlw	0
  1272     0085  00BE               	movwf	I2C_Master_Write@d+1
  1273     0086  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1274     008B                     l2923:
  1275                           
  1276                           ;main.c: 180:     I2C_Master_Write(0x01);
  1277     008B  3001               	movlw	1
  1278     008C  1283               	bcf	3,5	;RP0=0, select bank0
  1279     008D  1303               	bcf	3,6	;RP1=0, select bank0
  1280     008E  00BD               	movwf	I2C_Master_Write@d
  1281     008F  3000               	movlw	0
  1282     0090  00BE               	movwf	I2C_Master_Write@d+1
  1283     0091  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1284     0096                     l2925:
  1285                           
  1286                           ;main.c: 181:     I2C_Master_Write(d2b(min));
  1287     0096  1283               	bcf	3,5	;RP0=0, select bank0
  1288     0097  1303               	bcf	3,6	;RP1=0, select bank0
  1289     0098  0855               	movf	_min+1,w
  1290     0099  00B6               	movwf	d2b@to_convert+1
  1291     009A  0854               	movf	_min,w
  1292     009B  00B5               	movwf	d2b@to_convert
  1293     009C  120A  158A  258C  120A  118A  	fcall	_d2b
  1294     00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1295     00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1296     00A3  0836               	movf	?_d2b+1,w
  1297     00A4  00BE               	movwf	I2C_Master_Write@d+1
  1298     00A5  0835               	movf	?_d2b,w
  1299     00A6  00BD               	movwf	I2C_Master_Write@d
  1300     00A7  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1301     00AC                     l2927:
  1302                           
  1303                           ;main.c: 182:     I2C_Master_Stop();
  1304     00AC  120A  158A  2271  120A  118A  	fcall	_I2C_Master_Stop
  1305     00B1                     l2929:
  1306                           
  1307                           ;main.c: 183:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1308     00B1  3002               	movlw	2
  1309     00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1310     00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1311     00B4  00C4               	movwf	??_main+2
  1312     00B5  3004               	movlw	4
  1313     00B6  00C3               	movwf	??_main+1
  1314     00B7  30B9               	movlw	185
  1315     00B8  00C2               	movwf	??_main
  1316     00B9                     u2357:
  1317     00B9  0BC2               	decfsz	??_main,f
  1318     00BA  28B9               	goto	u2357
  1319     00BB  0BC3               	decfsz	??_main+1,f
  1320     00BC  28B9               	goto	u2357
  1321     00BD  0BC4               	decfsz	??_main+2,f
  1322     00BE  28B9               	goto	u2357
  1323     00BF  28C0               	nop2
  1324     00C0                     l2931:
  1325                           
  1326                           ;main.c: 186:     I2C_Master_Start();
  1327     00C0  120A  158A  2268  120A  118A  	fcall	_I2C_Master_Start
  1328     00C5                     l2933:
  1329                           
  1330                           ;main.c: 187:     I2C_Master_Write(0xD0);
  1331     00C5  30D0               	movlw	208
  1332     00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1333     00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1334     00C8  00BD               	movwf	I2C_Master_Write@d
  1335     00C9  3000               	movlw	0
  1336     00CA  00BE               	movwf	I2C_Master_Write@d+1
  1337     00CB  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1338     00D0                     l2935:
  1339                           
  1340                           ;main.c: 188:     I2C_Master_Write(0x02);
  1341     00D0  3002               	movlw	2
  1342     00D1  1283               	bcf	3,5	;RP0=0, select bank0
  1343     00D2  1303               	bcf	3,6	;RP1=0, select bank0
  1344     00D3  00BD               	movwf	I2C_Master_Write@d
  1345     00D4  3000               	movlw	0
  1346     00D5  00BE               	movwf	I2C_Master_Write@d+1
  1347     00D6  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1348     00DB                     l2937:
  1349                           
  1350                           ;main.c: 189:     I2C_Master_Write(d2b(hour));
  1351     00DB  1283               	bcf	3,5	;RP0=0, select bank0
  1352     00DC  1303               	bcf	3,6	;RP1=0, select bank0
  1353     00DD  0857               	movf	_hour+1,w
  1354     00DE  00B6               	movwf	d2b@to_convert+1
  1355     00DF  0856               	movf	_hour,w
  1356     00E0  00B5               	movwf	d2b@to_convert
  1357     00E1  120A  158A  258C  120A  118A  	fcall	_d2b
  1358     00E6  1283               	bcf	3,5	;RP0=0, select bank0
  1359     00E7  1303               	bcf	3,6	;RP1=0, select bank0
  1360     00E8  0836               	movf	?_d2b+1,w
  1361     00E9  00BE               	movwf	I2C_Master_Write@d+1
  1362     00EA  0835               	movf	?_d2b,w
  1363     00EB  00BD               	movwf	I2C_Master_Write@d
  1364     00EC  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1365     00F1                     l2939:
  1366                           
  1367                           ;main.c: 190:     I2C_Master_Stop();
  1368     00F1  120A  158A  2271  120A  118A  	fcall	_I2C_Master_Stop
  1369     00F6                     l2941:
  1370                           
  1371                           ;main.c: 191:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1372     00F6  3002               	movlw	2
  1373     00F7  1283               	bcf	3,5	;RP0=0, select bank0
  1374     00F8  1303               	bcf	3,6	;RP1=0, select bank0
  1375     00F9  00C4               	movwf	??_main+2
  1376     00FA  3004               	movlw	4
  1377     00FB  00C3               	movwf	??_main+1
  1378     00FC  30B9               	movlw	185
  1379     00FD  00C2               	movwf	??_main
  1380     00FE                     u2367:
  1381     00FE  0BC2               	decfsz	??_main,f
  1382     00FF  28FE               	goto	u2367
  1383     0100  0BC3               	decfsz	??_main+1,f
  1384     0101  28FE               	goto	u2367
  1385     0102  0BC4               	decfsz	??_main+2,f
  1386     0103  28FE               	goto	u2367
  1387     0104  2905               	nop2
  1388     0105                     l2943:
  1389                           
  1390                           ;main.c: 195:     I2C_Master_Start();
  1391     0105  120A  158A  2268  120A  118A  	fcall	_I2C_Master_Start
  1392     010A                     l2945:
  1393                           
  1394                           ;main.c: 196:     I2C_Master_Write(0xD0);
  1395     010A  30D0               	movlw	208
  1396     010B  1283               	bcf	3,5	;RP0=0, select bank0
  1397     010C  1303               	bcf	3,6	;RP1=0, select bank0
  1398     010D  00BD               	movwf	I2C_Master_Write@d
  1399     010E  3000               	movlw	0
  1400     010F  00BE               	movwf	I2C_Master_Write@d+1
  1401     0110  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1402     0115                     l2947:
  1403                           
  1404                           ;main.c: 197:     I2C_Master_Write(0x04);
  1405     0115  3004               	movlw	4
  1406     0116  1283               	bcf	3,5	;RP0=0, select bank0
  1407     0117  1303               	bcf	3,6	;RP1=0, select bank0
  1408     0118  00BD               	movwf	I2C_Master_Write@d
  1409     0119  3000               	movlw	0
  1410     011A  00BE               	movwf	I2C_Master_Write@d+1
  1411     011B  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1412     0120                     l2949:
  1413                           
  1414                           ;main.c: 198:     I2C_Master_Write(d2b(date));
  1415     0120  1283               	bcf	3,5	;RP0=0, select bank0
  1416     0121  1303               	bcf	3,6	;RP1=0, select bank0
  1417     0122  0859               	movf	_date+1,w
  1418     0123  00B6               	movwf	d2b@to_convert+1
  1419     0124  0858               	movf	_date,w
  1420     0125  00B5               	movwf	d2b@to_convert
  1421     0126  120A  158A  258C  120A  118A  	fcall	_d2b
  1422     012B  1283               	bcf	3,5	;RP0=0, select bank0
  1423     012C  1303               	bcf	3,6	;RP1=0, select bank0
  1424     012D  0836               	movf	?_d2b+1,w
  1425     012E  00BE               	movwf	I2C_Master_Write@d+1
  1426     012F  0835               	movf	?_d2b,w
  1427     0130  00BD               	movwf	I2C_Master_Write@d
  1428     0131  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1429     0136                     l2951:
  1430                           
  1431                           ;main.c: 199:     I2C_Master_Stop();
  1432     0136  120A  158A  2271  120A  118A  	fcall	_I2C_Master_Stop
  1433     013B                     l2953:
  1434                           
  1435                           ;main.c: 200:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1436     013B  3002               	movlw	2
  1437     013C  1283               	bcf	3,5	;RP0=0, select bank0
  1438     013D  1303               	bcf	3,6	;RP1=0, select bank0
  1439     013E  00C4               	movwf	??_main+2
  1440     013F  3004               	movlw	4
  1441     0140  00C3               	movwf	??_main+1
  1442     0141  30B9               	movlw	185
  1443     0142  00C2               	movwf	??_main
  1444     0143                     u2377:
  1445     0143  0BC2               	decfsz	??_main,f
  1446     0144  2943               	goto	u2377
  1447     0145  0BC3               	decfsz	??_main+1,f
  1448     0146  2943               	goto	u2377
  1449     0147  0BC4               	decfsz	??_main+2,f
  1450     0148  2943               	goto	u2377
  1451     0149  294A               	nop2
  1452     014A                     l2955:
  1453                           
  1454                           ;main.c: 203:     I2C_Master_Start();
  1455     014A  120A  158A  2268  120A  118A  	fcall	_I2C_Master_Start
  1456     014F                     l2957:
  1457                           
  1458                           ;main.c: 204:     I2C_Master_Write(0xD0);
  1459     014F  30D0               	movlw	208
  1460     0150  1283               	bcf	3,5	;RP0=0, select bank0
  1461     0151  1303               	bcf	3,6	;RP1=0, select bank0
  1462     0152  00BD               	movwf	I2C_Master_Write@d
  1463     0153  3000               	movlw	0
  1464     0154  00BE               	movwf	I2C_Master_Write@d+1
  1465     0155  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1466     015A                     l2959:
  1467                           
  1468                           ;main.c: 205:     I2C_Master_Write(0x05);
  1469     015A  3005               	movlw	5
  1470     015B  1283               	bcf	3,5	;RP0=0, select bank0
  1471     015C  1303               	bcf	3,6	;RP1=0, select bank0
  1472     015D  00BD               	movwf	I2C_Master_Write@d
  1473     015E  3000               	movlw	0
  1474     015F  00BE               	movwf	I2C_Master_Write@d+1
  1475     0160  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1476     0165                     l2961:
  1477                           
  1478                           ;main.c: 206:     I2C_Master_Write(d2b(month));
  1479     0165  1283               	bcf	3,5	;RP0=0, select bank0
  1480     0166  1303               	bcf	3,6	;RP1=0, select bank0
  1481     0167  085B               	movf	_month+1,w
  1482     0168  00B6               	movwf	d2b@to_convert+1
  1483     0169  085A               	movf	_month,w
  1484     016A  00B5               	movwf	d2b@to_convert
  1485     016B  120A  158A  258C  120A  118A  	fcall	_d2b
  1486     0170  1283               	bcf	3,5	;RP0=0, select bank0
  1487     0171  1303               	bcf	3,6	;RP1=0, select bank0
  1488     0172  0836               	movf	?_d2b+1,w
  1489     0173  00BE               	movwf	I2C_Master_Write@d+1
  1490     0174  0835               	movf	?_d2b,w
  1491     0175  00BD               	movwf	I2C_Master_Write@d
  1492     0176  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1493     017B                     l2963:
  1494                           
  1495                           ;main.c: 207:     I2C_Master_Stop();
  1496     017B  120A  158A  2271  120A  118A  	fcall	_I2C_Master_Stop
  1497     0180                     l2965:
  1498                           
  1499                           ;main.c: 210:     I2C_Master_Start();
  1500     0180  120A  158A  2268  120A  118A  	fcall	_I2C_Master_Start
  1501     0185                     l2967:
  1502                           
  1503                           ;main.c: 211:     I2C_Master_Write(0xD0);
  1504     0185  30D0               	movlw	208
  1505     0186  1283               	bcf	3,5	;RP0=0, select bank0
  1506     0187  1303               	bcf	3,6	;RP1=0, select bank0
  1507     0188  00BD               	movwf	I2C_Master_Write@d
  1508     0189  3000               	movlw	0
  1509     018A  00BE               	movwf	I2C_Master_Write@d+1
  1510     018B  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1511     0190                     l2969:
  1512                           
  1513                           ;main.c: 212:     I2C_Master_Write(0x06);
  1514     0190  3006               	movlw	6
  1515     0191  1283               	bcf	3,5	;RP0=0, select bank0
  1516     0192  1303               	bcf	3,6	;RP1=0, select bank0
  1517     0193  00BD               	movwf	I2C_Master_Write@d
  1518     0194  3000               	movlw	0
  1519     0195  00BE               	movwf	I2C_Master_Write@d+1
  1520     0196  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1521     019B                     l2971:
  1522                           
  1523                           ;main.c: 213:     I2C_Master_Write(d2b(year));
  1524     019B  1283               	bcf	3,5	;RP0=0, select bank0
  1525     019C  1303               	bcf	3,6	;RP1=0, select bank0
  1526     019D  085D               	movf	_year+1,w
  1527     019E  00B6               	movwf	d2b@to_convert+1
  1528     019F  085C               	movf	_year,w
  1529     01A0  00B5               	movwf	d2b@to_convert
  1530     01A1  120A  158A  258C  120A  118A  	fcall	_d2b
  1531     01A6  1283               	bcf	3,5	;RP0=0, select bank0
  1532     01A7  1303               	bcf	3,6	;RP1=0, select bank0
  1533     01A8  0836               	movf	?_d2b+1,w
  1534     01A9  00BE               	movwf	I2C_Master_Write@d+1
  1535     01AA  0835               	movf	?_d2b,w
  1536     01AB  00BD               	movwf	I2C_Master_Write@d
  1537     01AC  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1538     01B1                     l2973:
  1539                           
  1540                           ;main.c: 214:     I2C_Master_Stop();
  1541     01B1  120A  158A  2271  120A  118A  	fcall	_I2C_Master_Stop
  1542     01B6                     l2975:
  1543                           
  1544                           ;main.c: 215:     _delay((unsigned long)((100)*(8000000/4000.0)));
  1545     01B6  3002               	movlw	2
  1546     01B7  1283               	bcf	3,5	;RP0=0, select bank0
  1547     01B8  1303               	bcf	3,6	;RP1=0, select bank0
  1548     01B9  00C4               	movwf	??_main+2
  1549     01BA  3004               	movlw	4
  1550     01BB  00C3               	movwf	??_main+1
  1551     01BC  30B9               	movlw	185
  1552     01BD  00C2               	movwf	??_main
  1553     01BE                     u2387:
  1554     01BE  0BC2               	decfsz	??_main,f
  1555     01BF  29BE               	goto	u2387
  1556     01C0  0BC3               	decfsz	??_main+1,f
  1557     01C1  29BE               	goto	u2387
  1558     01C2  0BC4               	decfsz	??_main+2,f
  1559     01C3  29BE               	goto	u2387
  1560     01C4  29C5               	nop2
  1561     01C5                     l2977:
  1562                           
  1563                           ;main.c: 221:         I2C_Master_Start();
  1564     01C5  120A  158A  2268  120A  118A  	fcall	_I2C_Master_Start
  1565     01CA                     l2979:
  1566                           
  1567                           ;main.c: 222:         I2C_Master_Write(0x50);
  1568     01CA  3050               	movlw	80
  1569     01CB  1283               	bcf	3,5	;RP0=0, select bank0
  1570     01CC  1303               	bcf	3,6	;RP1=0, select bank0
  1571     01CD  00BD               	movwf	I2C_Master_Write@d
  1572     01CE  3000               	movlw	0
  1573     01CF  00BE               	movwf	I2C_Master_Write@d+1
  1574     01D0  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1575     01D5                     l2981:
  1576                           
  1577                           ;main.c: 223:         I2C_Master_Write(0);
  1578     01D5  3000               	movlw	0
  1579     01D6  1283               	bcf	3,5	;RP0=0, select bank0
  1580     01D7  1303               	bcf	3,6	;RP1=0, select bank0
  1581     01D8  00BD               	movwf	I2C_Master_Write@d
  1582     01D9  00BE               	movwf	I2C_Master_Write@d+1
  1583     01DA  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1584     01DF                     l2983:
  1585                           
  1586                           ;main.c: 224:         I2C_Master_Stop();
  1587     01DF  120A  158A  2271  120A  118A  	fcall	_I2C_Master_Stop
  1588     01E4                     l2985:
  1589                           
  1590                           ;main.c: 225:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1591     01E4  3003               	movlw	3
  1592     01E5  1283               	bcf	3,5	;RP0=0, select bank0
  1593     01E6  1303               	bcf	3,6	;RP1=0, select bank0
  1594     01E7  00C4               	movwf	??_main+2
  1595     01E8  3008               	movlw	8
  1596     01E9  00C3               	movwf	??_main+1
  1597     01EA  3076               	movlw	118
  1598     01EB  00C2               	movwf	??_main
  1599     01EC                     u2397:
  1600     01EC  0BC2               	decfsz	??_main,f
  1601     01ED  29EC               	goto	u2397
  1602     01EE  0BC3               	decfsz	??_main+1,f
  1603     01EF  29EC               	goto	u2397
  1604     01F0  0BC4               	decfsz	??_main+2,f
  1605     01F1  29EC               	goto	u2397
  1606     01F2  0000               	nop
  1607     01F3                     l2987:
  1608                           
  1609                           ;main.c: 227:         I2C_Master_Start();
  1610     01F3  120A  158A  2268  120A  118A  	fcall	_I2C_Master_Start
  1611     01F8                     l2989:
  1612                           
  1613                           ;main.c: 228:         I2C_Master_Write(0x51);
  1614     01F8  3051               	movlw	81
  1615     01F9  1283               	bcf	3,5	;RP0=0, select bank0
  1616     01FA  1303               	bcf	3,6	;RP1=0, select bank0
  1617     01FB  00BD               	movwf	I2C_Master_Write@d
  1618     01FC  3000               	movlw	0
  1619     01FD  00BE               	movwf	I2C_Master_Write@d+1
  1620     01FE  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1621     0203                     l2991:
  1622                           
  1623                           ;main.c: 229:         slaveVal = I2C_Master_Read(0);
  1624     0203  3000               	movlw	0
  1625     0204  1283               	bcf	3,5	;RP0=0, select bank0
  1626     0205  1303               	bcf	3,6	;RP1=0, select bank0
  1627     0206  00AC               	movwf	I2C_Master_Read@a
  1628     0207  00AD               	movwf	I2C_Master_Read@a+1
  1629     0208  120A  158A  23A1  120A  118A  	fcall	_I2C_Master_Read
  1630     020D  1283               	bcf	3,5	;RP0=0, select bank0
  1631     020E  1303               	bcf	3,6	;RP1=0, select bank0
  1632     020F  082C               	movf	?_I2C_Master_Read,w
  1633     0210  00C5               	movwf	_slaveVal
  1634     0211                     l2993:
  1635                           
  1636                           ;main.c: 230:         I2C_Master_Stop();
  1637     0211  120A  158A  2271  120A  118A  	fcall	_I2C_Master_Stop
  1638     0216                     l2995:
  1639                           
  1640                           ;main.c: 231:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1641     0216  3003               	movlw	3
  1642     0217  1283               	bcf	3,5	;RP0=0, select bank0
  1643     0218  1303               	bcf	3,6	;RP1=0, select bank0
  1644     0219  00C4               	movwf	??_main+2
  1645     021A  3008               	movlw	8
  1646     021B  00C3               	movwf	??_main+1
  1647     021C  3076               	movlw	118
  1648     021D  00C2               	movwf	??_main
  1649     021E                     u2407:
  1650     021E  0BC2               	decfsz	??_main,f
  1651     021F  2A1E               	goto	u2407
  1652     0220  0BC3               	decfsz	??_main+1,f
  1653     0221  2A1E               	goto	u2407
  1654     0222  0BC4               	decfsz	??_main+2,f
  1655     0223  2A1E               	goto	u2407
  1656     0224  0000               	nop
  1657     0225                     l2997:
  1658                           
  1659                           ;main.c: 236:         I2C_Master_Start();
  1660     0225  120A  158A  2268  120A  118A  	fcall	_I2C_Master_Start
  1661     022A                     l2999:
  1662                           
  1663                           ;main.c: 237:         I2C_Master_Write(0xD0);
  1664     022A  30D0               	movlw	208
  1665     022B  1283               	bcf	3,5	;RP0=0, select bank0
  1666     022C  1303               	bcf	3,6	;RP1=0, select bank0
  1667     022D  00BD               	movwf	I2C_Master_Write@d
  1668     022E  3000               	movlw	0
  1669     022F  00BE               	movwf	I2C_Master_Write@d+1
  1670     0230  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1671     0235                     l3001:
  1672                           
  1673                           ;main.c: 238:         I2C_Master_Write(0x00);
  1674     0235  3000               	movlw	0
  1675     0236  1283               	bcf	3,5	;RP0=0, select bank0
  1676     0237  1303               	bcf	3,6	;RP1=0, select bank0
  1677     0238  00BD               	movwf	I2C_Master_Write@d
  1678     0239  00BE               	movwf	I2C_Master_Write@d+1
  1679     023A  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1680     023F                     l3003:
  1681                           
  1682                           ;main.c: 239:         I2C_Master_RepeatedStart();
  1683     023F  120A  158A  225F  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1684     0244                     l3005:
  1685                           
  1686                           ;main.c: 240:         I2C_Master_Write(0xD1);
  1687     0244  30D1               	movlw	209
  1688     0245  1283               	bcf	3,5	;RP0=0, select bank0
  1689     0246  1303               	bcf	3,6	;RP1=0, select bank0
  1690     0247  00BD               	movwf	I2C_Master_Write@d
  1691     0248  3000               	movlw	0
  1692     0249  00BE               	movwf	I2C_Master_Write@d+1
  1693     024A  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1694     024F                     l3007:
  1695                           
  1696                           ;main.c: 241:         sec = b2d(I2C_Master_Read(0));
  1697     024F  3000               	movlw	0
  1698     0250  1283               	bcf	3,5	;RP0=0, select bank0
  1699     0251  1303               	bcf	3,6	;RP1=0, select bank0
  1700     0252  00AC               	movwf	I2C_Master_Read@a
  1701     0253  00AD               	movwf	I2C_Master_Read@a+1
  1702     0254  120A  158A  23A1  120A  118A  	fcall	_I2C_Master_Read
  1703     0259  1283               	bcf	3,5	;RP0=0, select bank0
  1704     025A  1303               	bcf	3,6	;RP1=0, select bank0
  1705     025B  082D               	movf	?_I2C_Master_Read+1,w
  1706     025C  00B3               	movwf	b2d@to_convert+1
  1707     025D  082C               	movf	?_I2C_Master_Read,w
  1708     025E  00B2               	movwf	b2d@to_convert
  1709     025F  120A  158A  2378  120A  118A  	fcall	_b2d
  1710     0264  1283               	bcf	3,5	;RP0=0, select bank0
  1711     0265  1303               	bcf	3,6	;RP1=0, select bank0
  1712     0266  0833               	movf	?_b2d+1,w
  1713     0267  00D3               	movwf	_sec+1
  1714     0268  0832               	movf	?_b2d,w
  1715     0269  00D2               	movwf	_sec
  1716     026A                     l3009:
  1717                           
  1718                           ;main.c: 242:         I2C_Master_Stop();
  1719     026A  120A  158A  2271  120A  118A  	fcall	_I2C_Master_Stop
  1720     026F                     l3011:
  1721                           
  1722                           ;main.c: 245:         I2C_Master_Start();
  1723     026F  120A  158A  2268  120A  118A  	fcall	_I2C_Master_Start
  1724     0274                     l3013:
  1725                           
  1726                           ;main.c: 246:         I2C_Master_Write(0xD0);
  1727     0274  30D0               	movlw	208
  1728     0275  1283               	bcf	3,5	;RP0=0, select bank0
  1729     0276  1303               	bcf	3,6	;RP1=0, select bank0
  1730     0277  00BD               	movwf	I2C_Master_Write@d
  1731     0278  3000               	movlw	0
  1732     0279  00BE               	movwf	I2C_Master_Write@d+1
  1733     027A  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1734     027F                     l3015:
  1735                           
  1736                           ;main.c: 247:         I2C_Master_Write(0x01);
  1737     027F  3001               	movlw	1
  1738     0280  1283               	bcf	3,5	;RP0=0, select bank0
  1739     0281  1303               	bcf	3,6	;RP1=0, select bank0
  1740     0282  00BD               	movwf	I2C_Master_Write@d
  1741     0283  3000               	movlw	0
  1742     0284  00BE               	movwf	I2C_Master_Write@d+1
  1743     0285  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1744     028A                     l3017:
  1745                           
  1746                           ;main.c: 248:         I2C_Master_RepeatedStart();
  1747     028A  120A  158A  225F  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1748     028F                     l3019:
  1749                           
  1750                           ;main.c: 249:         I2C_Master_Write(0xD1);
  1751     028F  30D1               	movlw	209
  1752     0290  1283               	bcf	3,5	;RP0=0, select bank0
  1753     0291  1303               	bcf	3,6	;RP1=0, select bank0
  1754     0292  00BD               	movwf	I2C_Master_Write@d
  1755     0293  3000               	movlw	0
  1756     0294  00BE               	movwf	I2C_Master_Write@d+1
  1757     0295  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1758     029A                     l3021:
  1759                           
  1760                           ;main.c: 250:         min = b2d(I2C_Master_Read(0));
  1761     029A  3000               	movlw	0
  1762     029B  1283               	bcf	3,5	;RP0=0, select bank0
  1763     029C  1303               	bcf	3,6	;RP1=0, select bank0
  1764     029D  00AC               	movwf	I2C_Master_Read@a
  1765     029E  00AD               	movwf	I2C_Master_Read@a+1
  1766     029F  120A  158A  23A1  120A  118A  	fcall	_I2C_Master_Read
  1767     02A4  1283               	bcf	3,5	;RP0=0, select bank0
  1768     02A5  1303               	bcf	3,6	;RP1=0, select bank0
  1769     02A6  082D               	movf	?_I2C_Master_Read+1,w
  1770     02A7  00B3               	movwf	b2d@to_convert+1
  1771     02A8  082C               	movf	?_I2C_Master_Read,w
  1772     02A9  00B2               	movwf	b2d@to_convert
  1773     02AA  120A  158A  2378  120A  118A  	fcall	_b2d
  1774     02AF  1283               	bcf	3,5	;RP0=0, select bank0
  1775     02B0  1303               	bcf	3,6	;RP1=0, select bank0
  1776     02B1  0833               	movf	?_b2d+1,w
  1777     02B2  00D5               	movwf	_min+1
  1778     02B3  0832               	movf	?_b2d,w
  1779     02B4  00D4               	movwf	_min
  1780     02B5                     l3023:
  1781                           
  1782                           ;main.c: 251:         I2C_Master_Stop();
  1783     02B5  120A  158A  2271  120A  118A  	fcall	_I2C_Master_Stop
  1784     02BA                     l3025:
  1785                           
  1786                           ;main.c: 254:         I2C_Master_Start();
  1787     02BA  120A  158A  2268  120A  118A  	fcall	_I2C_Master_Start
  1788     02BF                     l3027:
  1789                           
  1790                           ;main.c: 255:         I2C_Master_Write(0xD0);
  1791     02BF  30D0               	movlw	208
  1792     02C0  1283               	bcf	3,5	;RP0=0, select bank0
  1793     02C1  1303               	bcf	3,6	;RP1=0, select bank0
  1794     02C2  00BD               	movwf	I2C_Master_Write@d
  1795     02C3  3000               	movlw	0
  1796     02C4  00BE               	movwf	I2C_Master_Write@d+1
  1797     02C5  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1798     02CA                     l3029:
  1799                           
  1800                           ;main.c: 256:         I2C_Master_Write(0x02);
  1801     02CA  3002               	movlw	2
  1802     02CB  1283               	bcf	3,5	;RP0=0, select bank0
  1803     02CC  1303               	bcf	3,6	;RP1=0, select bank0
  1804     02CD  00BD               	movwf	I2C_Master_Write@d
  1805     02CE  3000               	movlw	0
  1806     02CF  00BE               	movwf	I2C_Master_Write@d+1
  1807     02D0  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1808     02D5                     l3031:
  1809                           
  1810                           ;main.c: 257:         I2C_Master_RepeatedStart();
  1811     02D5  120A  158A  225F  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1812     02DA                     l3033:
  1813                           
  1814                           ;main.c: 258:         I2C_Master_Write(0xD1);
  1815     02DA  30D1               	movlw	209
  1816     02DB  1283               	bcf	3,5	;RP0=0, select bank0
  1817     02DC  1303               	bcf	3,6	;RP1=0, select bank0
  1818     02DD  00BD               	movwf	I2C_Master_Write@d
  1819     02DE  3000               	movlw	0
  1820     02DF  00BE               	movwf	I2C_Master_Write@d+1
  1821     02E0  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1822     02E5                     l3035:
  1823                           
  1824                           ;main.c: 259:         hour = b2d(I2C_Master_Read(0));
  1825     02E5  3000               	movlw	0
  1826     02E6  1283               	bcf	3,5	;RP0=0, select bank0
  1827     02E7  1303               	bcf	3,6	;RP1=0, select bank0
  1828     02E8  00AC               	movwf	I2C_Master_Read@a
  1829     02E9  00AD               	movwf	I2C_Master_Read@a+1
  1830     02EA  120A  158A  23A1  120A  118A  	fcall	_I2C_Master_Read
  1831     02EF  1283               	bcf	3,5	;RP0=0, select bank0
  1832     02F0  1303               	bcf	3,6	;RP1=0, select bank0
  1833     02F1  082D               	movf	?_I2C_Master_Read+1,w
  1834     02F2  00B3               	movwf	b2d@to_convert+1
  1835     02F3  082C               	movf	?_I2C_Master_Read,w
  1836     02F4  00B2               	movwf	b2d@to_convert
  1837     02F5  120A  158A  2378  120A  118A  	fcall	_b2d
  1838     02FA  1283               	bcf	3,5	;RP0=0, select bank0
  1839     02FB  1303               	bcf	3,6	;RP1=0, select bank0
  1840     02FC  0833               	movf	?_b2d+1,w
  1841     02FD  00D7               	movwf	_hour+1
  1842     02FE  0832               	movf	?_b2d,w
  1843     02FF  00D6               	movwf	_hour
  1844     0300                     l3037:
  1845                           
  1846                           ;main.c: 260:         I2C_Master_Stop();
  1847     0300  120A  158A  2271  120A  118A  	fcall	_I2C_Master_Stop
  1848     0305                     l3039:
  1849                           
  1850                           ;main.c: 264:         I2C_Master_Start();
  1851     0305  120A  158A  2268  120A  118A  	fcall	_I2C_Master_Start
  1852     030A                     l3041:
  1853                           
  1854                           ;main.c: 265:         I2C_Master_Write(0xD0);
  1855     030A  30D0               	movlw	208
  1856     030B  1283               	bcf	3,5	;RP0=0, select bank0
  1857     030C  1303               	bcf	3,6	;RP1=0, select bank0
  1858     030D  00BD               	movwf	I2C_Master_Write@d
  1859     030E  3000               	movlw	0
  1860     030F  00BE               	movwf	I2C_Master_Write@d+1
  1861     0310  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1862     0315                     l3043:
  1863                           
  1864                           ;main.c: 266:         I2C_Master_Write(0x04);
  1865     0315  3004               	movlw	4
  1866     0316  1283               	bcf	3,5	;RP0=0, select bank0
  1867     0317  1303               	bcf	3,6	;RP1=0, select bank0
  1868     0318  00BD               	movwf	I2C_Master_Write@d
  1869     0319  3000               	movlw	0
  1870     031A  00BE               	movwf	I2C_Master_Write@d+1
  1871     031B  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1872     0320                     l3045:
  1873                           
  1874                           ;main.c: 267:         I2C_Master_RepeatedStart();
  1875     0320  120A  158A  225F  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1876     0325                     l3047:
  1877                           
  1878                           ;main.c: 268:         I2C_Master_Write(0xD1);
  1879     0325  30D1               	movlw	209
  1880     0326  1283               	bcf	3,5	;RP0=0, select bank0
  1881     0327  1303               	bcf	3,6	;RP1=0, select bank0
  1882     0328  00BD               	movwf	I2C_Master_Write@d
  1883     0329  3000               	movlw	0
  1884     032A  00BE               	movwf	I2C_Master_Write@d+1
  1885     032B  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1886     0330                     l3049:
  1887                           
  1888                           ;main.c: 269:         date = b2d(I2C_Master_Read(0));
  1889     0330  3000               	movlw	0
  1890     0331  1283               	bcf	3,5	;RP0=0, select bank0
  1891     0332  1303               	bcf	3,6	;RP1=0, select bank0
  1892     0333  00AC               	movwf	I2C_Master_Read@a
  1893     0334  00AD               	movwf	I2C_Master_Read@a+1
  1894     0335  120A  158A  23A1  120A  118A  	fcall	_I2C_Master_Read
  1895     033A  1283               	bcf	3,5	;RP0=0, select bank0
  1896     033B  1303               	bcf	3,6	;RP1=0, select bank0
  1897     033C  082D               	movf	?_I2C_Master_Read+1,w
  1898     033D  00B3               	movwf	b2d@to_convert+1
  1899     033E  082C               	movf	?_I2C_Master_Read,w
  1900     033F  00B2               	movwf	b2d@to_convert
  1901     0340  120A  158A  2378  120A  118A  	fcall	_b2d
  1902     0345  1283               	bcf	3,5	;RP0=0, select bank0
  1903     0346  1303               	bcf	3,6	;RP1=0, select bank0
  1904     0347  0833               	movf	?_b2d+1,w
  1905     0348  00D9               	movwf	_date+1
  1906     0349  0832               	movf	?_b2d,w
  1907     034A  00D8               	movwf	_date
  1908     034B                     l3051:
  1909                           
  1910                           ;main.c: 270:         I2C_Master_Stop();
  1911     034B  120A  158A  2271  120A  118A  	fcall	_I2C_Master_Stop
  1912     0350                     l3053:
  1913                           
  1914                           ;main.c: 273:         I2C_Master_Start();
  1915     0350  120A  158A  2268  120A  118A  	fcall	_I2C_Master_Start
  1916     0355                     l3055:
  1917                           
  1918                           ;main.c: 274:         I2C_Master_Write(0xD0);
  1919     0355  30D0               	movlw	208
  1920     0356  1283               	bcf	3,5	;RP0=0, select bank0
  1921     0357  1303               	bcf	3,6	;RP1=0, select bank0
  1922     0358  00BD               	movwf	I2C_Master_Write@d
  1923     0359  3000               	movlw	0
  1924     035A  00BE               	movwf	I2C_Master_Write@d+1
  1925     035B  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1926     0360                     l3057:
  1927                           
  1928                           ;main.c: 275:         I2C_Master_Write(0x05);
  1929     0360  3005               	movlw	5
  1930     0361  1283               	bcf	3,5	;RP0=0, select bank0
  1931     0362  1303               	bcf	3,6	;RP1=0, select bank0
  1932     0363  00BD               	movwf	I2C_Master_Write@d
  1933     0364  3000               	movlw	0
  1934     0365  00BE               	movwf	I2C_Master_Write@d+1
  1935     0366  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1936     036B                     l3059:
  1937                           
  1938                           ;main.c: 276:         I2C_Master_RepeatedStart();
  1939     036B  120A  158A  225F  120A  118A  	fcall	_I2C_Master_RepeatedStart
  1940     0370                     l3061:
  1941                           
  1942                           ;main.c: 277:         I2C_Master_Write(0xD1);
  1943     0370  30D1               	movlw	209
  1944     0371  1283               	bcf	3,5	;RP0=0, select bank0
  1945     0372  1303               	bcf	3,6	;RP1=0, select bank0
  1946     0373  00BD               	movwf	I2C_Master_Write@d
  1947     0374  3000               	movlw	0
  1948     0375  00BE               	movwf	I2C_Master_Write@d+1
  1949     0376  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1950     037B                     l3063:
  1951                           
  1952                           ;main.c: 278:         month = b2d(I2C_Master_Read(0));
  1953     037B  3000               	movlw	0
  1954     037C  1283               	bcf	3,5	;RP0=0, select bank0
  1955     037D  1303               	bcf	3,6	;RP1=0, select bank0
  1956     037E  00AC               	movwf	I2C_Master_Read@a
  1957     037F  00AD               	movwf	I2C_Master_Read@a+1
  1958     0380  120A  158A  23A1  120A  118A  	fcall	_I2C_Master_Read
  1959     0385  1283               	bcf	3,5	;RP0=0, select bank0
  1960     0386  1303               	bcf	3,6	;RP1=0, select bank0
  1961     0387  082D               	movf	?_I2C_Master_Read+1,w
  1962     0388  00B3               	movwf	b2d@to_convert+1
  1963     0389  082C               	movf	?_I2C_Master_Read,w
  1964     038A  00B2               	movwf	b2d@to_convert
  1965     038B  120A  158A  2378  120A  118A  	fcall	_b2d
  1966     0390  1283               	bcf	3,5	;RP0=0, select bank0
  1967     0391  1303               	bcf	3,6	;RP1=0, select bank0
  1968     0392  0833               	movf	?_b2d+1,w
  1969     0393  00DB               	movwf	_month+1
  1970     0394  0832               	movf	?_b2d,w
  1971     0395  00DA               	movwf	_month
  1972     0396                     l3065:
  1973                           
  1974                           ;main.c: 279:         I2C_Master_Stop();
  1975     0396  120A  158A  2271  120A  118A  	fcall	_I2C_Master_Stop
  1976     039B                     l3067:
  1977                           
  1978                           ;main.c: 283:         I2C_Master_Start();
  1979     039B  120A  158A  2268  120A  118A  	fcall	_I2C_Master_Start
  1980     03A0                     l3069:
  1981                           
  1982                           ;main.c: 284:         I2C_Master_Write(0xD0);
  1983     03A0  30D0               	movlw	208
  1984     03A1  1283               	bcf	3,5	;RP0=0, select bank0
  1985     03A2  1303               	bcf	3,6	;RP1=0, select bank0
  1986     03A3  00BD               	movwf	I2C_Master_Write@d
  1987     03A4  3000               	movlw	0
  1988     03A5  00BE               	movwf	I2C_Master_Write@d+1
  1989     03A6  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  1990     03AB                     l3071:
  1991                           
  1992                           ;main.c: 285:         I2C_Master_Write(0x06);
  1993     03AB  3006               	movlw	6
  1994     03AC  1283               	bcf	3,5	;RP0=0, select bank0
  1995     03AD  1303               	bcf	3,6	;RP1=0, select bank0
  1996     03AE  00BD               	movwf	I2C_Master_Write@d
  1997     03AF  3000               	movlw	0
  1998     03B0  00BE               	movwf	I2C_Master_Write@d+1
  1999     03B1  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  2000     03B6                     l3073:
  2001                           
  2002                           ;main.c: 286:         I2C_Master_RepeatedStart();
  2003     03B6  120A  158A  225F  120A  118A  	fcall	_I2C_Master_RepeatedStart
  2004     03BB                     l3075:
  2005                           
  2006                           ;main.c: 287:         I2C_Master_Write(0xD1);
  2007     03BB  30D1               	movlw	209
  2008     03BC  1283               	bcf	3,5	;RP0=0, select bank0
  2009     03BD  1303               	bcf	3,6	;RP1=0, select bank0
  2010     03BE  00BD               	movwf	I2C_Master_Write@d
  2011     03BF  3000               	movlw	0
  2012     03C0  00BE               	movwf	I2C_Master_Write@d+1
  2013     03C1  120A  158A  2284  120A  118A  	fcall	_I2C_Master_Write
  2014     03C6                     l3077:
  2015                           
  2016                           ;main.c: 288:         month = b2d(I2C_Master_Read(0));
  2017     03C6  3000               	movlw	0
  2018     03C7  1283               	bcf	3,5	;RP0=0, select bank0
  2019     03C8  1303               	bcf	3,6	;RP1=0, select bank0
  2020     03C9  00AC               	movwf	I2C_Master_Read@a
  2021     03CA  00AD               	movwf	I2C_Master_Read@a+1
  2022     03CB  120A  158A  23A1  120A  118A  	fcall	_I2C_Master_Read
  2023     03D0  1283               	bcf	3,5	;RP0=0, select bank0
  2024     03D1  1303               	bcf	3,6	;RP1=0, select bank0
  2025     03D2  082D               	movf	?_I2C_Master_Read+1,w
  2026     03D3  00B3               	movwf	b2d@to_convert+1
  2027     03D4  082C               	movf	?_I2C_Master_Read,w
  2028     03D5  00B2               	movwf	b2d@to_convert
  2029     03D6  120A  158A  2378  120A  118A  	fcall	_b2d
  2030     03DB  1283               	bcf	3,5	;RP0=0, select bank0
  2031     03DC  1303               	bcf	3,6	;RP1=0, select bank0
  2032     03DD  0833               	movf	?_b2d+1,w
  2033     03DE  00DB               	movwf	_month+1
  2034     03DF  0832               	movf	?_b2d,w
  2035     03E0  00DA               	movwf	_month
  2036     03E1                     l3079:
  2037                           
  2038                           ;main.c: 289:         I2C_Master_Stop();
  2039     03E1  120A  158A  2271  120A  118A  	fcall	_I2C_Master_Stop
  2040     03E6                     l3081:
  2041                           
  2042                           ;main.c: 294:         uint8ToString(sec,buffer);
  2043     03E6  304E               	movlw	(low (_buffer| 0))& (0+255)
  2044     03E7  1283               	bcf	3,5	;RP0=0, select bank0
  2045     03E8  1303               	bcf	3,6	;RP1=0, select bank0
  2046     03E9  00B5               	movwf	uint8ToString@str
  2047     03EA  0852               	movf	_sec,w
  2048     03EB  120A  118A  271A  120A  118A  	fcall	_uint8ToString
  2049     03F0                     l3083:
  2050                           
  2051                           ;main.c: 295:         uint8ToString(min,buffer2);
  2052     03F0  304A               	movlw	(low (_buffer2| 0))& (0+255)
  2053     03F1  1283               	bcf	3,5	;RP0=0, select bank0
  2054     03F2  1303               	bcf	3,6	;RP1=0, select bank0
  2055     03F3  00B5               	movwf	uint8ToString@str
  2056     03F4  0854               	movf	_min,w
  2057     03F5  120A  118A  271A  120A  118A  	fcall	_uint8ToString
  2058     03FA                     l3085:
  2059                           
  2060                           ;main.c: 296:         uint8ToString(slaveVal,buffer3);
  2061     03FA  3046               	movlw	(low (_buffer3| 0))& (0+255)
  2062     03FB  1283               	bcf	3,5	;RP0=0, select bank0
  2063     03FC  1303               	bcf	3,6	;RP1=0, select bank0
  2064     03FD  00B5               	movwf	uint8ToString@str
  2065     03FE  0845               	movf	_slaveVal,w
  2066     03FF  120A  118A  271A  120A  118A  	fcall	_uint8ToString
  2067     0404                     l3087:
  2068                           
  2069                           ;main.c: 298:         char hour0 = hour%10;
  2070     0404  300A               	movlw	10
  2071     0405  1283               	bcf	3,5	;RP0=0, select bank0
  2072     0406  1303               	bcf	3,6	;RP1=0, select bank0
  2073     0407  00AC               	movwf	___awmod@divisor
  2074     0408  3000               	movlw	0
  2075     0409  00AD               	movwf	___awmod@divisor+1
  2076     040A  0857               	movf	_hour+1,w
  2077     040B  00AF               	movwf	___awmod@dividend+1
  2078     040C  0856               	movf	_hour,w
  2079     040D  00AE               	movwf	___awmod@dividend
  2080     040E  120A  158A  2531  120A  118A  	fcall	___awmod
  2081     0413  1283               	bcf	3,5	;RP0=0, select bank0
  2082     0414  1303               	bcf	3,6	;RP1=0, select bank0
  2083     0415  082C               	movf	?___awmod,w
  2084     0416  1683               	bsf	3,5	;RP0=1, select bank1
  2085     0417  1303               	bcf	3,6	;RP1=0, select bank1
  2086     0418  00A0               	movwf	main@hour0^(0+128)
  2087     0419                     l3089:
  2088                           
  2089                           ;main.c: 299:         char hour1 = hour/10;
  2090     0419  300A               	movlw	10
  2091     041A  1283               	bcf	3,5	;RP0=0, select bank0
  2092     041B  1303               	bcf	3,6	;RP1=0, select bank0
  2093     041C  00AC               	movwf	___awdiv@divisor
  2094     041D  3000               	movlw	0
  2095     041E  00AD               	movwf	___awdiv@divisor+1
  2096     041F  0857               	movf	_hour+1,w
  2097     0420  00AF               	movwf	___awdiv@dividend+1
  2098     0421  0856               	movf	_hour,w
  2099     0422  00AE               	movwf	___awdiv@dividend
  2100     0423  120A  158A  271E  120A  118A  	fcall	___awdiv
  2101     0428  1283               	bcf	3,5	;RP0=0, select bank0
  2102     0429  1303               	bcf	3,6	;RP1=0, select bank0
  2103     042A  082C               	movf	?___awdiv,w
  2104     042B  1683               	bsf	3,5	;RP0=1, select bank1
  2105     042C  1303               	bcf	3,6	;RP1=0, select bank1
  2106     042D  00A1               	movwf	main@hour1^(0+128)
  2107     042E                     l3091:
  2108                           
  2109                           ;main.c: 300:         char date0 = date%10;
  2110     042E  300A               	movlw	10
  2111     042F  1283               	bcf	3,5	;RP0=0, select bank0
  2112     0430  1303               	bcf	3,6	;RP1=0, select bank0
  2113     0431  00AC               	movwf	___awmod@divisor
  2114     0432  3000               	movlw	0
  2115     0433  00AD               	movwf	___awmod@divisor+1
  2116     0434  0859               	movf	_date+1,w
  2117     0435  00AF               	movwf	___awmod@dividend+1
  2118     0436  0858               	movf	_date,w
  2119     0437  00AE               	movwf	___awmod@dividend
  2120     0438  120A  158A  2531  120A  118A  	fcall	___awmod
  2121     043D  1283               	bcf	3,5	;RP0=0, select bank0
  2122     043E  1303               	bcf	3,6	;RP1=0, select bank0
  2123     043F  082C               	movf	?___awmod,w
  2124     0440  1683               	bsf	3,5	;RP0=1, select bank1
  2125     0441  1303               	bcf	3,6	;RP1=0, select bank1
  2126     0442  00A2               	movwf	main@date0^(0+128)
  2127     0443                     l3093:
  2128                           
  2129                           ;main.c: 301:         char date1 = date/10;
  2130     0443  300A               	movlw	10
  2131     0444  1283               	bcf	3,5	;RP0=0, select bank0
  2132     0445  1303               	bcf	3,6	;RP1=0, select bank0
  2133     0446  00AC               	movwf	___awdiv@divisor
  2134     0447  3000               	movlw	0
  2135     0448  00AD               	movwf	___awdiv@divisor+1
  2136     0449  0859               	movf	_date+1,w
  2137     044A  00AF               	movwf	___awdiv@dividend+1
  2138     044B  0858               	movf	_date,w
  2139     044C  00AE               	movwf	___awdiv@dividend
  2140     044D  120A  158A  271E  120A  118A  	fcall	___awdiv
  2141     0452  1283               	bcf	3,5	;RP0=0, select bank0
  2142     0453  1303               	bcf	3,6	;RP1=0, select bank0
  2143     0454  082C               	movf	?___awdiv,w
  2144     0455  1683               	bsf	3,5	;RP0=1, select bank1
  2145     0456  1303               	bcf	3,6	;RP1=0, select bank1
  2146     0457  00A3               	movwf	main@date1^(0+128)
  2147     0458                     l3095:
  2148                           
  2149                           ;main.c: 302:         char month0 = month%10;
  2150     0458  300A               	movlw	10
  2151     0459  1283               	bcf	3,5	;RP0=0, select bank0
  2152     045A  1303               	bcf	3,6	;RP1=0, select bank0
  2153     045B  00AC               	movwf	___awmod@divisor
  2154     045C  3000               	movlw	0
  2155     045D  00AD               	movwf	___awmod@divisor+1
  2156     045E  085B               	movf	_month+1,w
  2157     045F  00AF               	movwf	___awmod@dividend+1
  2158     0460  085A               	movf	_month,w
  2159     0461  00AE               	movwf	___awmod@dividend
  2160     0462  120A  158A  2531  120A  118A  	fcall	___awmod
  2161     0467  1283               	bcf	3,5	;RP0=0, select bank0
  2162     0468  1303               	bcf	3,6	;RP1=0, select bank0
  2163     0469  082C               	movf	?___awmod,w
  2164     046A  1683               	bsf	3,5	;RP0=1, select bank1
  2165     046B  1303               	bcf	3,6	;RP1=0, select bank1
  2166     046C  00A4               	movwf	main@month0^(0+128)
  2167     046D                     l3097:
  2168                           
  2169                           ;main.c: 303:         char month1 = month/10;
  2170     046D  300A               	movlw	10
  2171     046E  1283               	bcf	3,5	;RP0=0, select bank0
  2172     046F  1303               	bcf	3,6	;RP1=0, select bank0
  2173     0470  00AC               	movwf	___awdiv@divisor
  2174     0471  3000               	movlw	0
  2175     0472  00AD               	movwf	___awdiv@divisor+1
  2176     0473  085B               	movf	_month+1,w
  2177     0474  00AF               	movwf	___awdiv@dividend+1
  2178     0475  085A               	movf	_month,w
  2179     0476  00AE               	movwf	___awdiv@dividend
  2180     0477  120A  158A  271E  120A  118A  	fcall	___awdiv
  2181     047C  1283               	bcf	3,5	;RP0=0, select bank0
  2182     047D  1303               	bcf	3,6	;RP1=0, select bank0
  2183     047E  082C               	movf	?___awdiv,w
  2184     047F  1683               	bsf	3,5	;RP0=1, select bank1
  2185     0480  1303               	bcf	3,6	;RP1=0, select bank1
  2186     0481  00A5               	movwf	main@month1^(0+128)
  2187     0482                     l3099:
  2188                           
  2189                           ;main.c: 304:         char year0 = year%10;
  2190     0482  300A               	movlw	10
  2191     0483  1283               	bcf	3,5	;RP0=0, select bank0
  2192     0484  1303               	bcf	3,6	;RP1=0, select bank0
  2193     0485  00AC               	movwf	___awmod@divisor
  2194     0486  3000               	movlw	0
  2195     0487  00AD               	movwf	___awmod@divisor+1
  2196     0488  085D               	movf	_year+1,w
  2197     0489  00AF               	movwf	___awmod@dividend+1
  2198     048A  085C               	movf	_year,w
  2199     048B  00AE               	movwf	___awmod@dividend
  2200     048C  120A  158A  2531  120A  118A  	fcall	___awmod
  2201     0491  1283               	bcf	3,5	;RP0=0, select bank0
  2202     0492  1303               	bcf	3,6	;RP1=0, select bank0
  2203     0493  082C               	movf	?___awmod,w
  2204     0494  1683               	bsf	3,5	;RP0=1, select bank1
  2205     0495  1303               	bcf	3,6	;RP1=0, select bank1
  2206     0496  00A6               	movwf	main@year0^(0+128)
  2207     0497                     l3101:
  2208                           
  2209                           ;main.c: 305:         char year1 = year/10;
  2210     0497  300A               	movlw	10
  2211     0498  1283               	bcf	3,5	;RP0=0, select bank0
  2212     0499  1303               	bcf	3,6	;RP1=0, select bank0
  2213     049A  00AC               	movwf	___awdiv@divisor
  2214     049B  3000               	movlw	0
  2215     049C  00AD               	movwf	___awdiv@divisor+1
  2216     049D  085D               	movf	_year+1,w
  2217     049E  00AF               	movwf	___awdiv@dividend+1
  2218     049F  085C               	movf	_year,w
  2219     04A0  00AE               	movwf	___awdiv@dividend
  2220     04A1  120A  158A  271E  120A  118A  	fcall	___awdiv
  2221     04A6  1283               	bcf	3,5	;RP0=0, select bank0
  2222     04A7  1303               	bcf	3,6	;RP1=0, select bank0
  2223     04A8  082C               	movf	?___awdiv,w
  2224     04A9  1683               	bsf	3,5	;RP0=1, select bank1
  2225     04AA  1303               	bcf	3,6	;RP1=0, select bank1
  2226     04AB  00A7               	movwf	main@year1^(0+128)
  2227     04AC                     l3103:
  2228                           
  2229                           ;main.c: 307:         Lcd_Clear();
  2230     04AC  120A  158A  22B4  120A  118A  	fcall	_Lcd_Clear
  2231     04B1                     l3105:
  2232                           
  2233                           ;main.c: 308:         Lcd_Set_Cursor(1,1);
  2234     04B1  1283               	bcf	3,5	;RP0=0, select bank0
  2235     04B2  1303               	bcf	3,6	;RP1=0, select bank0
  2236     04B3  01B0               	clrf	Lcd_Set_Cursor@b
  2237     04B4  0AB0               	incf	Lcd_Set_Cursor@b,f
  2238     04B5  3001               	movlw	1
  2239     04B6  120A  158A  248C  120A  118A  	fcall	_Lcd_Set_Cursor
  2240     04BB                     l3107:
  2241                           
  2242                           ;main.c: 309:         Lcd_Write_String("S1: ");
  2243     04BB  3008               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2244     04BC  1283               	bcf	3,5	;RP0=0, select bank0
  2245     04BD  1303               	bcf	3,6	;RP1=0, select bank0
  2246     04BE  00B1               	movwf	Lcd_Write_String@a
  2247     04BF  3080               	movlw	128
  2248     04C0  00B2               	movwf	Lcd_Write_String@a+1
  2249     04C1  120A  158A  2446  120A  118A  	fcall	_Lcd_Write_String
  2250     04C6                     l3109:
  2251                           
  2252                           ;main.c: 310:         Lcd_Write_Char(hour1+'0');
  2253     04C6  1683               	bsf	3,5	;RP0=1, select bank1
  2254     04C7  1303               	bcf	3,6	;RP1=0, select bank1
  2255     04C8  0821               	movf	main@hour1^(0+128),w
  2256     04C9  3E30               	addlw	48
  2257     04CA  120A  158A  23D3  120A  118A  	fcall	_Lcd_Write_Char
  2258     04CF                     l3111:
  2259                           
  2260                           ;main.c: 311:         Lcd_Write_Char(hour0+'0');
  2261     04CF  1683               	bsf	3,5	;RP0=1, select bank1
  2262     04D0  1303               	bcf	3,6	;RP1=0, select bank1
  2263     04D1  0820               	movf	main@hour0^(0+128),w
  2264     04D2  3E30               	addlw	48
  2265     04D3  120A  158A  23D3  120A  118A  	fcall	_Lcd_Write_Char
  2266     04D8                     l3113:
  2267                           
  2268                           ;main.c: 312:         Lcd_Write_Char(':');
  2269     04D8  303A               	movlw	58
  2270     04D9  120A  158A  23D3  120A  118A  	fcall	_Lcd_Write_Char
  2271     04DE                     l3115:
  2272                           
  2273                           ;main.c: 313:         Lcd_Write_String(buffer2);
  2274     04DE  304A               	movlw	(low (_buffer2| 0))& (0+255)
  2275     04DF  1283               	bcf	3,5	;RP0=0, select bank0
  2276     04E0  1303               	bcf	3,6	;RP1=0, select bank0
  2277     04E1  00B1               	movwf	Lcd_Write_String@a
  2278     04E2  3000               	movlw	0
  2279     04E3  00B2               	movwf	Lcd_Write_String@a+1
  2280     04E4  120A  158A  2446  120A  118A  	fcall	_Lcd_Write_String
  2281     04E9                     l3117:
  2282                           
  2283                           ;main.c: 314:         Lcd_Write_Char(':');
  2284     04E9  303A               	movlw	58
  2285     04EA  120A  158A  23D3  120A  118A  	fcall	_Lcd_Write_Char
  2286     04EF                     l3119:
  2287                           
  2288                           ;main.c: 315:         Lcd_Write_String(buffer);
  2289     04EF  304E               	movlw	(low (_buffer| 0))& (0+255)
  2290     04F0  1283               	bcf	3,5	;RP0=0, select bank0
  2291     04F1  1303               	bcf	3,6	;RP1=0, select bank0
  2292     04F2  00B1               	movwf	Lcd_Write_String@a
  2293     04F3  3000               	movlw	0
  2294     04F4  00B2               	movwf	Lcd_Write_String@a+1
  2295     04F5  120A  158A  2446  120A  118A  	fcall	_Lcd_Write_String
  2296     04FA                     l3121:
  2297                           
  2298                           ;main.c: 317:         Lcd_Set_Cursor(2,1);
  2299     04FA  1283               	bcf	3,5	;RP0=0, select bank0
  2300     04FB  1303               	bcf	3,6	;RP1=0, select bank0
  2301     04FC  01B0               	clrf	Lcd_Set_Cursor@b
  2302     04FD  0AB0               	incf	Lcd_Set_Cursor@b,f
  2303     04FE  3002               	movlw	2
  2304     04FF  120A  158A  248C  120A  118A  	fcall	_Lcd_Set_Cursor
  2305     0504                     l3123:
  2306                           
  2307                           ;main.c: 318:         Lcd_Write_String(buffer3);
  2308     0504  3046               	movlw	(low (_buffer3| 0))& (0+255)
  2309     0505  1283               	bcf	3,5	;RP0=0, select bank0
  2310     0506  1303               	bcf	3,6	;RP1=0, select bank0
  2311     0507  00B1               	movwf	Lcd_Write_String@a
  2312     0508  3000               	movlw	0
  2313     0509  00B2               	movwf	Lcd_Write_String@a+1
  2314     050A  120A  158A  2446  120A  118A  	fcall	_Lcd_Write_String
  2315     050F                     l3125:
  2316                           
  2317                           ;main.c: 319:         Lcd_Write_String("   ");
  2318     050F  300D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2319     0510  1283               	bcf	3,5	;RP0=0, select bank0
  2320     0511  1303               	bcf	3,6	;RP1=0, select bank0
  2321     0512  00B1               	movwf	Lcd_Write_String@a
  2322     0513  3080               	movlw	128
  2323     0514  00B2               	movwf	Lcd_Write_String@a+1
  2324     0515  120A  158A  2446  120A  118A  	fcall	_Lcd_Write_String
  2325     051A                     l3127:
  2326                           
  2327                           ;main.c: 320:         Lcd_Write_Char(date1+'0');
  2328     051A  1683               	bsf	3,5	;RP0=1, select bank1
  2329     051B  1303               	bcf	3,6	;RP1=0, select bank1
  2330     051C  0823               	movf	main@date1^(0+128),w
  2331     051D  3E30               	addlw	48
  2332     051E  120A  158A  23D3  120A  118A  	fcall	_Lcd_Write_Char
  2333     0523                     l3129:
  2334                           
  2335                           ;main.c: 321:         Lcd_Write_Char(date0+'0');
  2336     0523  1683               	bsf	3,5	;RP0=1, select bank1
  2337     0524  1303               	bcf	3,6	;RP1=0, select bank1
  2338     0525  0822               	movf	main@date0^(0+128),w
  2339     0526  3E30               	addlw	48
  2340     0527  120A  158A  23D3  120A  118A  	fcall	_Lcd_Write_Char
  2341     052C                     l3131:
  2342                           
  2343                           ;main.c: 322:         Lcd_Write_Char(':');
  2344     052C  303A               	movlw	58
  2345     052D  120A  158A  23D3  120A  118A  	fcall	_Lcd_Write_Char
  2346     0532                     l3133:
  2347                           
  2348                           ;main.c: 323:         Lcd_Write_Char(month1+'0');
  2349     0532  1683               	bsf	3,5	;RP0=1, select bank1
  2350     0533  1303               	bcf	3,6	;RP1=0, select bank1
  2351     0534  0825               	movf	main@month1^(0+128),w
  2352     0535  3E30               	addlw	48
  2353     0536  120A  158A  23D3  120A  118A  	fcall	_Lcd_Write_Char
  2354     053B                     l3135:
  2355                           
  2356                           ;main.c: 324:         Lcd_Write_Char(month0+'0');
  2357     053B  1683               	bsf	3,5	;RP0=1, select bank1
  2358     053C  1303               	bcf	3,6	;RP1=0, select bank1
  2359     053D  0824               	movf	main@month0^(0+128),w
  2360     053E  3E30               	addlw	48
  2361     053F  120A  158A  23D3  120A  118A  	fcall	_Lcd_Write_Char
  2362     0544                     l3137:
  2363                           
  2364                           ;main.c: 325:         Lcd_Write_Char(':');
  2365     0544  303A               	movlw	58
  2366     0545  120A  158A  23D3  120A  118A  	fcall	_Lcd_Write_Char
  2367     054A                     l3139:
  2368                           
  2369                           ;main.c: 326:         Lcd_Write_Char(year1+'0');
  2370     054A  1683               	bsf	3,5	;RP0=1, select bank1
  2371     054B  1303               	bcf	3,6	;RP1=0, select bank1
  2372     054C  0827               	movf	main@year1^(0+128),w
  2373     054D  3E30               	addlw	48
  2374     054E  120A  158A  23D3  120A  118A  	fcall	_Lcd_Write_Char
  2375     0553                     l3141:
  2376                           
  2377                           ;main.c: 327:         Lcd_Write_Char(year0+'0');
  2378     0553  1683               	bsf	3,5	;RP0=1, select bank1
  2379     0554  1303               	bcf	3,6	;RP1=0, select bank1
  2380     0555  0826               	movf	main@year0^(0+128),w
  2381     0556  3E30               	addlw	48
  2382     0557  120A  158A  23D3  120A  118A  	fcall	_Lcd_Write_Char
  2383     055C                     l3143:
  2384                           
  2385                           ;main.c: 328:         _delay((unsigned long)((500)*(8000000/4000.0)));
  2386     055C  3006               	movlw	6
  2387     055D  1283               	bcf	3,5	;RP0=0, select bank0
  2388     055E  1303               	bcf	3,6	;RP1=0, select bank0
  2389     055F  00C4               	movwf	??_main+2
  2390     0560  3013               	movlw	19
  2391     0561  00C3               	movwf	??_main+1
  2392     0562  30AD               	movlw	173
  2393     0563  00C2               	movwf	??_main
  2394     0564                     u2417:
  2395     0564  0BC2               	decfsz	??_main,f
  2396     0565  2D64               	goto	u2417
  2397     0566  0BC3               	decfsz	??_main+1,f
  2398     0567  2D64               	goto	u2417
  2399     0568  0BC4               	decfsz	??_main+2,f
  2400     0569  2D64               	goto	u2417
  2401     056A  29C5               	goto	l2977
  2402     056B  120A  118A  2810   	ljmp	start
  2403     056E                     __end_of_main:
  2404                           
  2405                           	psect	text1
  2406     071A                     __ptext1:	
  2407 ;; *************** function _uint8ToString *****************
  2408 ;; Defined at:
  2409 ;;		line 392 in file "main.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;  num             1    wreg     unsigned char 
  2412 ;;  str             1   21[BANK0 ] PTR unsigned char 
  2413 ;;		 -> buffer3(4), buffer2(4), buffer(4), 
  2414 ;; Auto vars:     Size  Location     Type
  2415 ;;  num             1   25[BANK0 ] unsigned char 
  2416 ;;  tempChar        1   26[BANK0 ] unsigned char 
  2417 ;;  temp            1   30[BANK0 ] unsigned char 
  2418 ;;  right           1   29[BANK0 ] char 
  2419 ;;  left            1   28[BANK0 ] char 
  2420 ;;  i               1   27[BANK0 ] char 
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  1    wreg      void 
  2423 ;; Registers used:
  2424 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2430 ;;      Params:         0       1       0       0       0
  2431 ;;      Locals:         0       6       0       0       0
  2432 ;;      Temps:          0       3       0       0       0
  2433 ;;      Totals:         0      10       0       0       0
  2434 ;;Total ram usage:       10 bytes
  2435 ;; Hardware stack levels used: 1
  2436 ;; Hardware stack levels required when called: 4
  2437 ;; This function calls:
  2438 ;;		___awdiv
  2439 ;;		___awmod
  2440 ;; This function is called by:
  2441 ;;		_main
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445     071A                     _uint8ToString:	
  2446                           ;psect for function _uint8ToString
  2447                           
  2448                           
  2449                           ;incstack = 0
  2450                           ; Regs used in _uint8ToString: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2451                           ;uint8ToString@num stored from wreg
  2452     071A  1283               	bcf	3,5	;RP0=0, select bank0
  2453     071B  1303               	bcf	3,6	;RP1=0, select bank0
  2454     071C  00B9               	movwf	uint8ToString@num
  2455     071D                     l2871:
  2456                           
  2457                           ;main.c: 393:     uint8_t temp = num;
  2458     071D  0839               	movf	uint8ToString@num,w
  2459     071E  00BE               	movwf	uint8ToString@temp
  2460     071F                     l2873:
  2461                           
  2462                           ;main.c: 394:     int8_t i = 0;
  2463     071F  01BB               	clrf	uint8ToString@i
  2464     0720                     l2875:
  2465                           
  2466                           ;main.c: 397:     if (temp == 0) {
  2467     0720  083E               	movf	uint8ToString@temp,w
  2468     0721  1D03               	btfss	3,2
  2469     0722  2F24               	goto	u2311
  2470     0723  2F25               	goto	u2310
  2471     0724                     u2311:
  2472     0724  2F61               	goto	l2889
  2473     0725                     u2310:
  2474     0725                     l2877:
  2475                           
  2476                           ;main.c: 398:         str[0] = '0';
  2477     0725  0835               	movf	uint8ToString@str,w
  2478     0726  0084               	movwf	4
  2479     0727  3030               	movlw	48
  2480     0728  1383               	bcf	3,7	;select IRP bank0
  2481     0729  0080               	movwf	0
  2482     072A                     l2879:
  2483                           
  2484                           ;main.c: 399:         str[1] = '\0';
  2485     072A  0A35               	incf	uint8ToString@str,w
  2486     072B  0084               	movwf	4
  2487     072C  0180               	clrf	0
  2488     072D  2FA0               	goto	l175
  2489     072E                     l2883:
  2490                           
  2491                           ;main.c: 405:         str[i++] = '0' + (temp % 10);
  2492     072E  083B               	movf	uint8ToString@i,w
  2493     072F  0735               	addwf	uint8ToString@str,w
  2494     0730  00B6               	movwf	??_uint8ToString
  2495     0731  0836               	movf	??_uint8ToString,w
  2496     0732  0084               	movwf	4
  2497     0733  300A               	movlw	10
  2498     0734  00AC               	movwf	___awmod@divisor
  2499     0735  3000               	movlw	0
  2500     0736  00AD               	movwf	___awmod@divisor+1
  2501     0737  083E               	movf	uint8ToString@temp,w
  2502     0738  00B7               	movwf	??_uint8ToString+1
  2503     0739  01B8               	clrf	??_uint8ToString+2
  2504     073A  0837               	movf	??_uint8ToString+1,w
  2505     073B  00AE               	movwf	___awmod@dividend
  2506     073C  0838               	movf	??_uint8ToString+2,w
  2507     073D  00AF               	movwf	___awmod@dividend+1
  2508     073E  120A  158A  2531  120A  118A  	fcall	___awmod
  2509     0743  1283               	bcf	3,5	;RP0=0, select bank0
  2510     0744  1303               	bcf	3,6	;RP1=0, select bank0
  2511     0745  082C               	movf	?___awmod,w
  2512     0746  3E30               	addlw	48
  2513     0747  1383               	bcf	3,7	;select IRP bank0
  2514     0748  0080               	movwf	0
  2515     0749                     l2885:
  2516     0749  3001               	movlw	1
  2517     074A  00B6               	movwf	??_uint8ToString
  2518     074B  0836               	movf	??_uint8ToString,w
  2519     074C  07BB               	addwf	uint8ToString@i,f
  2520     074D                     l2887:
  2521                           
  2522                           ;main.c: 406:         temp /= 10;
  2523     074D  300A               	movlw	10
  2524     074E  00AC               	movwf	___awdiv@divisor
  2525     074F  3000               	movlw	0
  2526     0750  00AD               	movwf	___awdiv@divisor+1
  2527     0751  083E               	movf	uint8ToString@temp,w
  2528     0752  00B6               	movwf	??_uint8ToString
  2529     0753  01B7               	clrf	??_uint8ToString+1
  2530     0754  0836               	movf	??_uint8ToString,w
  2531     0755  00AE               	movwf	___awdiv@dividend
  2532     0756  0837               	movf	??_uint8ToString+1,w
  2533     0757  00AF               	movwf	___awdiv@dividend+1
  2534     0758  120A  158A  271E  120A  118A  	fcall	___awdiv
  2535     075D  1283               	bcf	3,5	;RP0=0, select bank0
  2536     075E  1303               	bcf	3,6	;RP1=0, select bank0
  2537     075F  082C               	movf	?___awdiv,w
  2538     0760  00BE               	movwf	uint8ToString@temp
  2539     0761                     l2889:
  2540                           
  2541                           ;main.c: 404:     while (temp > 0) {
  2542     0761  083E               	movf	uint8ToString@temp,w
  2543     0762  1D03               	btfss	3,2
  2544     0763  2F65               	goto	u2321
  2545     0764  2F66               	goto	u2320
  2546     0765                     u2321:
  2547     0765  2F2E               	goto	l2883
  2548     0766                     u2320:
  2549     0766                     l2891:
  2550                           
  2551                           ;main.c: 410:     str[i] = '\0';
  2552     0766  083B               	movf	uint8ToString@i,w
  2553     0767  0735               	addwf	uint8ToString@str,w
  2554     0768  00B6               	movwf	??_uint8ToString
  2555     0769  0836               	movf	??_uint8ToString,w
  2556     076A  0084               	movwf	4
  2557     076B  1383               	bcf	3,7	;select IRP bank0
  2558     076C  0180               	clrf	0
  2559     076D                     l2893:
  2560                           
  2561                           ;main.c: 413:     int8_t left = 0;
  2562     076D  01BC               	clrf	uint8ToString@left
  2563     076E                     l2895:
  2564                           
  2565                           ;main.c: 414:     int8_t right = i - 1;
  2566     076E  083B               	movf	uint8ToString@i,w
  2567     076F  3EFF               	addlw	-1
  2568     0770  00BD               	movwf	uint8ToString@right
  2569                           
  2570                           ;main.c: 415:     while (left < right) {
  2571     0771  2F96               	goto	l2903
  2572     0772                     l2897:
  2573                           
  2574                           ;main.c: 416:         char tempChar = str[left];
  2575     0772  083C               	movf	uint8ToString@left,w
  2576     0773  0735               	addwf	uint8ToString@str,w
  2577     0774  00B6               	movwf	??_uint8ToString
  2578     0775  0836               	movf	??_uint8ToString,w
  2579     0776  0084               	movwf	4
  2580     0777  0800               	movf	0,w
  2581     0778  00BA               	movwf	uint8ToString@tempChar
  2582                           
  2583                           ;main.c: 417:         str[left] = str[right];
  2584     0779  083D               	movf	uint8ToString@right,w
  2585     077A  0735               	addwf	uint8ToString@str,w
  2586     077B  00B6               	movwf	??_uint8ToString
  2587     077C  0836               	movf	??_uint8ToString,w
  2588     077D  0084               	movwf	4
  2589     077E  0800               	movf	0,w
  2590     077F  00B7               	movwf	??_uint8ToString+1
  2591     0780  083C               	movf	uint8ToString@left,w
  2592     0781  0735               	addwf	uint8ToString@str,w
  2593     0782  00B8               	movwf	??_uint8ToString+2
  2594     0783  0838               	movf	??_uint8ToString+2,w
  2595     0784  0084               	movwf	4
  2596     0785  0837               	movf	??_uint8ToString+1,w
  2597     0786  0080               	movwf	0
  2598                           
  2599                           ;main.c: 418:         str[right] = tempChar;
  2600     0787  083D               	movf	uint8ToString@right,w
  2601     0788  0735               	addwf	uint8ToString@str,w
  2602     0789  00B6               	movwf	??_uint8ToString
  2603     078A  0836               	movf	??_uint8ToString,w
  2604     078B  0084               	movwf	4
  2605     078C  083A               	movf	uint8ToString@tempChar,w
  2606     078D  0080               	movwf	0
  2607     078E                     l2899:
  2608                           
  2609                           ;main.c: 419:         left++;
  2610     078E  3001               	movlw	1
  2611     078F  00B6               	movwf	??_uint8ToString
  2612     0790  0836               	movf	??_uint8ToString,w
  2613     0791  07BC               	addwf	uint8ToString@left,f
  2614     0792                     l2901:
  2615                           
  2616                           ;main.c: 420:         right--;
  2617     0792  30FF               	movlw	255
  2618     0793  00B6               	movwf	??_uint8ToString
  2619     0794  0836               	movf	??_uint8ToString,w
  2620     0795  07BD               	addwf	uint8ToString@right,f
  2621     0796                     l2903:
  2622                           
  2623                           ;main.c: 415:     while (left < right) {
  2624     0796  083C               	movf	uint8ToString@left,w
  2625     0797  3A80               	xorlw	128
  2626     0798  00B6               	movwf	??_uint8ToString
  2627     0799  083D               	movf	uint8ToString@right,w
  2628     079A  3A80               	xorlw	128
  2629     079B  02B6               	subwf	??_uint8ToString,f
  2630     079C  1C03               	skipc
  2631     079D  2F9F               	goto	u2331
  2632     079E  2FA0               	goto	u2330
  2633     079F                     u2331:
  2634     079F  2F72               	goto	l2897
  2635     07A0                     u2330:
  2636     07A0                     l175:
  2637     07A0  0008               	return
  2638     07A1                     __end_of_uint8ToString:
  2639                           
  2640                           	psect	text2
  2641     0F87                     __ptext2:	
  2642 ;; *************** function _setup *****************
  2643 ;; Defined at:
  2644 ;;		line 337 in file "main.c"
  2645 ;; Parameters:    Size  Location     Type
  2646 ;;		None
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;		None
  2649 ;; Return value:  Size  Location     Type
  2650 ;;                  1    wreg      void 
  2651 ;; Registers used:
  2652 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2658 ;;      Params:         0       0       0       0       0
  2659 ;;      Locals:         0       0       0       0       0
  2660 ;;      Temps:          0       0       0       0       0
  2661 ;;      Totals:         0       0       0       0       0
  2662 ;;Total ram usage:        0 bytes
  2663 ;; Hardware stack levels used: 1
  2664 ;; Hardware stack levels required when called: 6
  2665 ;; This function calls:
  2666 ;;		_I2C_Master_Init
  2667 ;;		_Lcd_Clear
  2668 ;;		_Lcd_Init
  2669 ;;		_Lcd_Set_Cursor
  2670 ;;		_Lcd_Write_Char
  2671 ;;		_Lcd_Write_String
  2672 ;;		_ioc_init
  2673 ;; This function is called by:
  2674 ;;		_main
  2675 ;; This function uses a non-reentrant model
  2676 ;;
  2677                           
  2678     0F87                     _setup:	
  2679                           ;psect for function _setup
  2680                           
  2681     0F87                     l2839:	
  2682                           ;incstack = 0
  2683                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2684                           
  2685                           
  2686                           ;main.c: 339:     OSCCONbits.IRCF2 = 1;
  2687     0F87  1683               	bsf	3,5	;RP0=1, select bank1
  2688     0F88  1303               	bcf	3,6	;RP1=0, select bank1
  2689     0F89  170F               	bsf	15,6	;volatile
  2690                           
  2691                           ;main.c: 340:     OSCCONbits.IRCF1 = 1;
  2692     0F8A  168F               	bsf	15,5	;volatile
  2693                           
  2694                           ;main.c: 341:     OSCCONbits.IRCF0 = 1;
  2695     0F8B  160F               	bsf	15,4	;volatile
  2696                           
  2697                           ;main.c: 342:     OSCCONbits.SCS = 1;
  2698     0F8C  140F               	bsf	15,0	;volatile
  2699     0F8D                     l2841:
  2700                           
  2701                           ;main.c: 343:     ANSEL = 0;
  2702     0F8D  1683               	bsf	3,5	;RP0=1, select bank3
  2703     0F8E  1703               	bsf	3,6	;RP1=1, select bank3
  2704     0F8F  0188               	clrf	8	;volatile
  2705                           
  2706                           ;main.c: 344:     ANSELH = 0;
  2707     0F90  0189               	clrf	9	;volatile
  2708                           
  2709                           ;main.c: 345:     TRISA =0;
  2710     0F91  1683               	bsf	3,5	;RP0=1, select bank1
  2711     0F92  1303               	bcf	3,6	;RP1=0, select bank1
  2712     0F93  0185               	clrf	5	;volatile
  2713                           
  2714                           ;main.c: 346:     PORTA = 0;
  2715     0F94  1283               	bcf	3,5	;RP0=0, select bank0
  2716     0F95  1303               	bcf	3,6	;RP1=0, select bank0
  2717     0F96  0185               	clrf	5	;volatile
  2718     0F97                     l2843:
  2719                           
  2720                           ;main.c: 347:     ioc_init(0xFF);
  2721     0F97  30FF               	movlw	255
  2722     0F98  120A  158A  22F0  120A  158A  	fcall	_ioc_init
  2723     0F9D                     l2845:
  2724                           
  2725                           ;main.c: 348:     TRISD = 0;
  2726     0F9D  1683               	bsf	3,5	;RP0=1, select bank1
  2727     0F9E  1303               	bcf	3,6	;RP1=0, select bank1
  2728     0F9F  0188               	clrf	8	;volatile
  2729     0FA0                     l2847:
  2730                           
  2731                           ;main.c: 349:     PORTB = 0;
  2732     0FA0  1283               	bcf	3,5	;RP0=0, select bank0
  2733     0FA1  1303               	bcf	3,6	;RP1=0, select bank0
  2734     0FA2  0186               	clrf	6	;volatile
  2735     0FA3                     l2849:
  2736                           
  2737                           ;main.c: 350:     PORTD = 0;
  2738     0FA3  0188               	clrf	8	;volatile
  2739     0FA4                     l2851:
  2740                           
  2741                           ;main.c: 352:     INTCONbits.PEIE = 1;
  2742     0FA4  170B               	bsf	11,6	;volatile
  2743     0FA5                     l2853:
  2744                           
  2745                           ;main.c: 353:     INTCONbits.GIE = 1;
  2746     0FA5  178B               	bsf	11,7	;volatile
  2747                           
  2748                           ;main.c: 354:     I2C_Master_Init(100000);
  2749     0FA6  3000               	movlw	0
  2750     0FA7  00BD               	movwf	I2C_Master_Init@c+3
  2751     0FA8  3001               	movlw	1
  2752     0FA9  00BC               	movwf	I2C_Master_Init@c+2
  2753     0FAA  3086               	movlw	134
  2754     0FAB  00BB               	movwf	I2C_Master_Init@c+1
  2755     0FAC  30A0               	movlw	160
  2756     0FAD  00BA               	movwf	I2C_Master_Init@c
  2757     0FAE  120A  158A  240C  120A  158A  	fcall	_I2C_Master_Init
  2758                           
  2759                           ;main.c: 356:     Lcd_Init();
  2760     0FB3  120A  158A  25ED  120A  158A  	fcall	_Lcd_Init
  2761                           
  2762                           ;main.c: 357:      Lcd_Clear();
  2763     0FB8  120A  158A  22B4  120A  158A  	fcall	_Lcd_Clear
  2764                           
  2765                           ;main.c: 358:         Lcd_Set_Cursor(1,1);
  2766     0FBD  1283               	bcf	3,5	;RP0=0, select bank0
  2767     0FBE  1303               	bcf	3,6	;RP1=0, select bank0
  2768     0FBF  01B0               	clrf	Lcd_Set_Cursor@b
  2769     0FC0  0AB0               	incf	Lcd_Set_Cursor@b,f
  2770     0FC1  3001               	movlw	1
  2771     0FC2  120A  158A  248C  120A  158A  	fcall	_Lcd_Set_Cursor
  2772     0FC7                     l2855:
  2773                           
  2774                           ;main.c: 359:         Lcd_Write_String("S1: ");
  2775     0FC7  3008               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2776     0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  2777     0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  2778     0FCA  00B1               	movwf	Lcd_Write_String@a
  2779     0FCB  3080               	movlw	128
  2780     0FCC  00B2               	movwf	Lcd_Write_String@a+1
  2781     0FCD  120A  158A  2446  120A  158A  	fcall	_Lcd_Write_String
  2782     0FD2                     l2857:
  2783                           
  2784                           ;main.c: 361:         Lcd_Write_Char(':');
  2785     0FD2  303A               	movlw	58
  2786     0FD3  120A  158A  23D3  120A  158A  	fcall	_Lcd_Write_Char
  2787     0FD8                     l2859:
  2788                           
  2789                           ;main.c: 363:         Lcd_Write_Char(':');
  2790     0FD8  303A               	movlw	58
  2791     0FD9  120A  158A  23D3  120A  158A  	fcall	_Lcd_Write_Char
  2792     0FDE                     l2861:
  2793                           
  2794                           ;main.c: 366:         Lcd_Set_Cursor(2,1);
  2795     0FDE  1283               	bcf	3,5	;RP0=0, select bank0
  2796     0FDF  1303               	bcf	3,6	;RP1=0, select bank0
  2797     0FE0  01B0               	clrf	Lcd_Set_Cursor@b
  2798     0FE1  0AB0               	incf	Lcd_Set_Cursor@b,f
  2799     0FE2  3002               	movlw	2
  2800     0FE3  120A  158A  248C  120A  158A  	fcall	_Lcd_Set_Cursor
  2801                           
  2802                           ;main.c: 367:         Lcd_Write_String("Date: ");
  2803     0FE8  3001               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  2804     0FE9  1283               	bcf	3,5	;RP0=0, select bank0
  2805     0FEA  1303               	bcf	3,6	;RP1=0, select bank0
  2806     0FEB  00B1               	movwf	Lcd_Write_String@a
  2807     0FEC  3080               	movlw	128
  2808     0FED  00B2               	movwf	Lcd_Write_String@a+1
  2809     0FEE  120A  158A  2446  120A  158A  	fcall	_Lcd_Write_String
  2810     0FF3                     l2863:
  2811                           
  2812                           ;main.c: 369:         Lcd_Write_Char(':');
  2813     0FF3  303A               	movlw	58
  2814     0FF4  120A  158A  23D3  120A  158A  	fcall	_Lcd_Write_Char
  2815     0FF9                     l2865:
  2816                           
  2817                           ;main.c: 371:         Lcd_Write_Char(':');
  2818     0FF9  303A               	movlw	58
  2819     0FFA  120A  158A  23D3  120A  158A  	fcall	_Lcd_Write_Char
  2820     0FFF                     l162:
  2821     0FFF  0008               	return
  2822     1000                     __end_of_setup:
  2823                           
  2824                           	psect	text3
  2825     0AF0                     __ptext3:	
  2826 ;; *************** function _ioc_init *****************
  2827 ;; Defined at:
  2828 ;;		line 13 in file "IOCB.c"
  2829 ;; Parameters:    Size  Location     Type
  2830 ;;  pin             1    wreg     unsigned char 
  2831 ;; Auto vars:     Size  Location     Type
  2832 ;;  pin             1   12[BANK0 ] unsigned char 
  2833 ;; Return value:  Size  Location     Type
  2834 ;;                  2   99[None  ] int 
  2835 ;; Registers used:
  2836 ;;		wreg, status,2
  2837 ;; Tracked objects:
  2838 ;;		On entry : 0/0
  2839 ;;		On exit  : 0/0
  2840 ;;		Unchanged: 0/0
  2841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2842 ;;      Params:         0       0       0       0       0
  2843 ;;      Locals:         0       1       0       0       0
  2844 ;;      Temps:          0       0       0       0       0
  2845 ;;      Totals:         0       1       0       0       0
  2846 ;;Total ram usage:        1 bytes
  2847 ;; Hardware stack levels used: 1
  2848 ;; Hardware stack levels required when called: 3
  2849 ;; This function calls:
  2850 ;;		Nothing
  2851 ;; This function is called by:
  2852 ;;		_setup
  2853 ;; This function uses a non-reentrant model
  2854 ;;
  2855                           
  2856     0AF0                     _ioc_init:	
  2857                           ;psect for function _ioc_init
  2858                           
  2859                           
  2860                           ;incstack = 0
  2861                           ; Regs used in _ioc_init: [wreg+status,2]
  2862                           ;ioc_init@pin stored from wreg
  2863     0AF0  1283               	bcf	3,5	;RP0=0, select bank0
  2864     0AF1  1303               	bcf	3,6	;RP1=0, select bank0
  2865     0AF2  00AC               	movwf	ioc_init@pin
  2866     0AF3                     l2675:
  2867                           
  2868                           ;IOCB.c: 14:     TRISB = pin;
  2869     0AF3  082C               	movf	ioc_init@pin,w
  2870     0AF4  1683               	bsf	3,5	;RP0=1, select bank1
  2871     0AF5  1303               	bcf	3,6	;RP1=0, select bank1
  2872     0AF6  0086               	movwf	6	;volatile
  2873                           
  2874                           ;IOCB.c: 15:     WPUB = pin;
  2875     0AF7  1283               	bcf	3,5	;RP0=0, select bank0
  2876     0AF8  1303               	bcf	3,6	;RP1=0, select bank0
  2877     0AF9  082C               	movf	ioc_init@pin,w
  2878     0AFA  1683               	bsf	3,5	;RP0=1, select bank1
  2879     0AFB  1303               	bcf	3,6	;RP1=0, select bank1
  2880     0AFC  0095               	movwf	21	;volatile
  2881                           
  2882                           ;IOCB.c: 16:     IOCB = pin;
  2883     0AFD  1283               	bcf	3,5	;RP0=0, select bank0
  2884     0AFE  1303               	bcf	3,6	;RP1=0, select bank0
  2885     0AFF  082C               	movf	ioc_init@pin,w
  2886     0B00  1683               	bsf	3,5	;RP0=1, select bank1
  2887     0B01  1303               	bcf	3,6	;RP1=0, select bank1
  2888     0B02  0096               	movwf	22	;volatile
  2889     0B03                     l2677:
  2890                           
  2891                           ;IOCB.c: 17:     PORTB=0;
  2892     0B03  1283               	bcf	3,5	;RP0=0, select bank0
  2893     0B04  1303               	bcf	3,6	;RP1=0, select bank0
  2894     0B05  0186               	clrf	6	;volatile
  2895     0B06                     l2679:
  2896                           
  2897                           ;IOCB.c: 18:     OPTION_REGbits.nRBPU=0;
  2898     0B06  1683               	bsf	3,5	;RP0=1, select bank1
  2899     0B07  1303               	bcf	3,6	;RP1=0, select bank1
  2900     0B08  1381               	bcf	1,7	;volatile
  2901     0B09                     l2681:
  2902                           
  2903                           ;IOCB.c: 19:     INTCONbits.RBIE=1;
  2904     0B09  158B               	bsf	11,3	;volatile
  2905     0B0A                     l2683:
  2906                           
  2907                           ;IOCB.c: 20:     INTCONbits.RBIF=0;
  2908     0B0A  100B               	bcf	11,0	;volatile
  2909     0B0B                     l251:
  2910     0B0B  0008               	return
  2911     0B0C                     __end_of_ioc_init:
  2912                           
  2913                           	psect	text4
  2914     0C46                     __ptext4:	
  2915 ;; *************** function _Lcd_Write_String *****************
  2916 ;; Defined at:
  2917 ;;		line 98 in file "LCD.c"
  2918 ;; Parameters:    Size  Location     Type
  2919 ;;  a               2   17[BANK0 ] PTR unsigned char 
  2920 ;;		 -> STR_4(7), STR_3(5), STR_2(4), STR_1(5), 
  2921 ;;		 -> buffer3(4), buffer2(4), buffer(4), 
  2922 ;; Auto vars:     Size  Location     Type
  2923 ;;  i               2   22[BANK0 ] int 
  2924 ;; Return value:  Size  Location     Type
  2925 ;;                  1    wreg      void 
  2926 ;; Registers used:
  2927 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2928 ;; Tracked objects:
  2929 ;;		On entry : 0/0
  2930 ;;		On exit  : 0/0
  2931 ;;		Unchanged: 0/0
  2932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2933 ;;      Params:         0       2       0       0       0
  2934 ;;      Locals:         0       2       0       0       0
  2935 ;;      Temps:          0       3       0       0       0
  2936 ;;      Totals:         0       7       0       0       0
  2937 ;;Total ram usage:        7 bytes
  2938 ;; Hardware stack levels used: 1
  2939 ;; Hardware stack levels required when called: 5
  2940 ;; This function calls:
  2941 ;;		_Lcd_Write_Char
  2942 ;; This function is called by:
  2943 ;;		_main
  2944 ;;		_setup
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948     0C46                     _Lcd_Write_String:	
  2949                           ;psect for function _Lcd_Write_String
  2950                           
  2951     0C46                     l2667:	
  2952                           ;incstack = 0
  2953                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2954                           
  2955                           
  2956                           ;LCD.c: 99:     int i;;LCD.c: 100:     for (i = 0; a[i] != '\0'; i++)
  2957     0C46  1283               	bcf	3,5	;RP0=0, select bank0
  2958     0C47  1303               	bcf	3,6	;RP1=0, select bank0
  2959     0C48  01B6               	clrf	Lcd_Write_String@i
  2960     0C49  01B7               	clrf	Lcd_Write_String@i+1
  2961     0C4A  2C6F               	goto	l2673
  2962     0C4B                     l2669:
  2963                           
  2964                           ;LCD.c: 101:         Lcd_Write_Char(a[i]);
  2965     0C4B  0836               	movf	Lcd_Write_String@i,w
  2966     0C4C  0731               	addwf	Lcd_Write_String@a,w
  2967     0C4D  00B4               	movwf	??_Lcd_Write_String+1
  2968     0C4E  0832               	movf	Lcd_Write_String@a+1,w
  2969     0C4F  00B3               	movwf	??_Lcd_Write_String
  2970     0C50  1803               	skipnc
  2971     0C51  0AB3               	incf	??_Lcd_Write_String,f
  2972     0C52  1FB6               	btfss	Lcd_Write_String@i,7
  2973     0C53  2C55               	goto	u2020
  2974     0C54  03B3               	decf	??_Lcd_Write_String,f
  2975     0C55                     u2020:
  2976     0C55  1283               	bcf	3,5	;RP0=0, select bank0
  2977     0C56  1303               	bcf	3,6	;RP1=0, select bank0
  2978     0C57  0833               	movf	??_Lcd_Write_String,w
  2979     0C58  00B5               	movwf	??_Lcd_Write_String+2
  2980     0C59  0835               	movf	??_Lcd_Write_String+2,w
  2981     0C5A  00FF               	movwf	btemp+1
  2982     0C5B  0834               	movf	??_Lcd_Write_String+1,w
  2983     0C5C  0084               	movwf	4
  2984     0C5D  120A  158A  2000  120A  158A  	fcall	stringtab
  2985     0C62  120A  158A  23D3  120A  158A  	fcall	_Lcd_Write_Char
  2986     0C67                     l2671:
  2987     0C67  3001               	movlw	1
  2988     0C68  1283               	bcf	3,5	;RP0=0, select bank0
  2989     0C69  1303               	bcf	3,6	;RP1=0, select bank0
  2990     0C6A  07B6               	addwf	Lcd_Write_String@i,f
  2991     0C6B  1803               	skipnc
  2992     0C6C  0AB7               	incf	Lcd_Write_String@i+1,f
  2993     0C6D  3000               	movlw	0
  2994     0C6E  07B7               	addwf	Lcd_Write_String@i+1,f
  2995     0C6F                     l2673:
  2996     0C6F  0836               	movf	Lcd_Write_String@i,w
  2997     0C70  0731               	addwf	Lcd_Write_String@a,w
  2998     0C71  00B4               	movwf	??_Lcd_Write_String+1
  2999     0C72  0832               	movf	Lcd_Write_String@a+1,w
  3000     0C73  00B3               	movwf	??_Lcd_Write_String
  3001     0C74  1803               	skipnc
  3002     0C75  0AB3               	incf	??_Lcd_Write_String,f
  3003     0C76  1FB6               	btfss	Lcd_Write_String@i,7
  3004     0C77  2C79               	goto	u2030
  3005     0C78  03B3               	decf	??_Lcd_Write_String,f
  3006     0C79                     u2030:
  3007     0C79  1283               	bcf	3,5	;RP0=0, select bank0
  3008     0C7A  1303               	bcf	3,6	;RP1=0, select bank0
  3009     0C7B  0833               	movf	??_Lcd_Write_String,w
  3010     0C7C  00B5               	movwf	??_Lcd_Write_String+2
  3011     0C7D  0835               	movf	??_Lcd_Write_String+2,w
  3012     0C7E  00FF               	movwf	btemp+1
  3013     0C7F  0834               	movf	??_Lcd_Write_String+1,w
  3014     0C80  0084               	movwf	4
  3015     0C81  120A  158A  2000  120A  158A  	fcall	stringtab
  3016     0C86  3A00               	xorlw	0
  3017     0C87  1D03               	skipz
  3018     0C88  2C8A               	goto	u2041
  3019     0C89  2C8B               	goto	u2040
  3020     0C8A                     u2041:
  3021     0C8A  2C4B               	goto	l2669
  3022     0C8B                     u2040:
  3023     0C8B                     l230:
  3024     0C8B  0008               	return
  3025     0C8C                     __end_of_Lcd_Write_String:
  3026                           
  3027                           	psect	text5
  3028     0BD3                     __ptext5:	
  3029 ;; *************** function _Lcd_Write_Char *****************
  3030 ;; Defined at:
  3031 ;;		line 83 in file "LCD.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;  a               1    wreg     unsigned char 
  3034 ;; Auto vars:     Size  Location     Type
  3035 ;;  a               1   16[BANK0 ] unsigned char 
  3036 ;;  y               1   15[BANK0 ] unsigned char 
  3037 ;;  temp            1   14[BANK0 ] unsigned char 
  3038 ;; Return value:  Size  Location     Type
  3039 ;;                  1    wreg      void 
  3040 ;; Registers used:
  3041 ;;		wreg, status,2, status,0, pclath, cstack
  3042 ;; Tracked objects:
  3043 ;;		On entry : 0/0
  3044 ;;		On exit  : 0/0
  3045 ;;		Unchanged: 0/0
  3046 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3047 ;;      Params:         0       0       0       0       0
  3048 ;;      Locals:         0       3       0       0       0
  3049 ;;      Temps:          0       1       0       0       0
  3050 ;;      Totals:         0       4       0       0       0
  3051 ;;Total ram usage:        4 bytes
  3052 ;; Hardware stack levels used: 1
  3053 ;; Hardware stack levels required when called: 4
  3054 ;; This function calls:
  3055 ;;		_Lcd_Port
  3056 ;; This function is called by:
  3057 ;;		_main
  3058 ;;		_setup
  3059 ;;		_Lcd_Write_String
  3060 ;; This function uses a non-reentrant model
  3061 ;;
  3062                           
  3063     0BD3                     _Lcd_Write_Char:	
  3064                           ;psect for function _Lcd_Write_Char
  3065                           
  3066                           
  3067                           ;incstack = 0
  3068                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  3069                           ;Lcd_Write_Char@a stored from wreg
  3070     0BD3  1283               	bcf	3,5	;RP0=0, select bank0
  3071     0BD4  1303               	bcf	3,6	;RP1=0, select bank0
  3072     0BD5  00B0               	movwf	Lcd_Write_Char@a
  3073     0BD6                     l2575:
  3074                           
  3075                           ;LCD.c: 84:     char temp, y;;LCD.c: 85:     temp = a & 0x0F;
  3076     0BD6  0830               	movf	Lcd_Write_Char@a,w
  3077     0BD7  390F               	andlw	15
  3078     0BD8  00AE               	movwf	Lcd_Write_Char@temp
  3079                           
  3080                           ;LCD.c: 86:     y = a & 0xF0;
  3081     0BD9  0830               	movf	Lcd_Write_Char@a,w
  3082     0BDA  39F0               	andlw	240
  3083     0BDB  00AF               	movwf	Lcd_Write_Char@y
  3084     0BDC                     l2577:
  3085                           
  3086                           ;LCD.c: 87:     PORTDbits.RD2 = 1;
  3087     0BDC  1508               	bsf	8,2	;volatile
  3088     0BDD                     l2579:
  3089                           
  3090                           ;LCD.c: 88:     Lcd_Port(y >> 4);
  3091     0BDD  082F               	movf	Lcd_Write_Char@y,w
  3092     0BDE  00AD               	movwf	??_Lcd_Write_Char
  3093     0BDF  3004               	movlw	4
  3094     0BE0                     u1875:
  3095     0BE0  1003               	clrc
  3096     0BE1  0CAD               	rrf	??_Lcd_Write_Char,f
  3097     0BE2  3EFF               	addlw	-1
  3098     0BE3  1D03               	skipz
  3099     0BE4  2BE0               	goto	u1875
  3100     0BE5  082D               	movf	??_Lcd_Write_Char,w
  3101     0BE6  120A  158A  230C  120A  158A  	fcall	_Lcd_Port
  3102     0BEB                     l2581:
  3103                           
  3104                           ;LCD.c: 89:     RD3 = 1;
  3105     0BEB  1283               	bcf	3,5	;RP0=0, select bank0
  3106     0BEC  1303               	bcf	3,6	;RP1=0, select bank0
  3107     0BED  1588               	bsf	8,3	;volatile
  3108     0BEE                     l2583:
  3109                           
  3110                           ;LCD.c: 90:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3111     0BEE  3019               	movlw	25
  3112     0BEF  1283               	bcf	3,5	;RP0=0, select bank0
  3113     0BF0  1303               	bcf	3,6	;RP1=0, select bank0
  3114     0BF1  00AD               	movwf	??_Lcd_Write_Char
  3115     0BF2                     u2427:
  3116     0BF2  0BAD               	decfsz	??_Lcd_Write_Char,f
  3117     0BF3  2BF2               	goto	u2427
  3118     0BF4  2BF5               	nop2
  3119     0BF5                     l2585:
  3120                           
  3121                           ;LCD.c: 91:     RD3 = 0;
  3122     0BF5  1283               	bcf	3,5	;RP0=0, select bank0
  3123     0BF6  1303               	bcf	3,6	;RP1=0, select bank0
  3124     0BF7  1188               	bcf	8,3	;volatile
  3125     0BF8                     l2587:
  3126                           
  3127                           ;LCD.c: 92:     Lcd_Port(temp);
  3128     0BF8  082E               	movf	Lcd_Write_Char@temp,w
  3129     0BF9  120A  158A  230C  120A  158A  	fcall	_Lcd_Port
  3130     0BFE                     l2589:
  3131                           
  3132                           ;LCD.c: 93:     RD3 = 1;
  3133     0BFE  1283               	bcf	3,5	;RP0=0, select bank0
  3134     0BFF  1303               	bcf	3,6	;RP1=0, select bank0
  3135     0C00  1588               	bsf	8,3	;volatile
  3136     0C01                     l2591:
  3137                           
  3138                           ;LCD.c: 94:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  3139     0C01  3019               	movlw	25
  3140     0C02  1283               	bcf	3,5	;RP0=0, select bank0
  3141     0C03  1303               	bcf	3,6	;RP1=0, select bank0
  3142     0C04  00AD               	movwf	??_Lcd_Write_Char
  3143     0C05                     u2437:
  3144     0C05  0BAD               	decfsz	??_Lcd_Write_Char,f
  3145     0C06  2C05               	goto	u2437
  3146     0C07  2C08               	nop2
  3147     0C08                     l2593:
  3148                           
  3149                           ;LCD.c: 95:     RD3 = 0;
  3150     0C08  1283               	bcf	3,5	;RP0=0, select bank0
  3151     0C09  1303               	bcf	3,6	;RP1=0, select bank0
  3152     0C0A  1188               	bcf	8,3	;volatile
  3153     0C0B                     l224:
  3154     0C0B  0008               	return
  3155     0C0C                     __end_of_Lcd_Write_Char:
  3156                           
  3157                           	psect	text6
  3158     0C8C                     __ptext6:	
  3159 ;; *************** function _Lcd_Set_Cursor *****************
  3160 ;; Defined at:
  3161 ;;		line 48 in file "LCD.c"
  3162 ;; Parameters:    Size  Location     Type
  3163 ;;  a               1    wreg     unsigned char 
  3164 ;;  b               1   16[BANK0 ] unsigned char 
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;  a               1   18[BANK0 ] unsigned char 
  3167 ;;  temp            1   21[BANK0 ] unsigned char 
  3168 ;;  y               1   20[BANK0 ] unsigned char 
  3169 ;;  z               1   19[BANK0 ] unsigned char 
  3170 ;; Return value:  Size  Location     Type
  3171 ;;                  1    wreg      void 
  3172 ;; Registers used:
  3173 ;;		wreg, status,2, status,0, pclath, cstack
  3174 ;; Tracked objects:
  3175 ;;		On entry : 0/0
  3176 ;;		On exit  : 0/0
  3177 ;;		Unchanged: 0/0
  3178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3179 ;;      Params:         0       1       0       0       0
  3180 ;;      Locals:         0       4       0       0       0
  3181 ;;      Temps:          0       1       0       0       0
  3182 ;;      Totals:         0       6       0       0       0
  3183 ;;Total ram usage:        6 bytes
  3184 ;; Hardware stack levels used: 1
  3185 ;; Hardware stack levels required when called: 5
  3186 ;; This function calls:
  3187 ;;		_Lcd_Cmd
  3188 ;; This function is called by:
  3189 ;;		_main
  3190 ;;		_setup
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194     0C8C                     _Lcd_Set_Cursor:	
  3195                           ;psect for function _Lcd_Set_Cursor
  3196                           
  3197                           
  3198                           ;incstack = 0
  3199                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  3200                           ;Lcd_Set_Cursor@a stored from wreg
  3201     0C8C  1283               	bcf	3,5	;RP0=0, select bank0
  3202     0C8D  1303               	bcf	3,6	;RP1=0, select bank0
  3203     0C8E  00B2               	movwf	Lcd_Set_Cursor@a
  3204     0C8F                     l2647:
  3205                           
  3206                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  3207     0C8F  0332               	decf	Lcd_Set_Cursor@a,w
  3208     0C90  1D03               	btfss	3,2
  3209     0C91  2C93               	goto	u1981
  3210     0C92  2C94               	goto	u1980
  3211     0C93                     u1981:
  3212     0C93  2CB3               	goto	l2657
  3213     0C94                     u1980:
  3214     0C94                     l2649:
  3215                           
  3216                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  3217     0C94  0830               	movf	Lcd_Set_Cursor@b,w
  3218     0C95  3E7F               	addlw	127
  3219     0C96  00B5               	movwf	Lcd_Set_Cursor@temp
  3220                           
  3221                           ;LCD.c: 52:         z = temp >> 4;
  3222     0C97  0835               	movf	Lcd_Set_Cursor@temp,w
  3223     0C98  00B1               	movwf	??_Lcd_Set_Cursor
  3224     0C99  3004               	movlw	4
  3225     0C9A                     u1995:
  3226     0C9A  1003               	clrc
  3227     0C9B  0CB1               	rrf	??_Lcd_Set_Cursor,f
  3228     0C9C  3EFF               	addlw	-1
  3229     0C9D  1D03               	skipz
  3230     0C9E  2C9A               	goto	u1995
  3231     0C9F  0831               	movf	??_Lcd_Set_Cursor,w
  3232     0CA0  00B3               	movwf	Lcd_Set_Cursor@z
  3233     0CA1                     l2651:
  3234                           
  3235                           ;LCD.c: 53:         y = temp & 0x0F;
  3236     0CA1  0835               	movf	Lcd_Set_Cursor@temp,w
  3237     0CA2  390F               	andlw	15
  3238     0CA3  00B4               	movwf	Lcd_Set_Cursor@y
  3239     0CA4                     l2653:
  3240                           
  3241                           ;LCD.c: 54:         Lcd_Cmd(z);
  3242     0CA4  0833               	movf	Lcd_Set_Cursor@z,w
  3243     0CA5  120A  158A  22D4  120A  158A  	fcall	_Lcd_Cmd
  3244     0CAA                     l2655:
  3245                           
  3246                           ;LCD.c: 55:         Lcd_Cmd(y);
  3247     0CAA  1283               	bcf	3,5	;RP0=0, select bank0
  3248     0CAB  1303               	bcf	3,6	;RP1=0, select bank0
  3249     0CAC  0834               	movf	Lcd_Set_Cursor@y,w
  3250     0CAD  120A  158A  22D4  120A  158A  	fcall	_Lcd_Cmd
  3251                           
  3252                           ;LCD.c: 56:     } else if (a == 2) {
  3253     0CB2  2CD7               	goto	l218
  3254     0CB3                     l2657:
  3255     0CB3  3002               	movlw	2
  3256     0CB4  0632               	xorwf	Lcd_Set_Cursor@a,w
  3257     0CB5  1D03               	btfss	3,2
  3258     0CB6  2CB8               	goto	u2001
  3259     0CB7  2CB9               	goto	u2000
  3260     0CB8                     u2001:
  3261     0CB8  2CD7               	goto	l218
  3262     0CB9                     u2000:
  3263     0CB9                     l2659:
  3264                           
  3265                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  3266     0CB9  0830               	movf	Lcd_Set_Cursor@b,w
  3267     0CBA  3EBF               	addlw	191
  3268     0CBB  00B5               	movwf	Lcd_Set_Cursor@temp
  3269                           
  3270                           ;LCD.c: 58:         z = temp >> 4;
  3271     0CBC  0835               	movf	Lcd_Set_Cursor@temp,w
  3272     0CBD  00B1               	movwf	??_Lcd_Set_Cursor
  3273     0CBE  3004               	movlw	4
  3274     0CBF                     u2015:
  3275     0CBF  1003               	clrc
  3276     0CC0  0CB1               	rrf	??_Lcd_Set_Cursor,f
  3277     0CC1  3EFF               	addlw	-1
  3278     0CC2  1D03               	skipz
  3279     0CC3  2CBF               	goto	u2015
  3280     0CC4  0831               	movf	??_Lcd_Set_Cursor,w
  3281     0CC5  00B3               	movwf	Lcd_Set_Cursor@z
  3282     0CC6                     l2661:
  3283                           
  3284                           ;LCD.c: 59:         y = temp & 0x0F;
  3285     0CC6  0835               	movf	Lcd_Set_Cursor@temp,w
  3286     0CC7  390F               	andlw	15
  3287     0CC8  00B4               	movwf	Lcd_Set_Cursor@y
  3288     0CC9                     l2663:
  3289                           
  3290                           ;LCD.c: 60:         Lcd_Cmd(z);
  3291     0CC9  0833               	movf	Lcd_Set_Cursor@z,w
  3292     0CCA  120A  158A  22D4  120A  158A  	fcall	_Lcd_Cmd
  3293     0CCF                     l2665:
  3294                           
  3295                           ;LCD.c: 61:         Lcd_Cmd(y);
  3296     0CCF  1283               	bcf	3,5	;RP0=0, select bank0
  3297     0CD0  1303               	bcf	3,6	;RP1=0, select bank0
  3298     0CD1  0834               	movf	Lcd_Set_Cursor@y,w
  3299     0CD2  120A  158A  22D4  120A  158A  	fcall	_Lcd_Cmd
  3300     0CD7                     l218:
  3301     0CD7  0008               	return
  3302     0CD8                     __end_of_Lcd_Set_Cursor:
  3303                           
  3304                           	psect	text7
  3305     0DED                     __ptext7:	
  3306 ;; *************** function _Lcd_Init *****************
  3307 ;; Defined at:
  3308 ;;		line 65 in file "LCD.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;		None
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;		None
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  1    wreg      void 
  3315 ;; Registers used:
  3316 ;;		wreg, status,2, status,0, pclath, cstack
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3322 ;;      Params:         0       0       0       0       0
  3323 ;;      Locals:         0       0       0       0       0
  3324 ;;      Temps:          0       2       0       0       0
  3325 ;;      Totals:         0       2       0       0       0
  3326 ;;Total ram usage:        2 bytes
  3327 ;; Hardware stack levels used: 1
  3328 ;; Hardware stack levels required when called: 5
  3329 ;; This function calls:
  3330 ;;		_Lcd_Cmd
  3331 ;;		_Lcd_Port
  3332 ;; This function is called by:
  3333 ;;		_setup
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337     0DED                     _Lcd_Init:	
  3338                           ;psect for function _Lcd_Init
  3339                           
  3340     0DED                     l2685:	
  3341                           ;incstack = 0
  3342                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  3343                           
  3344                           
  3345                           ;LCD.c: 66:     Lcd_Port(0x00);
  3346     0DED  3000               	movlw	0
  3347     0DEE  120A  158A  230C  120A  158A  	fcall	_Lcd_Port
  3348     0DF3                     l2687:
  3349                           
  3350                           ;LCD.c: 67:     _delay((unsigned long)((20)*(8000000/4000.0)));
  3351     0DF3  3034               	movlw	52
  3352     0DF4  1283               	bcf	3,5	;RP0=0, select bank0
  3353     0DF5  1303               	bcf	3,6	;RP1=0, select bank0
  3354     0DF6  00B1               	movwf	??_Lcd_Init+1
  3355     0DF7  30F1               	movlw	241
  3356     0DF8  00B0               	movwf	??_Lcd_Init
  3357     0DF9                     u2447:
  3358     0DF9  0BB0               	decfsz	??_Lcd_Init,f
  3359     0DFA  2DF9               	goto	u2447
  3360     0DFB  0BB1               	decfsz	??_Lcd_Init+1,f
  3361     0DFC  2DF9               	goto	u2447
  3362     0DFD                     l2689:
  3363                           
  3364                           ;LCD.c: 68:     Lcd_Cmd(0x03);
  3365     0DFD  3003               	movlw	3
  3366     0DFE  120A  158A  22D4  120A  158A  	fcall	_Lcd_Cmd
  3367                           
  3368                           ;LCD.c: 69:     _delay((unsigned long)((5)*(8000000/4000.0)));
  3369     0E03  300D               	movlw	13
  3370     0E04  1283               	bcf	3,5	;RP0=0, select bank0
  3371     0E05  1303               	bcf	3,6	;RP1=0, select bank0
  3372     0E06  00B1               	movwf	??_Lcd_Init+1
  3373     0E07  30FB               	movlw	251
  3374     0E08  00B0               	movwf	??_Lcd_Init
  3375     0E09                     u2457:
  3376     0E09  0BB0               	decfsz	??_Lcd_Init,f
  3377     0E0A  2E09               	goto	u2457
  3378     0E0B  0BB1               	decfsz	??_Lcd_Init+1,f
  3379     0E0C  2E09               	goto	u2457
  3380     0E0D                     l2691:
  3381                           
  3382                           ;LCD.c: 70:     Lcd_Cmd(0x03);
  3383     0E0D  3003               	movlw	3
  3384     0E0E  120A  158A  22D4  120A  158A  	fcall	_Lcd_Cmd
  3385     0E13                     l2693:
  3386                           
  3387                           ;LCD.c: 71:     _delay((unsigned long)((11)*(8000000/4000.0)));
  3388     0E13  301D               	movlw	29
  3389     0E14  1283               	bcf	3,5	;RP0=0, select bank0
  3390     0E15  1303               	bcf	3,6	;RP1=0, select bank0
  3391     0E16  00B1               	movwf	??_Lcd_Init+1
  3392     0E17  3090               	movlw	144
  3393     0E18  00B0               	movwf	??_Lcd_Init
  3394     0E19                     u2467:
  3395     0E19  0BB0               	decfsz	??_Lcd_Init,f
  3396     0E1A  2E19               	goto	u2467
  3397     0E1B  0BB1               	decfsz	??_Lcd_Init+1,f
  3398     0E1C  2E19               	goto	u2467
  3399     0E1D  0000               	nop
  3400                           
  3401                           ;LCD.c: 72:     Lcd_Cmd(0x03);
  3402     0E1E  3003               	movlw	3
  3403     0E1F  120A  158A  22D4  120A  158A  	fcall	_Lcd_Cmd
  3404                           
  3405                           ;LCD.c: 74:     Lcd_Cmd(0x02);
  3406     0E24  3002               	movlw	2
  3407     0E25  120A  158A  22D4  120A  158A  	fcall	_Lcd_Cmd
  3408                           
  3409                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  3410     0E2A  3002               	movlw	2
  3411     0E2B  120A  158A  22D4  120A  158A  	fcall	_Lcd_Cmd
  3412                           
  3413                           ;LCD.c: 76:     Lcd_Cmd(0x08);
  3414     0E30  3008               	movlw	8
  3415     0E31  120A  158A  22D4  120A  158A  	fcall	_Lcd_Cmd
  3416                           
  3417                           ;LCD.c: 77:     Lcd_Cmd(0x00);
  3418     0E36  3000               	movlw	0
  3419     0E37  120A  158A  22D4  120A  158A  	fcall	_Lcd_Cmd
  3420                           
  3421                           ;LCD.c: 78:     Lcd_Cmd(0x0C);
  3422     0E3C  300C               	movlw	12
  3423     0E3D  120A  158A  22D4  120A  158A  	fcall	_Lcd_Cmd
  3424                           
  3425                           ;LCD.c: 79:     Lcd_Cmd(0x00);
  3426     0E42  3000               	movlw	0
  3427     0E43  120A  158A  22D4  120A  158A  	fcall	_Lcd_Cmd
  3428                           
  3429                           ;LCD.c: 80:     Lcd_Cmd(0x06);
  3430     0E48  3006               	movlw	6
  3431     0E49  120A  158A  22D4  120A  158A  	fcall	_Lcd_Cmd
  3432     0E4E                     l221:
  3433     0E4E  0008               	return
  3434     0E4F                     __end_of_Lcd_Init:
  3435                           
  3436                           	psect	text8
  3437     0AB4                     __ptext8:	
  3438 ;; *************** function _Lcd_Clear *****************
  3439 ;; Defined at:
  3440 ;;		line 43 in file "LCD.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;		None
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;		None
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  1    wreg      void 
  3447 ;; Registers used:
  3448 ;;		wreg, status,2, status,0, pclath, cstack
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3454 ;;      Params:         0       0       0       0       0
  3455 ;;      Locals:         0       0       0       0       0
  3456 ;;      Temps:          0       0       0       0       0
  3457 ;;      Totals:         0       0       0       0       0
  3458 ;;Total ram usage:        0 bytes
  3459 ;; Hardware stack levels used: 1
  3460 ;; Hardware stack levels required when called: 5
  3461 ;; This function calls:
  3462 ;;		_Lcd_Cmd
  3463 ;; This function is called by:
  3464 ;;		_main
  3465 ;;		_setup
  3466 ;; This function uses a non-reentrant model
  3467 ;;
  3468                           
  3469     0AB4                     _Lcd_Clear:	
  3470                           ;psect for function _Lcd_Clear
  3471                           
  3472     0AB4                     l2645:	
  3473                           ;incstack = 0
  3474                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  3475                           
  3476                           
  3477                           ;LCD.c: 44:     Lcd_Cmd(0);
  3478     0AB4  3000               	movlw	0
  3479     0AB5  120A  158A  22D4  120A  158A  	fcall	_Lcd_Cmd
  3480                           
  3481                           ;LCD.c: 45:     Lcd_Cmd(1);
  3482     0ABA  3001               	movlw	1
  3483     0ABB  120A  158A  22D4  120A  158A  	fcall	_Lcd_Cmd
  3484     0AC0                     l212:
  3485     0AC0  0008               	return
  3486     0AC1                     __end_of_Lcd_Clear:
  3487                           
  3488                           	psect	text9
  3489     0AD4                     __ptext9:	
  3490 ;; *************** function _Lcd_Cmd *****************
  3491 ;; Defined at:
  3492 ;;		line 35 in file "LCD.c"
  3493 ;; Parameters:    Size  Location     Type
  3494 ;;  a               1    wreg     unsigned char 
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;  a               1   15[BANK0 ] unsigned char 
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  1    wreg      void 
  3499 ;; Registers used:
  3500 ;;		wreg, status,2, status,0, pclath, cstack
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3506 ;;      Params:         0       0       0       0       0
  3507 ;;      Locals:         0       1       0       0       0
  3508 ;;      Temps:          0       2       0       0       0
  3509 ;;      Totals:         0       3       0       0       0
  3510 ;;Total ram usage:        3 bytes
  3511 ;; Hardware stack levels used: 1
  3512 ;; Hardware stack levels required when called: 4
  3513 ;; This function calls:
  3514 ;;		_Lcd_Port
  3515 ;; This function is called by:
  3516 ;;		_Lcd_Clear
  3517 ;;		_Lcd_Set_Cursor
  3518 ;;		_Lcd_Init
  3519 ;;		_Lcd_Shift_Right
  3520 ;;		_Lcd_Shift_Left
  3521 ;; This function uses a non-reentrant model
  3522 ;;
  3523                           
  3524     0AD4                     _Lcd_Cmd:	
  3525                           ;psect for function _Lcd_Cmd
  3526                           
  3527                           
  3528                           ;incstack = 0
  3529                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  3530                           ;Lcd_Cmd@a stored from wreg
  3531     0AD4  1283               	bcf	3,5	;RP0=0, select bank0
  3532     0AD5  1303               	bcf	3,6	;RP1=0, select bank0
  3533     0AD6  00AF               	movwf	Lcd_Cmd@a
  3534     0AD7                     l2595:
  3535                           
  3536                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  3537     0AD7  1108               	bcf	8,2	;volatile
  3538     0AD8                     l2597:
  3539                           
  3540                           ;LCD.c: 37:     Lcd_Port(a);
  3541     0AD8  082F               	movf	Lcd_Cmd@a,w
  3542     0AD9  120A  158A  230C  120A  158A  	fcall	_Lcd_Port
  3543     0ADE                     l2599:
  3544                           
  3545                           ;LCD.c: 38:     RD3 = 1;
  3546     0ADE  1283               	bcf	3,5	;RP0=0, select bank0
  3547     0ADF  1303               	bcf	3,6	;RP1=0, select bank0
  3548     0AE0  1588               	bsf	8,3	;volatile
  3549     0AE1                     l2601:
  3550                           
  3551                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  3552     0AE1  300B               	movlw	11
  3553     0AE2  1283               	bcf	3,5	;RP0=0, select bank0
  3554     0AE3  1303               	bcf	3,6	;RP1=0, select bank0
  3555     0AE4  00AE               	movwf	??_Lcd_Cmd+1
  3556     0AE5  3061               	movlw	97
  3557     0AE6  00AD               	movwf	??_Lcd_Cmd
  3558     0AE7                     u2477:
  3559     0AE7  0BAD               	decfsz	??_Lcd_Cmd,f
  3560     0AE8  2AE7               	goto	u2477
  3561     0AE9  0BAE               	decfsz	??_Lcd_Cmd+1,f
  3562     0AEA  2AE7               	goto	u2477
  3563     0AEB  2AEC               	nop2
  3564     0AEC                     l2603:
  3565                           
  3566                           ;LCD.c: 40:     RD3 = 0;
  3567     0AEC  1283               	bcf	3,5	;RP0=0, select bank0
  3568     0AED  1303               	bcf	3,6	;RP1=0, select bank0
  3569     0AEE  1188               	bcf	8,3	;volatile
  3570     0AEF                     l209:
  3571     0AEF  0008               	return
  3572     0AF0                     __end_of_Lcd_Cmd:
  3573                           
  3574                           	psect	text10
  3575     0B0C                     __ptext10:	
  3576 ;; *************** function _Lcd_Port *****************
  3577 ;; Defined at:
  3578 ;;		line 13 in file "LCD.c"
  3579 ;; Parameters:    Size  Location     Type
  3580 ;;  a               1    wreg     unsigned char 
  3581 ;; Auto vars:     Size  Location     Type
  3582 ;;  a               1   12[BANK0 ] unsigned char 
  3583 ;; Return value:  Size  Location     Type
  3584 ;;                  1    wreg      void 
  3585 ;; Registers used:
  3586 ;;		wreg
  3587 ;; Tracked objects:
  3588 ;;		On entry : 0/0
  3589 ;;		On exit  : 0/0
  3590 ;;		Unchanged: 0/0
  3591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3592 ;;      Params:         0       0       0       0       0
  3593 ;;      Locals:         0       1       0       0       0
  3594 ;;      Temps:          0       0       0       0       0
  3595 ;;      Totals:         0       1       0       0       0
  3596 ;;Total ram usage:        1 bytes
  3597 ;; Hardware stack levels used: 1
  3598 ;; Hardware stack levels required when called: 3
  3599 ;; This function calls:
  3600 ;;		Nothing
  3601 ;; This function is called by:
  3602 ;;		_Lcd_Cmd
  3603 ;;		_Lcd_Init
  3604 ;;		_Lcd_Write_Char
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           
  3608     0B0C                     _Lcd_Port:	
  3609                           ;psect for function _Lcd_Port
  3610                           
  3611                           
  3612                           ;incstack = 0
  3613                           ; Regs used in _Lcd_Port: [wreg]
  3614                           ;Lcd_Port@a stored from wreg
  3615     0B0C  1283               	bcf	3,5	;RP0=0, select bank0
  3616     0B0D  1303               	bcf	3,6	;RP1=0, select bank0
  3617     0B0E  00AC               	movwf	Lcd_Port@a
  3618     0B0F                     l2565:
  3619                           
  3620                           ;LCD.c: 14:     if (a & 1)
  3621     0B0F  1C2C               	btfss	Lcd_Port@a,0
  3622     0B10  2B12               	goto	u1831
  3623     0B11  2B13               	goto	u1830
  3624     0B12                     u1831:
  3625     0B12  2B15               	goto	l198
  3626     0B13                     u1830:
  3627     0B13                     l2567:
  3628                           
  3629                           ;LCD.c: 15:         RD4 = 1;
  3630     0B13  1608               	bsf	8,4	;volatile
  3631     0B14  2B16               	goto	l199
  3632     0B15                     l198:	
  3633                           ;LCD.c: 16:     else
  3634                           
  3635                           
  3636                           ;LCD.c: 17:         RD4 = 0;
  3637     0B15  1208               	bcf	8,4	;volatile
  3638     0B16                     l199:
  3639                           
  3640                           ;LCD.c: 19:     if (a & 2)
  3641     0B16  1CAC               	btfss	Lcd_Port@a,1
  3642     0B17  2B19               	goto	u1841
  3643     0B18  2B1A               	goto	u1840
  3644     0B19                     u1841:
  3645     0B19  2B1C               	goto	l200
  3646     0B1A                     u1840:
  3647     0B1A                     l2569:
  3648                           
  3649                           ;LCD.c: 20:         RD5 = 1;
  3650     0B1A  1688               	bsf	8,5	;volatile
  3651     0B1B  2B1D               	goto	l201
  3652     0B1C                     l200:	
  3653                           ;LCD.c: 21:     else
  3654                           
  3655                           
  3656                           ;LCD.c: 22:         RD5 = 0;
  3657     0B1C  1288               	bcf	8,5	;volatile
  3658     0B1D                     l201:
  3659                           
  3660                           ;LCD.c: 24:     if (a & 4)
  3661     0B1D  1D2C               	btfss	Lcd_Port@a,2
  3662     0B1E  2B20               	goto	u1851
  3663     0B1F  2B21               	goto	u1850
  3664     0B20                     u1851:
  3665     0B20  2B23               	goto	l202
  3666     0B21                     u1850:
  3667     0B21                     l2571:
  3668                           
  3669                           ;LCD.c: 25:         RD6 = 1;
  3670     0B21  1708               	bsf	8,6	;volatile
  3671     0B22  2B24               	goto	l203
  3672     0B23                     l202:	
  3673                           ;LCD.c: 26:     else
  3674                           
  3675                           
  3676                           ;LCD.c: 27:         RD6 = 0;
  3677     0B23  1308               	bcf	8,6	;volatile
  3678     0B24                     l203:
  3679                           
  3680                           ;LCD.c: 29:     if (a & 8)
  3681     0B24  1DAC               	btfss	Lcd_Port@a,3
  3682     0B25  2B27               	goto	u1861
  3683     0B26  2B28               	goto	u1860
  3684     0B27                     u1861:
  3685     0B27  2B2A               	goto	l204
  3686     0B28                     u1860:
  3687     0B28                     l2573:
  3688                           
  3689                           ;LCD.c: 30:         RD7 = 1;
  3690     0B28  1788               	bsf	8,7	;volatile
  3691     0B29  2B2B               	goto	l206
  3692     0B2A                     l204:	
  3693                           ;LCD.c: 31:     else
  3694                           
  3695                           
  3696                           ;LCD.c: 32:         RD7 = 0;
  3697     0B2A  1388               	bcf	8,7	;volatile
  3698     0B2B                     l206:
  3699     0B2B  0008               	return
  3700     0B2C                     __end_of_Lcd_Port:
  3701                           
  3702                           	psect	text11
  3703     0C0C                     __ptext11:	
  3704 ;; *************** function _I2C_Master_Init *****************
  3705 ;; Defined at:
  3706 ;;		line 16 in file "I2C.c"
  3707 ;; Parameters:    Size  Location     Type
  3708 ;;  c               4   26[BANK0 ] const unsigned long 
  3709 ;; Auto vars:     Size  Location     Type
  3710 ;;		None
  3711 ;; Return value:  Size  Location     Type
  3712 ;;                  1    wreg      void 
  3713 ;; Registers used:
  3714 ;;		wreg, status,2, status,0, pclath, cstack
  3715 ;; Tracked objects:
  3716 ;;		On entry : 0/0
  3717 ;;		On exit  : 0/0
  3718 ;;		Unchanged: 0/0
  3719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3720 ;;      Params:         0       4       0       0       0
  3721 ;;      Locals:         0       0       0       0       0
  3722 ;;      Temps:          0       4       0       0       0
  3723 ;;      Totals:         0       8       0       0       0
  3724 ;;Total ram usage:        8 bytes
  3725 ;; Hardware stack levels used: 1
  3726 ;; Hardware stack levels required when called: 4
  3727 ;; This function calls:
  3728 ;;		___lldiv
  3729 ;; This function is called by:
  3730 ;;		_setup
  3731 ;; This function uses a non-reentrant model
  3732 ;;
  3733                           
  3734     0C0C                     _I2C_Master_Init:	
  3735                           ;psect for function _I2C_Master_Init
  3736                           
  3737     0C0C                     l2629:	
  3738                           ;incstack = 0
  3739                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3740                           
  3741                           
  3742                           ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
      +                          ON = 0b00101000;
  3743     0C0C  3028               	movlw	40
  3744     0C0D  1283               	bcf	3,5	;RP0=0, select bank0
  3745     0C0E  1303               	bcf	3,6	;RP1=0, select bank0
  3746     0C0F  0094               	movwf	20	;volatile
  3747     0C10                     l2631:
  3748                           
  3749                           ;I2C.c: 19:     SSPCON2 = 0;
  3750     0C10  1683               	bsf	3,5	;RP0=1, select bank1
  3751     0C11  1303               	bcf	3,6	;RP1=0, select bank1
  3752     0C12  0191               	clrf	17	;volatile
  3753     0C13                     l2633:
  3754                           
  3755                           ;I2C.c: 20:     SSPADD = (8000000/(4*c))-1;
  3756     0C13  1283               	bcf	3,5	;RP0=0, select bank0
  3757     0C14  1303               	bcf	3,6	;RP1=0, select bank0
  3758     0C15  083A               	movf	I2C_Master_Init@c,w
  3759     0C16  00BE               	movwf	??_I2C_Master_Init
  3760     0C17  083B               	movf	I2C_Master_Init@c+1,w
  3761     0C18  00BF               	movwf	??_I2C_Master_Init+1
  3762     0C19  083C               	movf	I2C_Master_Init@c+2,w
  3763     0C1A  00C0               	movwf	??_I2C_Master_Init+2
  3764     0C1B  083D               	movf	I2C_Master_Init@c+3,w
  3765     0C1C  00C1               	movwf	??_I2C_Master_Init+3
  3766     0C1D  3002               	movlw	2
  3767     0C1E                     u1955:
  3768     0C1E  1003               	clrc
  3769     0C1F  0DBE               	rlf	??_I2C_Master_Init,f
  3770     0C20  0DBF               	rlf	??_I2C_Master_Init+1,f
  3771     0C21  0DC0               	rlf	??_I2C_Master_Init+2,f
  3772     0C22  0DC1               	rlf	??_I2C_Master_Init+3,f
  3773     0C23                     u1950:
  3774     0C23  3EFF               	addlw	-1
  3775     0C24  1D03               	skipz
  3776     0C25  2C1E               	goto	u1955
  3777     0C26  0841               	movf	??_I2C_Master_Init+3,w
  3778     0C27  00AF               	movwf	___lldiv@divisor+3
  3779     0C28  0840               	movf	??_I2C_Master_Init+2,w
  3780     0C29  00AE               	movwf	___lldiv@divisor+2
  3781     0C2A  083F               	movf	??_I2C_Master_Init+1,w
  3782     0C2B  00AD               	movwf	___lldiv@divisor+1
  3783     0C2C  083E               	movf	??_I2C_Master_Init,w
  3784     0C2D  00AC               	movwf	___lldiv@divisor
  3785     0C2E  3000               	movlw	0
  3786     0C2F  00B3               	movwf	___lldiv@dividend+3
  3787     0C30  307A               	movlw	122
  3788     0C31  00B2               	movwf	___lldiv@dividend+2
  3789     0C32  3012               	movlw	18
  3790     0C33  00B1               	movwf	___lldiv@dividend+1
  3791     0C34  3000               	movlw	0
  3792     0C35  00B0               	movwf	___lldiv@dividend
  3793     0C36  120A  158A  26B6  120A  158A  	fcall	___lldiv
  3794     0C3B  1283               	bcf	3,5	;RP0=0, select bank0
  3795     0C3C  1303               	bcf	3,6	;RP1=0, select bank0
  3796     0C3D  082C               	movf	?___lldiv,w
  3797     0C3E  3EFF               	addlw	255
  3798     0C3F  1683               	bsf	3,5	;RP0=1, select bank1
  3799     0C40  1303               	bcf	3,6	;RP1=0, select bank1
  3800     0C41  0093               	movwf	19	;volatile
  3801     0C42                     l2635:
  3802                           
  3803                           ;I2C.c: 21:     SSPSTAT = 0;
  3804     0C42  0194               	clrf	20	;volatile
  3805     0C43                     l2637:
  3806                           
  3807                           ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  3808     0C43  1587               	bsf	7,3	;volatile
  3809     0C44                     l2639:
  3810                           
  3811                           ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  3812     0C44  1607               	bsf	7,4	;volatile
  3813     0C45                     l29:
  3814     0C45  0008               	return
  3815     0C46                     __end_of_I2C_Master_Init:
  3816                           
  3817                           	psect	text12
  3818     0EB6                     __ptext12:	
  3819 ;; *************** function ___lldiv *****************
  3820 ;; Defined at:
  3821 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\__lldiv.c"
  3822 ;; Parameters:    Size  Location     Type
  3823 ;;  divisor         4   12[BANK0 ] unsigned long 
  3824 ;;  dividend        4   16[BANK0 ] unsigned long 
  3825 ;; Auto vars:     Size  Location     Type
  3826 ;;  quotient        4   21[BANK0 ] unsigned long 
  3827 ;;  counter         1   25[BANK0 ] unsigned char 
  3828 ;; Return value:  Size  Location     Type
  3829 ;;                  4   12[BANK0 ] unsigned long 
  3830 ;; Registers used:
  3831 ;;		wreg, status,2, status,0
  3832 ;; Tracked objects:
  3833 ;;		On entry : 0/0
  3834 ;;		On exit  : 0/0
  3835 ;;		Unchanged: 0/0
  3836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3837 ;;      Params:         0       8       0       0       0
  3838 ;;      Locals:         0       5       0       0       0
  3839 ;;      Temps:          0       1       0       0       0
  3840 ;;      Totals:         0      14       0       0       0
  3841 ;;Total ram usage:       14 bytes
  3842 ;; Hardware stack levels used: 1
  3843 ;; Hardware stack levels required when called: 3
  3844 ;; This function calls:
  3845 ;;		Nothing
  3846 ;; This function is called by:
  3847 ;;		_I2C_Master_Init
  3848 ;; This function uses a non-reentrant model
  3849 ;;
  3850                           
  3851     0EB6                     ___lldiv:	
  3852                           ;psect for function ___lldiv
  3853                           
  3854     0EB6                     l2605:	
  3855                           ;incstack = 0
  3856                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3857                           
  3858     0EB6  3000               	movlw	0
  3859     0EB7  1283               	bcf	3,5	;RP0=0, select bank0
  3860     0EB8  1303               	bcf	3,6	;RP1=0, select bank0
  3861     0EB9  00B8               	movwf	___lldiv@quotient+3
  3862     0EBA  3000               	movlw	0
  3863     0EBB  00B7               	movwf	___lldiv@quotient+2
  3864     0EBC  3000               	movlw	0
  3865     0EBD  00B6               	movwf	___lldiv@quotient+1
  3866     0EBE  3000               	movlw	0
  3867     0EBF  00B5               	movwf	___lldiv@quotient
  3868     0EC0  082F               	movf	___lldiv@divisor+3,w
  3869     0EC1  042E               	iorwf	___lldiv@divisor+2,w
  3870     0EC2  042D               	iorwf	___lldiv@divisor+1,w
  3871     0EC3  042C               	iorwf	___lldiv@divisor,w
  3872     0EC4  1903               	skipnz
  3873     0EC5  2EC7               	goto	u1881
  3874     0EC6  2EC8               	goto	u1880
  3875     0EC7                     u1881:
  3876     0EC7  2F15               	goto	l2625
  3877     0EC8                     u1880:
  3878     0EC8                     l2607:
  3879     0EC8  01B9               	clrf	___lldiv@counter
  3880     0EC9  0AB9               	incf	___lldiv@counter,f
  3881     0ECA  2ED8               	goto	l2611
  3882     0ECB                     l2609:
  3883     0ECB  3001               	movlw	1
  3884     0ECC  00B4               	movwf	??___lldiv
  3885     0ECD                     u1895:
  3886     0ECD  1003               	clrc
  3887     0ECE  0DAC               	rlf	___lldiv@divisor,f
  3888     0ECF  0DAD               	rlf	___lldiv@divisor+1,f
  3889     0ED0  0DAE               	rlf	___lldiv@divisor+2,f
  3890     0ED1  0DAF               	rlf	___lldiv@divisor+3,f
  3891     0ED2  0BB4               	decfsz	??___lldiv,f
  3892     0ED3  2ECD               	goto	u1895
  3893     0ED4  3001               	movlw	1
  3894     0ED5  00B4               	movwf	??___lldiv
  3895     0ED6  0834               	movf	??___lldiv,w
  3896     0ED7  07B9               	addwf	___lldiv@counter,f
  3897     0ED8                     l2611:
  3898     0ED8  1FAF               	btfss	___lldiv@divisor+3,7
  3899     0ED9  2EDB               	goto	u1901
  3900     0EDA  2EDC               	goto	u1900
  3901     0EDB                     u1901:
  3902     0EDB  2ECB               	goto	l2609
  3903     0EDC                     u1900:
  3904     0EDC                     l2613:
  3905     0EDC  3001               	movlw	1
  3906     0EDD  00B4               	movwf	??___lldiv
  3907     0EDE                     u1915:
  3908     0EDE  1003               	clrc
  3909     0EDF  0DB5               	rlf	___lldiv@quotient,f
  3910     0EE0  0DB6               	rlf	___lldiv@quotient+1,f
  3911     0EE1  0DB7               	rlf	___lldiv@quotient+2,f
  3912     0EE2  0DB8               	rlf	___lldiv@quotient+3,f
  3913     0EE3  0BB4               	decfsz	??___lldiv,f
  3914     0EE4  2EDE               	goto	u1915
  3915     0EE5                     l2615:
  3916     0EE5  082F               	movf	___lldiv@divisor+3,w
  3917     0EE6  0233               	subwf	___lldiv@dividend+3,w
  3918     0EE7  1D03               	skipz
  3919     0EE8  2EF3               	goto	u1925
  3920     0EE9  082E               	movf	___lldiv@divisor+2,w
  3921     0EEA  0232               	subwf	___lldiv@dividend+2,w
  3922     0EEB  1D03               	skipz
  3923     0EEC  2EF3               	goto	u1925
  3924     0EED  082D               	movf	___lldiv@divisor+1,w
  3925     0EEE  0231               	subwf	___lldiv@dividend+1,w
  3926     0EEF  1D03               	skipz
  3927     0EF0  2EF3               	goto	u1925
  3928     0EF1  082C               	movf	___lldiv@divisor,w
  3929     0EF2  0230               	subwf	___lldiv@dividend,w
  3930     0EF3                     u1925:
  3931     0EF3  1C03               	skipc
  3932     0EF4  2EF6               	goto	u1921
  3933     0EF5  2EF7               	goto	u1920
  3934     0EF6                     u1921:
  3935     0EF6  2F06               	goto	l2621
  3936     0EF7                     u1920:
  3937     0EF7                     l2617:
  3938     0EF7  082C               	movf	___lldiv@divisor,w
  3939     0EF8  02B0               	subwf	___lldiv@dividend,f
  3940     0EF9  082D               	movf	___lldiv@divisor+1,w
  3941     0EFA  1C03               	skipc
  3942     0EFB  0F2D               	incfsz	___lldiv@divisor+1,w
  3943     0EFC  02B1               	subwf	___lldiv@dividend+1,f
  3944     0EFD  082E               	movf	___lldiv@divisor+2,w
  3945     0EFE  1C03               	skipc
  3946     0EFF  0F2E               	incfsz	___lldiv@divisor+2,w
  3947     0F00  02B2               	subwf	___lldiv@dividend+2,f
  3948     0F01  082F               	movf	___lldiv@divisor+3,w
  3949     0F02  1C03               	skipc
  3950     0F03  0F2F               	incfsz	___lldiv@divisor+3,w
  3951     0F04  02B3               	subwf	___lldiv@dividend+3,f
  3952     0F05                     l2619:
  3953     0F05  1435               	bsf	___lldiv@quotient,0
  3954     0F06                     l2621:
  3955     0F06  3001               	movlw	1
  3956     0F07                     u1935:
  3957     0F07  1003               	clrc
  3958     0F08  0CAF               	rrf	___lldiv@divisor+3,f
  3959     0F09  0CAE               	rrf	___lldiv@divisor+2,f
  3960     0F0A  0CAD               	rrf	___lldiv@divisor+1,f
  3961     0F0B  0CAC               	rrf	___lldiv@divisor,f
  3962     0F0C  3EFF               	addlw	-1
  3963     0F0D  1D03               	skipz
  3964     0F0E  2F07               	goto	u1935
  3965     0F0F                     l2623:
  3966     0F0F  3001               	movlw	1
  3967     0F10  02B9               	subwf	___lldiv@counter,f
  3968     0F11  1D03               	btfss	3,2
  3969     0F12  2F14               	goto	u1941
  3970     0F13  2F15               	goto	u1940
  3971     0F14                     u1941:
  3972     0F14  2EDC               	goto	l2613
  3973     0F15                     u1940:
  3974     0F15                     l2625:
  3975     0F15  0838               	movf	___lldiv@quotient+3,w
  3976     0F16  00AF               	movwf	?___lldiv+3
  3977     0F17  0837               	movf	___lldiv@quotient+2,w
  3978     0F18  00AE               	movwf	?___lldiv+2
  3979     0F19  0836               	movf	___lldiv@quotient+1,w
  3980     0F1A  00AD               	movwf	?___lldiv+1
  3981     0F1B  0835               	movf	___lldiv@quotient,w
  3982     0F1C  00AC               	movwf	?___lldiv
  3983     0F1D                     l373:
  3984     0F1D  0008               	return
  3985     0F1E                     __end_of___lldiv:
  3986                           
  3987                           	psect	text13
  3988     0D8C                     __ptext13:	
  3989 ;; *************** function _d2b *****************
  3990 ;; Defined at:
  3991 ;;		line 379 in file "main.c"
  3992 ;; Parameters:    Size  Location     Type
  3993 ;;  to_convert      2   21[BANK0 ] int 
  3994 ;; Auto vars:     Size  Location     Type
  3995 ;;  digit           2   23[BANK0 ] unsigned int 
  3996 ;;  multiplier      2   27[BANK0 ] unsigned int 
  3997 ;;  bcd             2   25[BANK0 ] unsigned int 
  3998 ;; Return value:  Size  Location     Type
  3999 ;;                  2   21[BANK0 ] int 
  4000 ;; Registers used:
  4001 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4002 ;; Tracked objects:
  4003 ;;		On entry : 0/0
  4004 ;;		On exit  : 0/0
  4005 ;;		Unchanged: 0/0
  4006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4007 ;;      Params:         0       2       0       0       0
  4008 ;;      Locals:         0       6       0       0       0
  4009 ;;      Temps:          0       0       0       0       0
  4010 ;;      Totals:         0       8       0       0       0
  4011 ;;Total ram usage:        8 bytes
  4012 ;; Hardware stack levels used: 1
  4013 ;; Hardware stack levels required when called: 4
  4014 ;; This function calls:
  4015 ;;		___awdiv
  4016 ;;		___awmod
  4017 ;;		___wmul
  4018 ;; This function is called by:
  4019 ;;		_main
  4020 ;; This function uses a non-reentrant model
  4021 ;;
  4022                           
  4023     0D8C                     _d2b:	
  4024                           ;psect for function _d2b
  4025                           
  4026     0D8C                     l2823:	
  4027                           ;incstack = 0
  4028                           ; Regs used in _d2b: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4029                           
  4030                           
  4031                           ;main.c: 380:     unsigned int bcd=0;
  4032     0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  4033     0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  4034     0D8E  01B9               	clrf	d2b@bcd
  4035     0D8F  01BA               	clrf	d2b@bcd+1
  4036     0D90                     l2825:
  4037                           
  4038                           ;main.c: 381:     unsigned int multiplier = 1;
  4039     0D90  3001               	movlw	1
  4040     0D91  00BB               	movwf	d2b@multiplier
  4041     0D92  3000               	movlw	0
  4042     0D93  00BC               	movwf	d2b@multiplier+1
  4043                           
  4044                           ;main.c: 383:     while (to_convert >0){
  4045     0D94  2DD9               	goto	l2833
  4046     0D95                     l2827:
  4047                           
  4048                           ;main.c: 384:         unsigned int digit = to_convert % 10;
  4049     0D95  300A               	movlw	10
  4050     0D96  1283               	bcf	3,5	;RP0=0, select bank0
  4051     0D97  1303               	bcf	3,6	;RP1=0, select bank0
  4052     0D98  00AC               	movwf	___awmod@divisor
  4053     0D99  3000               	movlw	0
  4054     0D9A  00AD               	movwf	___awmod@divisor+1
  4055     0D9B  0836               	movf	d2b@to_convert+1,w
  4056     0D9C  00AF               	movwf	___awmod@dividend+1
  4057     0D9D  0835               	movf	d2b@to_convert,w
  4058     0D9E  00AE               	movwf	___awmod@dividend
  4059     0D9F  120A  158A  2531  120A  158A  	fcall	___awmod
  4060     0DA4  1283               	bcf	3,5	;RP0=0, select bank0
  4061     0DA5  1303               	bcf	3,6	;RP1=0, select bank0
  4062     0DA6  082D               	movf	?___awmod+1,w
  4063     0DA7  00B8               	movwf	d2b@digit+1
  4064     0DA8  082C               	movf	?___awmod,w
  4065     0DA9  00B7               	movwf	d2b@digit
  4066                           
  4067                           ;main.c: 385:         bcd += digit * multiplier;
  4068     0DAA  0838               	movf	d2b@digit+1,w
  4069     0DAB  00AD               	movwf	___wmul@multiplier+1
  4070     0DAC  0837               	movf	d2b@digit,w
  4071     0DAD  00AC               	movwf	___wmul@multiplier
  4072     0DAE  083C               	movf	d2b@multiplier+1,w
  4073     0DAF  00AF               	movwf	___wmul@multiplicand+1
  4074     0DB0  083B               	movf	d2b@multiplier,w
  4075     0DB1  00AE               	movwf	___wmul@multiplicand
  4076     0DB2  120A  158A  2351  120A  158A  	fcall	___wmul
  4077     0DB7  1283               	bcf	3,5	;RP0=0, select bank0
  4078     0DB8  1303               	bcf	3,6	;RP1=0, select bank0
  4079     0DB9  082C               	movf	?___wmul,w
  4080     0DBA  07B9               	addwf	d2b@bcd,f
  4081     0DBB  1803               	skipnc
  4082     0DBC  0ABA               	incf	d2b@bcd+1,f
  4083     0DBD  082D               	movf	?___wmul+1,w
  4084     0DBE  07BA               	addwf	d2b@bcd+1,f
  4085     0DBF                     l2829:
  4086                           
  4087                           ;main.c: 386:         multiplier *= 16;
  4088     0DBF  3004               	movlw	4
  4089     0DC0                     u2295:
  4090     0DC0  1003               	clrc
  4091     0DC1  0DBB               	rlf	d2b@multiplier,f
  4092     0DC2  0DBC               	rlf	d2b@multiplier+1,f
  4093     0DC3  3EFF               	addlw	-1
  4094     0DC4  1D03               	skipz
  4095     0DC5  2DC0               	goto	u2295
  4096     0DC6                     l2831:
  4097                           
  4098                           ;main.c: 387:         to_convert /= 10;
  4099     0DC6  300A               	movlw	10
  4100     0DC7  00AC               	movwf	___awdiv@divisor
  4101     0DC8  3000               	movlw	0
  4102     0DC9  00AD               	movwf	___awdiv@divisor+1
  4103     0DCA  0836               	movf	d2b@to_convert+1,w
  4104     0DCB  00AF               	movwf	___awdiv@dividend+1
  4105     0DCC  0835               	movf	d2b@to_convert,w
  4106     0DCD  00AE               	movwf	___awdiv@dividend
  4107     0DCE  120A  158A  271E  120A  158A  	fcall	___awdiv
  4108     0DD3  1283               	bcf	3,5	;RP0=0, select bank0
  4109     0DD4  1303               	bcf	3,6	;RP1=0, select bank0
  4110     0DD5  082D               	movf	?___awdiv+1,w
  4111     0DD6  00B6               	movwf	d2b@to_convert+1
  4112     0DD7  082C               	movf	?___awdiv,w
  4113     0DD8  00B5               	movwf	d2b@to_convert
  4114     0DD9                     l2833:
  4115                           
  4116                           ;main.c: 383:     while (to_convert >0){
  4117     0DD9  0836               	movf	d2b@to_convert+1,w
  4118     0DDA  3A80               	xorlw	128
  4119     0DDB  00FF               	movwf	btemp+1
  4120     0DDC  3080               	movlw	128
  4121     0DDD  027F               	subwf	btemp+1,w
  4122     0DDE  1D03               	skipz
  4123     0DDF  2DE2               	goto	u2305
  4124     0DE0  3001               	movlw	1
  4125     0DE1  0235               	subwf	d2b@to_convert,w
  4126     0DE2                     u2305:
  4127     0DE2  1803               	skipnc
  4128     0DE3  2DE5               	goto	u2301
  4129     0DE4  2DE6               	goto	u2300
  4130     0DE5                     u2301:
  4131     0DE5  2D95               	goto	l2827
  4132     0DE6                     u2300:
  4133     0DE6                     l2835:
  4134                           
  4135                           ;main.c: 389:    return bcd;
  4136     0DE6  1283               	bcf	3,5	;RP0=0, select bank0
  4137     0DE7  1303               	bcf	3,6	;RP1=0, select bank0
  4138     0DE8  083A               	movf	d2b@bcd+1,w
  4139     0DE9  00B6               	movwf	?_d2b+1
  4140     0DEA  0839               	movf	d2b@bcd,w
  4141     0DEB  00B5               	movwf	?_d2b
  4142     0DEC                     l171:
  4143     0DEC  0008               	return
  4144     0DED                     __end_of_d2b:
  4145                           
  4146                           	psect	text14
  4147     0D31                     __ptext14:	
  4148 ;; *************** function ___awmod *****************
  4149 ;; Defined at:
  4150 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  4151 ;; Parameters:    Size  Location     Type
  4152 ;;  divisor         2   12[BANK0 ] int 
  4153 ;;  dividend        2   14[BANK0 ] int 
  4154 ;; Auto vars:     Size  Location     Type
  4155 ;;  sign            1   18[BANK0 ] unsigned char 
  4156 ;;  counter         1   17[BANK0 ] unsigned char 
  4157 ;; Return value:  Size  Location     Type
  4158 ;;                  2   12[BANK0 ] int 
  4159 ;; Registers used:
  4160 ;;		wreg, status,2, status,0
  4161 ;; Tracked objects:
  4162 ;;		On entry : 0/0
  4163 ;;		On exit  : 0/0
  4164 ;;		Unchanged: 0/0
  4165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4166 ;;      Params:         0       4       0       0       0
  4167 ;;      Locals:         0       2       0       0       0
  4168 ;;      Temps:          0       1       0       0       0
  4169 ;;      Totals:         0       7       0       0       0
  4170 ;;Total ram usage:        7 bytes
  4171 ;; Hardware stack levels used: 1
  4172 ;; Hardware stack levels required when called: 3
  4173 ;; This function calls:
  4174 ;;		Nothing
  4175 ;; This function is called by:
  4176 ;;		_main
  4177 ;;		_d2b
  4178 ;;		_uint8ToString
  4179 ;; This function uses a non-reentrant model
  4180 ;;
  4181                           
  4182     0D31                     ___awmod:	
  4183                           ;psect for function ___awmod
  4184                           
  4185     0D31                     l2753:	
  4186                           ;incstack = 0
  4187                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4188                           
  4189     0D31  1283               	bcf	3,5	;RP0=0, select bank0
  4190     0D32  1303               	bcf	3,6	;RP1=0, select bank0
  4191     0D33  01B2               	clrf	___awmod@sign
  4192     0D34                     l2755:
  4193     0D34  1FAF               	btfss	___awmod@dividend+1,7
  4194     0D35  2D37               	goto	u2191
  4195     0D36  2D38               	goto	u2190
  4196     0D37                     u2191:
  4197     0D37  2D3F               	goto	l2761
  4198     0D38                     u2190:
  4199     0D38                     l2757:
  4200     0D38  09AE               	comf	___awmod@dividend,f
  4201     0D39  09AF               	comf	___awmod@dividend+1,f
  4202     0D3A  0AAE               	incf	___awmod@dividend,f
  4203     0D3B  1903               	skipnz
  4204     0D3C  0AAF               	incf	___awmod@dividend+1,f
  4205     0D3D                     l2759:
  4206     0D3D  01B2               	clrf	___awmod@sign
  4207     0D3E  0AB2               	incf	___awmod@sign,f
  4208     0D3F                     l2761:
  4209     0D3F  1FAD               	btfss	___awmod@divisor+1,7
  4210     0D40  2D42               	goto	u2201
  4211     0D41  2D43               	goto	u2200
  4212     0D42                     u2201:
  4213     0D42  2D48               	goto	l2765
  4214     0D43                     u2200:
  4215     0D43                     l2763:
  4216     0D43  09AC               	comf	___awmod@divisor,f
  4217     0D44  09AD               	comf	___awmod@divisor+1,f
  4218     0D45  0AAC               	incf	___awmod@divisor,f
  4219     0D46  1903               	skipnz
  4220     0D47  0AAD               	incf	___awmod@divisor+1,f
  4221     0D48                     l2765:
  4222     0D48  082C               	movf	___awmod@divisor,w
  4223     0D49  042D               	iorwf	___awmod@divisor+1,w
  4224     0D4A  1903               	btfsc	3,2
  4225     0D4B  2D4D               	goto	u2211
  4226     0D4C  2D4E               	goto	u2210
  4227     0D4D                     u2211:
  4228     0D4D  2D7D               	goto	l2783
  4229     0D4E                     u2210:
  4230     0D4E                     l2767:
  4231     0D4E  01B1               	clrf	___awmod@counter
  4232     0D4F  0AB1               	incf	___awmod@counter,f
  4233     0D50  2D5C               	goto	l2773
  4234     0D51                     l2769:
  4235     0D51  3001               	movlw	1
  4236     0D52                     u2225:
  4237     0D52  1003               	clrc
  4238     0D53  0DAC               	rlf	___awmod@divisor,f
  4239     0D54  0DAD               	rlf	___awmod@divisor+1,f
  4240     0D55  3EFF               	addlw	-1
  4241     0D56  1D03               	skipz
  4242     0D57  2D52               	goto	u2225
  4243     0D58                     l2771:
  4244     0D58  3001               	movlw	1
  4245     0D59  00B0               	movwf	??___awmod
  4246     0D5A  0830               	movf	??___awmod,w
  4247     0D5B  07B1               	addwf	___awmod@counter,f
  4248     0D5C                     l2773:
  4249     0D5C  1FAD               	btfss	___awmod@divisor+1,7
  4250     0D5D  2D5F               	goto	u2231
  4251     0D5E  2D60               	goto	u2230
  4252     0D5F                     u2231:
  4253     0D5F  2D51               	goto	l2769
  4254     0D60                     u2230:
  4255     0D60                     l2775:
  4256     0D60  082D               	movf	___awmod@divisor+1,w
  4257     0D61  022F               	subwf	___awmod@dividend+1,w
  4258     0D62  1D03               	skipz
  4259     0D63  2D66               	goto	u2245
  4260     0D64  082C               	movf	___awmod@divisor,w
  4261     0D65  022E               	subwf	___awmod@dividend,w
  4262     0D66                     u2245:
  4263     0D66  1C03               	skipc
  4264     0D67  2D69               	goto	u2241
  4265     0D68  2D6A               	goto	u2240
  4266     0D69                     u2241:
  4267     0D69  2D70               	goto	l2779
  4268     0D6A                     u2240:
  4269     0D6A                     l2777:
  4270     0D6A  082C               	movf	___awmod@divisor,w
  4271     0D6B  02AE               	subwf	___awmod@dividend,f
  4272     0D6C  082D               	movf	___awmod@divisor+1,w
  4273     0D6D  1C03               	skipc
  4274     0D6E  03AF               	decf	___awmod@dividend+1,f
  4275     0D6F  02AF               	subwf	___awmod@dividend+1,f
  4276     0D70                     l2779:
  4277     0D70  3001               	movlw	1
  4278     0D71                     u2255:
  4279     0D71  1003               	clrc
  4280     0D72  0CAD               	rrf	___awmod@divisor+1,f
  4281     0D73  0CAC               	rrf	___awmod@divisor,f
  4282     0D74  3EFF               	addlw	-1
  4283     0D75  1D03               	skipz
  4284     0D76  2D71               	goto	u2255
  4285     0D77                     l2781:
  4286     0D77  3001               	movlw	1
  4287     0D78  02B1               	subwf	___awmod@counter,f
  4288     0D79  1D03               	btfss	3,2
  4289     0D7A  2D7C               	goto	u2261
  4290     0D7B  2D7D               	goto	u2260
  4291     0D7C                     u2261:
  4292     0D7C  2D60               	goto	l2775
  4293     0D7D                     u2260:
  4294     0D7D                     l2783:
  4295     0D7D  0832               	movf	___awmod@sign,w
  4296     0D7E  1903               	btfsc	3,2
  4297     0D7F  2D81               	goto	u2271
  4298     0D80  2D82               	goto	u2270
  4299     0D81                     u2271:
  4300     0D81  2D87               	goto	l2787
  4301     0D82                     u2270:
  4302     0D82                     l2785:
  4303     0D82  09AE               	comf	___awmod@dividend,f
  4304     0D83  09AF               	comf	___awmod@dividend+1,f
  4305     0D84  0AAE               	incf	___awmod@dividend,f
  4306     0D85  1903               	skipnz
  4307     0D86  0AAF               	incf	___awmod@dividend+1,f
  4308     0D87                     l2787:
  4309     0D87  082F               	movf	___awmod@dividend+1,w
  4310     0D88  00AD               	movwf	?___awmod+1
  4311     0D89  082E               	movf	___awmod@dividend,w
  4312     0D8A  00AC               	movwf	?___awmod
  4313     0D8B                     l503:
  4314     0D8B  0008               	return
  4315     0D8C                     __end_of___awmod:
  4316                           
  4317                           	psect	text15
  4318     0F1E                     __ptext15:	
  4319 ;; *************** function ___awdiv *****************
  4320 ;; Defined at:
  4321 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  4322 ;; Parameters:    Size  Location     Type
  4323 ;;  divisor         2   12[BANK0 ] int 
  4324 ;;  dividend        2   14[BANK0 ] int 
  4325 ;; Auto vars:     Size  Location     Type
  4326 ;;  quotient        2   19[BANK0 ] int 
  4327 ;;  sign            1   18[BANK0 ] unsigned char 
  4328 ;;  counter         1   17[BANK0 ] unsigned char 
  4329 ;; Return value:  Size  Location     Type
  4330 ;;                  2   12[BANK0 ] int 
  4331 ;; Registers used:
  4332 ;;		wreg, status,2, status,0
  4333 ;; Tracked objects:
  4334 ;;		On entry : 0/0
  4335 ;;		On exit  : 0/0
  4336 ;;		Unchanged: 0/0
  4337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4338 ;;      Params:         0       4       0       0       0
  4339 ;;      Locals:         0       4       0       0       0
  4340 ;;      Temps:          0       1       0       0       0
  4341 ;;      Totals:         0       9       0       0       0
  4342 ;;Total ram usage:        9 bytes
  4343 ;; Hardware stack levels used: 1
  4344 ;; Hardware stack levels required when called: 3
  4345 ;; This function calls:
  4346 ;;		Nothing
  4347 ;; This function is called by:
  4348 ;;		_main
  4349 ;;		_d2b
  4350 ;;		_uint8ToString
  4351 ;; This function uses a non-reentrant model
  4352 ;;
  4353                           
  4354     0F1E                     ___awdiv:	
  4355                           ;psect for function ___awdiv
  4356                           
  4357     0F1E                     l2709:	
  4358                           ;incstack = 0
  4359                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4360                           
  4361     0F1E  1283               	bcf	3,5	;RP0=0, select bank0
  4362     0F1F  1303               	bcf	3,6	;RP1=0, select bank0
  4363     0F20  01B2               	clrf	___awdiv@sign
  4364     0F21                     l2711:
  4365     0F21  1FAD               	btfss	___awdiv@divisor+1,7
  4366     0F22  2F24               	goto	u2091
  4367     0F23  2F25               	goto	u2090
  4368     0F24                     u2091:
  4369     0F24  2F2C               	goto	l2717
  4370     0F25                     u2090:
  4371     0F25                     l2713:
  4372     0F25  09AC               	comf	___awdiv@divisor,f
  4373     0F26  09AD               	comf	___awdiv@divisor+1,f
  4374     0F27  0AAC               	incf	___awdiv@divisor,f
  4375     0F28  1903               	skipnz
  4376     0F29  0AAD               	incf	___awdiv@divisor+1,f
  4377     0F2A                     l2715:
  4378     0F2A  01B2               	clrf	___awdiv@sign
  4379     0F2B  0AB2               	incf	___awdiv@sign,f
  4380     0F2C                     l2717:
  4381     0F2C  1FAF               	btfss	___awdiv@dividend+1,7
  4382     0F2D  2F2F               	goto	u2101
  4383     0F2E  2F30               	goto	u2100
  4384     0F2F                     u2101:
  4385     0F2F  2F39               	goto	l2723
  4386     0F30                     u2100:
  4387     0F30                     l2719:
  4388     0F30  09AE               	comf	___awdiv@dividend,f
  4389     0F31  09AF               	comf	___awdiv@dividend+1,f
  4390     0F32  0AAE               	incf	___awdiv@dividend,f
  4391     0F33  1903               	skipnz
  4392     0F34  0AAF               	incf	___awdiv@dividend+1,f
  4393     0F35                     l2721:
  4394     0F35  3001               	movlw	1
  4395     0F36  00B0               	movwf	??___awdiv
  4396     0F37  0830               	movf	??___awdiv,w
  4397     0F38  06B2               	xorwf	___awdiv@sign,f
  4398     0F39                     l2723:
  4399     0F39  01B3               	clrf	___awdiv@quotient
  4400     0F3A  01B4               	clrf	___awdiv@quotient+1
  4401     0F3B                     l2725:
  4402     0F3B  082C               	movf	___awdiv@divisor,w
  4403     0F3C  042D               	iorwf	___awdiv@divisor+1,w
  4404     0F3D  1903               	btfsc	3,2
  4405     0F3E  2F40               	goto	u2111
  4406     0F3F  2F41               	goto	u2110
  4407     0F40                     u2111:
  4408     0F40  2F78               	goto	l2745
  4409     0F41                     u2110:
  4410     0F41                     l2727:
  4411     0F41  01B1               	clrf	___awdiv@counter
  4412     0F42  0AB1               	incf	___awdiv@counter,f
  4413     0F43  2F4F               	goto	l2733
  4414     0F44                     l2729:
  4415     0F44  3001               	movlw	1
  4416     0F45                     u2125:
  4417     0F45  1003               	clrc
  4418     0F46  0DAC               	rlf	___awdiv@divisor,f
  4419     0F47  0DAD               	rlf	___awdiv@divisor+1,f
  4420     0F48  3EFF               	addlw	-1
  4421     0F49  1D03               	skipz
  4422     0F4A  2F45               	goto	u2125
  4423     0F4B                     l2731:
  4424     0F4B  3001               	movlw	1
  4425     0F4C  00B0               	movwf	??___awdiv
  4426     0F4D  0830               	movf	??___awdiv,w
  4427     0F4E  07B1               	addwf	___awdiv@counter,f
  4428     0F4F                     l2733:
  4429     0F4F  1FAD               	btfss	___awdiv@divisor+1,7
  4430     0F50  2F52               	goto	u2131
  4431     0F51  2F53               	goto	u2130
  4432     0F52                     u2131:
  4433     0F52  2F44               	goto	l2729
  4434     0F53                     u2130:
  4435     0F53                     l2735:
  4436     0F53  3001               	movlw	1
  4437     0F54                     u2145:
  4438     0F54  1003               	clrc
  4439     0F55  0DB3               	rlf	___awdiv@quotient,f
  4440     0F56  0DB4               	rlf	___awdiv@quotient+1,f
  4441     0F57  3EFF               	addlw	-1
  4442     0F58  1D03               	skipz
  4443     0F59  2F54               	goto	u2145
  4444     0F5A  082D               	movf	___awdiv@divisor+1,w
  4445     0F5B  022F               	subwf	___awdiv@dividend+1,w
  4446     0F5C  1D03               	skipz
  4447     0F5D  2F60               	goto	u2155
  4448     0F5E  082C               	movf	___awdiv@divisor,w
  4449     0F5F  022E               	subwf	___awdiv@dividend,w
  4450     0F60                     u2155:
  4451     0F60  1C03               	skipc
  4452     0F61  2F63               	goto	u2151
  4453     0F62  2F64               	goto	u2150
  4454     0F63                     u2151:
  4455     0F63  2F6B               	goto	l2741
  4456     0F64                     u2150:
  4457     0F64                     l2737:
  4458     0F64  082C               	movf	___awdiv@divisor,w
  4459     0F65  02AE               	subwf	___awdiv@dividend,f
  4460     0F66  082D               	movf	___awdiv@divisor+1,w
  4461     0F67  1C03               	skipc
  4462     0F68  03AF               	decf	___awdiv@dividend+1,f
  4463     0F69  02AF               	subwf	___awdiv@dividend+1,f
  4464     0F6A                     l2739:
  4465     0F6A  1433               	bsf	___awdiv@quotient,0
  4466     0F6B                     l2741:
  4467     0F6B  3001               	movlw	1
  4468     0F6C                     u2165:
  4469     0F6C  1003               	clrc
  4470     0F6D  0CAD               	rrf	___awdiv@divisor+1,f
  4471     0F6E  0CAC               	rrf	___awdiv@divisor,f
  4472     0F6F  3EFF               	addlw	-1
  4473     0F70  1D03               	skipz
  4474     0F71  2F6C               	goto	u2165
  4475     0F72                     l2743:
  4476     0F72  3001               	movlw	1
  4477     0F73  02B1               	subwf	___awdiv@counter,f
  4478     0F74  1D03               	btfss	3,2
  4479     0F75  2F77               	goto	u2171
  4480     0F76  2F78               	goto	u2170
  4481     0F77                     u2171:
  4482     0F77  2F53               	goto	l2735
  4483     0F78                     u2170:
  4484     0F78                     l2745:
  4485     0F78  0832               	movf	___awdiv@sign,w
  4486     0F79  1903               	btfsc	3,2
  4487     0F7A  2F7C               	goto	u2181
  4488     0F7B  2F7D               	goto	u2180
  4489     0F7C                     u2181:
  4490     0F7C  2F82               	goto	l2749
  4491     0F7D                     u2180:
  4492     0F7D                     l2747:
  4493     0F7D  09B3               	comf	___awdiv@quotient,f
  4494     0F7E  09B4               	comf	___awdiv@quotient+1,f
  4495     0F7F  0AB3               	incf	___awdiv@quotient,f
  4496     0F80  1903               	skipnz
  4497     0F81  0AB4               	incf	___awdiv@quotient+1,f
  4498     0F82                     l2749:
  4499     0F82  0834               	movf	___awdiv@quotient+1,w
  4500     0F83  00AD               	movwf	?___awdiv+1
  4501     0F84  0833               	movf	___awdiv@quotient,w
  4502     0F85  00AC               	movwf	?___awdiv
  4503     0F86                     l490:
  4504     0F86  0008               	return
  4505     0F87                     __end_of___awdiv:
  4506                           
  4507                           	psect	text16
  4508     0B78                     __ptext16:	
  4509 ;; *************** function _b2d *****************
  4510 ;; Defined at:
  4511 ;;		line 375 in file "main.c"
  4512 ;; Parameters:    Size  Location     Type
  4513 ;;  to_convert      2   18[BANK0 ] int 
  4514 ;; Auto vars:     Size  Location     Type
  4515 ;;		None
  4516 ;; Return value:  Size  Location     Type
  4517 ;;                  2   18[BANK0 ] int 
  4518 ;; Registers used:
  4519 ;;		wreg, status,2, status,0, pclath, cstack
  4520 ;; Tracked objects:
  4521 ;;		On entry : 0/0
  4522 ;;		On exit  : 0/0
  4523 ;;		Unchanged: 0/0
  4524 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4525 ;;      Params:         0       2       0       0       0
  4526 ;;      Locals:         0       0       0       0       0
  4527 ;;      Temps:          0       2       0       0       0
  4528 ;;      Totals:         0       4       0       0       0
  4529 ;;Total ram usage:        4 bytes
  4530 ;; Hardware stack levels used: 1
  4531 ;; Hardware stack levels required when called: 4
  4532 ;; This function calls:
  4533 ;;		___wmul
  4534 ;; This function is called by:
  4535 ;;		_main
  4536 ;; This function uses a non-reentrant model
  4537 ;;
  4538                           
  4539     0B78                     _b2d:	
  4540                           ;psect for function _b2d
  4541                           
  4542     0B78                     l2867:	
  4543                           ;incstack = 0
  4544                           ; Regs used in _b2d: [wreg+status,2+status,0+pclath+cstack]
  4545                           
  4546                           
  4547                           ;main.c: 376:    return (to_convert >> 4) * 10 + (to_convert & 0x0F);
  4548     0B78  300F               	movlw	15
  4549     0B79  1283               	bcf	3,5	;RP0=0, select bank0
  4550     0B7A  1303               	bcf	3,6	;RP1=0, select bank0
  4551     0B7B  0532               	andwf	b2d@to_convert,w
  4552     0B7C  00B4               	movwf	??_b2d
  4553     0B7D  3000               	movlw	0
  4554     0B7E  0533               	andwf	b2d@to_convert+1,w
  4555     0B7F  00B5               	movwf	??_b2d+1
  4556     0B80  0E32               	swapf	b2d@to_convert,w
  4557     0B81  390F               	andlw	15
  4558     0B82  00AC               	movwf	___wmul@multiplier
  4559     0B83  0E33               	swapf	b2d@to_convert+1,w
  4560     0B84  39F0               	andlw	240
  4561     0B85  04AC               	iorwf	___wmul@multiplier,f
  4562     0B86  0E33               	swapf	b2d@to_convert+1,w
  4563     0B87  390F               	andlw	15
  4564     0B88  00AD               	movwf	___wmul@multiplier+1
  4565     0B89  30F0               	movlw	240
  4566     0B8A  1DAD               	btfss	___wmul@multiplier+1,3
  4567     0B8B  3000               	movlw	0
  4568     0B8C  04AD               	iorwf	___wmul@multiplier+1,f
  4569     0B8D  300A               	movlw	10
  4570     0B8E  00AE               	movwf	___wmul@multiplicand
  4571     0B8F  3000               	movlw	0
  4572     0B90  00AF               	movwf	___wmul@multiplicand+1
  4573     0B91  120A  158A  2351  120A  158A  	fcall	___wmul
  4574     0B96  1283               	bcf	3,5	;RP0=0, select bank0
  4575     0B97  1303               	bcf	3,6	;RP1=0, select bank0
  4576     0B98  0834               	movf	??_b2d,w
  4577     0B99  072C               	addwf	?___wmul,w
  4578     0B9A  00B2               	movwf	?_b2d
  4579     0B9B  0835               	movf	??_b2d+1,w
  4580     0B9C  1803               	skipnc
  4581     0B9D  0A35               	incf	??_b2d+1,w
  4582     0B9E  072D               	addwf	?___wmul+1,w
  4583     0B9F  00B3               	movwf	?_b2d+1
  4584     0BA0                     l165:
  4585     0BA0  0008               	return
  4586     0BA1                     __end_of_b2d:
  4587                           
  4588                           	psect	text17
  4589     0B51                     __ptext17:	
  4590 ;; *************** function ___wmul *****************
  4591 ;; Defined at:
  4592 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  4593 ;; Parameters:    Size  Location     Type
  4594 ;;  multiplier      2   12[BANK0 ] unsigned int 
  4595 ;;  multiplicand    2   14[BANK0 ] unsigned int 
  4596 ;; Auto vars:     Size  Location     Type
  4597 ;;  product         2   16[BANK0 ] unsigned int 
  4598 ;; Return value:  Size  Location     Type
  4599 ;;                  2   12[BANK0 ] unsigned int 
  4600 ;; Registers used:
  4601 ;;		wreg, status,2, status,0
  4602 ;; Tracked objects:
  4603 ;;		On entry : 0/0
  4604 ;;		On exit  : 0/0
  4605 ;;		Unchanged: 0/0
  4606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4607 ;;      Params:         0       4       0       0       0
  4608 ;;      Locals:         0       2       0       0       0
  4609 ;;      Temps:          0       0       0       0       0
  4610 ;;      Totals:         0       6       0       0       0
  4611 ;;Total ram usage:        6 bytes
  4612 ;; Hardware stack levels used: 1
  4613 ;; Hardware stack levels required when called: 3
  4614 ;; This function calls:
  4615 ;;		Nothing
  4616 ;; This function is called by:
  4617 ;;		_b2d
  4618 ;;		_d2b
  4619 ;; This function uses a non-reentrant model
  4620 ;;
  4621                           
  4622     0B51                     ___wmul:	
  4623                           ;psect for function ___wmul
  4624                           
  4625     0B51                     l2695:	
  4626                           ;incstack = 0
  4627                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  4628                           
  4629     0B51  1283               	bcf	3,5	;RP0=0, select bank0
  4630     0B52  1303               	bcf	3,6	;RP1=0, select bank0
  4631     0B53  01B0               	clrf	___wmul@product
  4632     0B54  01B1               	clrf	___wmul@product+1
  4633     0B55                     l2697:
  4634     0B55  1C2C               	btfss	___wmul@multiplier,0
  4635     0B56  2B58               	goto	u2051
  4636     0B57  2B59               	goto	u2050
  4637     0B58                     u2051:
  4638     0B58  2B5F               	goto	l337
  4639     0B59                     u2050:
  4640     0B59                     l2699:
  4641     0B59  082E               	movf	___wmul@multiplicand,w
  4642     0B5A  07B0               	addwf	___wmul@product,f
  4643     0B5B  1803               	skipnc
  4644     0B5C  0AB1               	incf	___wmul@product+1,f
  4645     0B5D  082F               	movf	___wmul@multiplicand+1,w
  4646     0B5E  07B1               	addwf	___wmul@product+1,f
  4647     0B5F                     l337:
  4648     0B5F  3001               	movlw	1
  4649     0B60                     u2065:
  4650     0B60  1003               	clrc
  4651     0B61  0DAE               	rlf	___wmul@multiplicand,f
  4652     0B62  0DAF               	rlf	___wmul@multiplicand+1,f
  4653     0B63  3EFF               	addlw	-1
  4654     0B64  1D03               	skipz
  4655     0B65  2B60               	goto	u2065
  4656     0B66                     l2701:
  4657     0B66  3001               	movlw	1
  4658     0B67                     u2075:
  4659     0B67  1003               	clrc
  4660     0B68  0CAD               	rrf	___wmul@multiplier+1,f
  4661     0B69  0CAC               	rrf	___wmul@multiplier,f
  4662     0B6A  3EFF               	addlw	-1
  4663     0B6B  1D03               	skipz
  4664     0B6C  2B67               	goto	u2075
  4665     0B6D                     l2703:
  4666     0B6D  082C               	movf	___wmul@multiplier,w
  4667     0B6E  042D               	iorwf	___wmul@multiplier+1,w
  4668     0B6F  1D03               	btfss	3,2
  4669     0B70  2B72               	goto	u2081
  4670     0B71  2B73               	goto	u2080
  4671     0B72                     u2081:
  4672     0B72  2B55               	goto	l2697
  4673     0B73                     u2080:
  4674     0B73                     l2705:
  4675     0B73  0831               	movf	___wmul@product+1,w
  4676     0B74  00AD               	movwf	?___wmul+1
  4677     0B75  0830               	movf	___wmul@product,w
  4678     0B76  00AC               	movwf	?___wmul
  4679     0B77                     l339:
  4680     0B77  0008               	return
  4681     0B78                     __end_of___wmul:
  4682                           
  4683                           	psect	text18
  4684     0A84                     __ptext18:	
  4685 ;; *************** function _I2C_Master_Write *****************
  4686 ;; Defined at:
  4687 ;;		line 65 in file "I2C.c"
  4688 ;; Parameters:    Size  Location     Type
  4689 ;;  d               2   29[BANK0 ] unsigned int 
  4690 ;; Auto vars:     Size  Location     Type
  4691 ;;		None
  4692 ;; Return value:  Size  Location     Type
  4693 ;;                  1    wreg      void 
  4694 ;; Registers used:
  4695 ;;		wreg, status,2, status,0, pclath, cstack
  4696 ;; Tracked objects:
  4697 ;;		On entry : 0/0
  4698 ;;		On exit  : 0/0
  4699 ;;		Unchanged: 0/0
  4700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4701 ;;      Params:         0       2       0       0       0
  4702 ;;      Locals:         0       0       0       0       0
  4703 ;;      Temps:          0       0       0       0       0
  4704 ;;      Totals:         0       2       0       0       0
  4705 ;;Total ram usage:        2 bytes
  4706 ;; Hardware stack levels used: 1
  4707 ;; Hardware stack levels required when called: 4
  4708 ;; This function calls:
  4709 ;;		_I2C_Master_Wait
  4710 ;; This function is called by:
  4711 ;;		_main
  4712 ;; This function uses a non-reentrant model
  4713 ;;
  4714                           
  4715     0A84                     _I2C_Master_Write:	
  4716                           ;psect for function _I2C_Master_Write
  4717                           
  4718     0A84                     l2803:	
  4719                           ;incstack = 0
  4720                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  4721                           
  4722                           
  4723                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  4724     0A84  120A  158A  22A7  120A  158A  	fcall	_I2C_Master_Wait
  4725     0A89                     l2805:
  4726                           
  4727                           ;I2C.c: 68:     SSPBUF = d;
  4728     0A89  1283               	bcf	3,5	;RP0=0, select bank0
  4729     0A8A  1303               	bcf	3,6	;RP1=0, select bank0
  4730     0A8B  083D               	movf	I2C_Master_Write@d,w
  4731     0A8C  0093               	movwf	19	;volatile
  4732     0A8D                     l47:
  4733     0A8D  0008               	return
  4734     0A8E                     __end_of_I2C_Master_Write:
  4735                           
  4736                           	psect	text19
  4737     0A71                     __ptext19:	
  4738 ;; *************** function _I2C_Master_Stop *****************
  4739 ;; Defined at:
  4740 ;;		line 55 in file "I2C.c"
  4741 ;; Parameters:    Size  Location     Type
  4742 ;;		None
  4743 ;; Auto vars:     Size  Location     Type
  4744 ;;		None
  4745 ;; Return value:  Size  Location     Type
  4746 ;;                  1    wreg      void 
  4747 ;; Registers used:
  4748 ;;		wreg, status,2, status,0, pclath, cstack
  4749 ;; Tracked objects:
  4750 ;;		On entry : 0/0
  4751 ;;		On exit  : 0/0
  4752 ;;		Unchanged: 0/0
  4753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4754 ;;      Params:         0       0       0       0       0
  4755 ;;      Locals:         0       0       0       0       0
  4756 ;;      Temps:          0       0       0       0       0
  4757 ;;      Totals:         0       0       0       0       0
  4758 ;;Total ram usage:        0 bytes
  4759 ;; Hardware stack levels used: 1
  4760 ;; Hardware stack levels required when called: 4
  4761 ;; This function calls:
  4762 ;;		_I2C_Master_Wait
  4763 ;; This function is called by:
  4764 ;;		_main
  4765 ;; This function uses a non-reentrant model
  4766 ;;
  4767                           
  4768     0A71                     _I2C_Master_Stop:	
  4769                           ;psect for function _I2C_Master_Stop
  4770                           
  4771     0A71                     l2799:	
  4772                           ;incstack = 0
  4773                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  4774                           
  4775                           
  4776                           ;I2C.c: 57:     I2C_Master_Wait();
  4777     0A71  120A  158A  22A7  120A  158A  	fcall	_I2C_Master_Wait
  4778     0A76                     l2801:
  4779                           
  4780                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  4781     0A76  1683               	bsf	3,5	;RP0=1, select bank1
  4782     0A77  1303               	bcf	3,6	;RP1=0, select bank1
  4783     0A78  1511               	bsf	17,2	;volatile
  4784     0A79                     l44:
  4785     0A79  0008               	return
  4786     0A7A                     __end_of_I2C_Master_Stop:
  4787                           
  4788                           	psect	text20
  4789     0A68                     __ptext20:	
  4790 ;; *************** function _I2C_Master_Start *****************
  4791 ;; Defined at:
  4792 ;;		line 39 in file "I2C.c"
  4793 ;; Parameters:    Size  Location     Type
  4794 ;;		None
  4795 ;; Auto vars:     Size  Location     Type
  4796 ;;		None
  4797 ;; Return value:  Size  Location     Type
  4798 ;;                  1    wreg      void 
  4799 ;; Registers used:
  4800 ;;		wreg, status,2, status,0, pclath, cstack
  4801 ;; Tracked objects:
  4802 ;;		On entry : 0/0
  4803 ;;		On exit  : 0/0
  4804 ;;		Unchanged: 0/0
  4805 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4806 ;;      Params:         0       0       0       0       0
  4807 ;;      Locals:         0       0       0       0       0
  4808 ;;      Temps:          0       0       0       0       0
  4809 ;;      Totals:         0       0       0       0       0
  4810 ;;Total ram usage:        0 bytes
  4811 ;; Hardware stack levels used: 1
  4812 ;; Hardware stack levels required when called: 4
  4813 ;; This function calls:
  4814 ;;		_I2C_Master_Wait
  4815 ;; This function is called by:
  4816 ;;		_main
  4817 ;; This function uses a non-reentrant model
  4818 ;;
  4819                           
  4820     0A68                     _I2C_Master_Start:	
  4821                           ;psect for function _I2C_Master_Start
  4822                           
  4823     0A68                     l2791:	
  4824                           ;incstack = 0
  4825                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  4826                           
  4827                           
  4828                           ;I2C.c: 41:     I2C_Master_Wait();
  4829     0A68  120A  158A  22A7  120A  158A  	fcall	_I2C_Master_Wait
  4830     0A6D                     l2793:
  4831                           
  4832                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  4833     0A6D  1683               	bsf	3,5	;RP0=1, select bank1
  4834     0A6E  1303               	bcf	3,6	;RP1=0, select bank1
  4835     0A6F  1411               	bsf	17,0	;volatile
  4836     0A70                     l38:
  4837     0A70  0008               	return
  4838     0A71                     __end_of_I2C_Master_Start:
  4839                           
  4840                           	psect	text21
  4841     0A5F                     __ptext21:	
  4842 ;; *************** function _I2C_Master_RepeatedStart *****************
  4843 ;; Defined at:
  4844 ;;		line 47 in file "I2C.c"
  4845 ;; Parameters:    Size  Location     Type
  4846 ;;		None
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;		None
  4849 ;; Return value:  Size  Location     Type
  4850 ;;                  1    wreg      void 
  4851 ;; Registers used:
  4852 ;;		wreg, status,2, status,0, pclath, cstack
  4853 ;; Tracked objects:
  4854 ;;		On entry : 0/0
  4855 ;;		On exit  : 0/0
  4856 ;;		Unchanged: 0/0
  4857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4858 ;;      Params:         0       0       0       0       0
  4859 ;;      Locals:         0       0       0       0       0
  4860 ;;      Temps:          0       0       0       0       0
  4861 ;;      Totals:         0       0       0       0       0
  4862 ;;Total ram usage:        0 bytes
  4863 ;; Hardware stack levels used: 1
  4864 ;; Hardware stack levels required when called: 4
  4865 ;; This function calls:
  4866 ;;		_I2C_Master_Wait
  4867 ;; This function is called by:
  4868 ;;		_main
  4869 ;; This function uses a non-reentrant model
  4870 ;;
  4871                           
  4872     0A5F                     _I2C_Master_RepeatedStart:	
  4873                           ;psect for function _I2C_Master_RepeatedStart
  4874                           
  4875     0A5F                     l2795:	
  4876                           ;incstack = 0
  4877                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  4878                           
  4879                           
  4880                           ;I2C.c: 49:     I2C_Master_Wait();
  4881     0A5F  120A  158A  22A7  120A  158A  	fcall	_I2C_Master_Wait
  4882     0A64                     l2797:
  4883                           
  4884                           ;I2C.c: 50:     SSPCON2bits.RSEN = 1;
  4885     0A64  1683               	bsf	3,5	;RP0=1, select bank1
  4886     0A65  1303               	bcf	3,6	;RP1=0, select bank1
  4887     0A66  1491               	bsf	17,1	;volatile
  4888     0A67                     l41:
  4889     0A67  0008               	return
  4890     0A68                     __end_of_I2C_Master_RepeatedStart:
  4891                           
  4892                           	psect	text22
  4893     0BA1                     __ptext22:	
  4894 ;; *************** function _I2C_Master_Read *****************
  4895 ;; Defined at:
  4896 ;;		line 74 in file "I2C.c"
  4897 ;; Parameters:    Size  Location     Type
  4898 ;;  a               2   12[BANK0 ] unsigned short 
  4899 ;; Auto vars:     Size  Location     Type
  4900 ;;  temp            2   16[BANK0 ] unsigned short 
  4901 ;; Return value:  Size  Location     Type
  4902 ;;                  2   12[BANK0 ] unsigned short 
  4903 ;; Registers used:
  4904 ;;		wreg, status,2, status,0, pclath, cstack
  4905 ;; Tracked objects:
  4906 ;;		On entry : 0/0
  4907 ;;		On exit  : 0/0
  4908 ;;		Unchanged: 0/0
  4909 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4910 ;;      Params:         0       2       0       0       0
  4911 ;;      Locals:         0       2       0       0       0
  4912 ;;      Temps:          0       2       0       0       0
  4913 ;;      Totals:         0       6       0       0       0
  4914 ;;Total ram usage:        6 bytes
  4915 ;; Hardware stack levels used: 1
  4916 ;; Hardware stack levels required when called: 4
  4917 ;; This function calls:
  4918 ;;		_I2C_Master_Wait
  4919 ;; This function is called by:
  4920 ;;		_main
  4921 ;; This function uses a non-reentrant model
  4922 ;;
  4923                           
  4924     0BA1                     _I2C_Master_Read:	
  4925                           ;psect for function _I2C_Master_Read
  4926                           
  4927     0BA1                     l2807:	
  4928                           ;incstack = 0
  4929                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  4930                           
  4931                           
  4932                           ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
      +                           unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  4933     0BA1  120A  158A  22A7  120A  158A  	fcall	_I2C_Master_Wait
  4934     0BA6                     l2809:
  4935                           
  4936                           ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  4937     0BA6  1683               	bsf	3,5	;RP0=1, select bank1
  4938     0BA7  1303               	bcf	3,6	;RP1=0, select bank1
  4939     0BA8  1591               	bsf	17,3	;volatile
  4940                           
  4941                           ;I2C.c: 79:     I2C_Master_Wait();
  4942     0BA9  120A  158A  22A7  120A  158A  	fcall	_I2C_Master_Wait
  4943     0BAE                     l2811:
  4944                           
  4945                           ;I2C.c: 80:     temp = SSPBUF;
  4946     0BAE  1283               	bcf	3,5	;RP0=0, select bank0
  4947     0BAF  1303               	bcf	3,6	;RP1=0, select bank0
  4948     0BB0  0813               	movf	19,w	;volatile
  4949     0BB1  00AE               	movwf	??_I2C_Master_Read
  4950     0BB2  01AF               	clrf	??_I2C_Master_Read+1
  4951     0BB3  082E               	movf	??_I2C_Master_Read,w
  4952     0BB4  00B0               	movwf	I2C_Master_Read@temp
  4953     0BB5  082F               	movf	??_I2C_Master_Read+1,w
  4954     0BB6  00B1               	movwf	I2C_Master_Read@temp+1
  4955     0BB7                     l2813:
  4956                           
  4957                           ;I2C.c: 81:     I2C_Master_Wait();
  4958     0BB7  120A  158A  22A7  120A  158A  	fcall	_I2C_Master_Wait
  4959     0BBC                     l2815:
  4960                           
  4961                           ;I2C.c: 82:     if(a == 1){
  4962     0BBC  1283               	bcf	3,5	;RP0=0, select bank0
  4963     0BBD  1303               	bcf	3,6	;RP1=0, select bank0
  4964     0BBE  032C               	decf	I2C_Master_Read@a,w
  4965     0BBF  042D               	iorwf	I2C_Master_Read@a+1,w
  4966     0BC0  1D03               	btfss	3,2
  4967     0BC1  2BC3               	goto	u2281
  4968     0BC2  2BC4               	goto	u2280
  4969     0BC3                     u2281:
  4970     0BC3  2BC8               	goto	l50
  4971     0BC4                     u2280:
  4972     0BC4                     l2817:
  4973                           
  4974                           ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  4975     0BC4  1683               	bsf	3,5	;RP0=1, select bank1
  4976     0BC5  1303               	bcf	3,6	;RP1=0, select bank1
  4977     0BC6  1291               	bcf	17,5	;volatile
  4978                           
  4979                           ;I2C.c: 84:     }else{
  4980     0BC7  2BCB               	goto	l51
  4981     0BC8                     l50:
  4982                           
  4983                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  4984     0BC8  1683               	bsf	3,5	;RP0=1, select bank1
  4985     0BC9  1303               	bcf	3,6	;RP1=0, select bank1
  4986     0BCA  1691               	bsf	17,5	;volatile
  4987     0BCB                     l51:	
  4988                           ;I2C.c: 86:     }
  4989                           
  4990                           
  4991                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  4992     0BCB  1611               	bsf	17,4	;volatile
  4993     0BCC                     l2819:
  4994                           
  4995                           ;I2C.c: 88:     return temp;
  4996     0BCC  1283               	bcf	3,5	;RP0=0, select bank0
  4997     0BCD  1303               	bcf	3,6	;RP1=0, select bank0
  4998     0BCE  0831               	movf	I2C_Master_Read@temp+1,w
  4999     0BCF  00AD               	movwf	?_I2C_Master_Read+1
  5000     0BD0  0830               	movf	I2C_Master_Read@temp,w
  5001     0BD1  00AC               	movwf	?_I2C_Master_Read
  5002     0BD2                     l52:
  5003     0BD2  0008               	return
  5004     0BD3                     __end_of_I2C_Master_Read:
  5005                           
  5006                           	psect	text23
  5007     0AA7                     __ptext23:	
  5008 ;; *************** function _I2C_Master_Wait *****************
  5009 ;; Defined at:
  5010 ;;		line 32 in file "I2C.c"
  5011 ;; Parameters:    Size  Location     Type
  5012 ;;		None
  5013 ;; Auto vars:     Size  Location     Type
  5014 ;;		None
  5015 ;; Return value:  Size  Location     Type
  5016 ;;                  1    wreg      void 
  5017 ;; Registers used:
  5018 ;;		wreg, status,2
  5019 ;; Tracked objects:
  5020 ;;		On entry : 0/0
  5021 ;;		On exit  : 0/0
  5022 ;;		Unchanged: 0/0
  5023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5024 ;;      Params:         0       0       0       0       0
  5025 ;;      Locals:         0       0       0       0       0
  5026 ;;      Temps:          0       0       0       0       0
  5027 ;;      Totals:         0       0       0       0       0
  5028 ;;Total ram usage:        0 bytes
  5029 ;; Hardware stack levels used: 1
  5030 ;; Hardware stack levels required when called: 3
  5031 ;; This function calls:
  5032 ;;		Nothing
  5033 ;; This function is called by:
  5034 ;;		_I2C_Master_Start
  5035 ;;		_I2C_Master_RepeatedStart
  5036 ;;		_I2C_Master_Stop
  5037 ;;		_I2C_Master_Write
  5038 ;;		_I2C_Master_Read
  5039 ;; This function uses a non-reentrant model
  5040 ;;
  5041                           
  5042     0AA7                     _I2C_Master_Wait:	
  5043                           ;psect for function _I2C_Master_Wait
  5044                           
  5045     0AA7                     l2641:	
  5046                           ;incstack = 0
  5047                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  5048                           
  5049     0AA7                     l32:	
  5050                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  5051                           
  5052     0AA7  1683               	bsf	3,5	;RP0=1, select bank1
  5053     0AA8  1303               	bcf	3,6	;RP1=0, select bank1
  5054     0AA9  1914               	btfsc	20,2	;volatile
  5055     0AAA  2AAC               	goto	u1961
  5056     0AAB  2AAD               	goto	u1960
  5057     0AAC                     u1961:
  5058     0AAC  2AA7               	goto	l32
  5059     0AAD                     u1960:
  5060     0AAD                     l2643:
  5061     0AAD  0811               	movf	17,w	;volatile
  5062     0AAE  391F               	andlw	31
  5063     0AAF  1D03               	btfss	3,2
  5064     0AB0  2AB2               	goto	u1971
  5065     0AB1  2AB3               	goto	u1970
  5066     0AB2                     u1971:
  5067     0AB2  2AA7               	goto	l32
  5068     0AB3                     u1970:
  5069     0AB3                     l35:
  5070     0AB3  0008               	return
  5071     0AB4                     __end_of_I2C_Master_Wait:
  5072                           
  5073                           	psect	text24
  5074     056E                     __ptext24:	
  5075 ;; *************** function _isr *****************
  5076 ;; Defined at:
  5077 ;;		line 52 in file "main.c"
  5078 ;; Parameters:    Size  Location     Type
  5079 ;;		None
  5080 ;; Auto vars:     Size  Location     Type
  5081 ;;		None
  5082 ;; Return value:  Size  Location     Type
  5083 ;;                  1    wreg      void 
  5084 ;; Registers used:
  5085 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5086 ;; Tracked objects:
  5087 ;;		On entry : 0/0
  5088 ;;		On exit  : 0/0
  5089 ;;		Unchanged: 0/0
  5090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5091 ;;      Params:         0       0       0       0       0
  5092 ;;      Locals:         0       0       0       0       0
  5093 ;;      Temps:          0       6       0       0       0
  5094 ;;      Totals:         0       6       0       0       0
  5095 ;;Total ram usage:        6 bytes
  5096 ;; Hardware stack levels used: 1
  5097 ;; Hardware stack levels required when called: 2
  5098 ;; This function calls:
  5099 ;;		i1_I2C_Master_Start
  5100 ;;		i1_I2C_Master_Stop
  5101 ;;		i1_I2C_Master_Write
  5102 ;;		i1_d2b
  5103 ;; This function is called by:
  5104 ;;		Interrupt level 1
  5105 ;; This function uses a non-reentrant model
  5106 ;;
  5107                           
  5108     056E                     _isr:	
  5109                           ;psect for function _isr
  5110                           
  5111     056E                     i1l2179:
  5112                           
  5113                           ;main.c: 54:      if (INTCONbits.RBIF){
  5114     056E  1C0B               	btfss	11,0	;volatile
  5115     056F  2D71               	goto	u170_21
  5116     0570  2D72               	goto	u170_20
  5117     0571                     u170_21:
  5118     0571  2F0F               	goto	i1l151
  5119     0572                     u170_20:
  5120     0572                     i1l2181:
  5121                           
  5122                           ;main.c: 56:         if (PORTBbits.RB0==0){
  5123     0572  1806               	btfsc	6,0	;volatile
  5124     0573  2D75               	goto	u171_21
  5125     0574  2D76               	goto	u171_20
  5126     0575                     u171_21:
  5127     0575  2DCD               	goto	i1l135
  5128     0576                     u171_20:
  5129     0576                     i1l2183:
  5130                           
  5131                           ;main.c: 58:             hour++;
  5132     0576  3001               	movlw	1
  5133     0577  07D6               	addwf	_hour,f
  5134     0578  1803               	skipnc
  5135     0579  0AD7               	incf	_hour+1,f
  5136     057A  3000               	movlw	0
  5137     057B  07D7               	addwf	_hour+1,f
  5138     057C                     i1l2185:
  5139                           
  5140                           ;main.c: 59:             if (hour > 23){
  5141     057C  0857               	movf	_hour+1,w
  5142     057D  3A80               	xorlw	128
  5143     057E  00FF               	movwf	btemp+1
  5144     057F  3080               	movlw	128
  5145     0580  027F               	subwf	btemp+1,w
  5146     0581  1D03               	skipz
  5147     0582  2D85               	goto	u172_25
  5148     0583  3018               	movlw	24
  5149     0584  0256               	subwf	_hour,w
  5150     0585                     u172_25:
  5151     0585  1C03               	skipc
  5152     0586  2D88               	goto	u172_21
  5153     0587  2D89               	goto	u172_20
  5154     0588                     u172_21:
  5155     0588  2D8D               	goto	i1l2189
  5156     0589                     u172_20:
  5157     0589                     i1l2187:
  5158                           
  5159                           ;main.c: 60:                 hour = 0;
  5160     0589  1283               	bcf	3,5	;RP0=0, select bank0
  5161     058A  1303               	bcf	3,6	;RP1=0, select bank0
  5162     058B  01D6               	clrf	_hour
  5163     058C  01D7               	clrf	_hour+1
  5164     058D                     i1l2189:
  5165                           
  5166                           ;main.c: 62:             I2C_Master_Start();
  5167     058D  120A  158A  224D  120A  118A  	fcall	i1_I2C_Master_Start
  5168     0592                     i1l2191:
  5169                           
  5170                           ;main.c: 63:             I2C_Master_Write(0xD0);
  5171     0592  30D0               	movlw	208
  5172     0593  00FB               	movwf	i1I2C_Master_Write@d
  5173     0594  3000               	movlw	0
  5174     0595  00FC               	movwf	i1I2C_Master_Write@d+1
  5175     0596  120A  158A  227A  120A  118A  	fcall	i1_I2C_Master_Write
  5176     059B                     i1l2193:
  5177                           
  5178                           ;main.c: 64:             I2C_Master_Write(0x02);
  5179     059B  3002               	movlw	2
  5180     059C  00FB               	movwf	i1I2C_Master_Write@d
  5181     059D  3000               	movlw	0
  5182     059E  00FC               	movwf	i1I2C_Master_Write@d+1
  5183     059F  120A  158A  227A  120A  118A  	fcall	i1_I2C_Master_Write
  5184     05A4                     i1l2195:
  5185                           
  5186                           ;main.c: 65:             I2C_Master_Write(d2b(hour));
  5187     05A4  1283               	bcf	3,5	;RP0=0, select bank0
  5188     05A5  1303               	bcf	3,6	;RP1=0, select bank0
  5189     05A6  0857               	movf	_hour+1,w
  5190     05A7  00FA               	movwf	i1d2b@to_convert+1
  5191     05A8  0856               	movf	_hour,w
  5192     05A9  00F9               	movwf	i1d2b@to_convert
  5193     05AA  120A  118A  27A1  120A  118A  	fcall	i1_d2b
  5194     05AF  087A               	movf	?i1_d2b+1,w
  5195     05B0  00FC               	movwf	i1I2C_Master_Write@d+1
  5196     05B1  0879               	movf	?i1_d2b,w
  5197     05B2  00FB               	movwf	i1I2C_Master_Write@d
  5198     05B3  120A  158A  227A  120A  118A  	fcall	i1_I2C_Master_Write
  5199     05B8                     i1l2197:
  5200                           
  5201                           ;main.c: 66:             I2C_Master_Stop();
  5202     05B8  120A  158A  2256  120A  118A  	fcall	i1_I2C_Master_Stop
  5203     05BD                     i1l2199:
  5204                           
  5205                           ;main.c: 67:             _delay((unsigned long)((100)*(8000000/4000.0)));
  5206     05BD  3002               	movlw	2
  5207     05BE  1283               	bcf	3,5	;RP0=0, select bank0
  5208     05BF  1303               	bcf	3,6	;RP1=0, select bank0
  5209     05C0  00A8               	movwf	??_isr+2
  5210     05C1  3004               	movlw	4
  5211     05C2  00A7               	movwf	??_isr+1
  5212     05C3  30B9               	movlw	185
  5213     05C4  00A6               	movwf	??_isr
  5214     05C5                     u248_27:
  5215     05C5  0BA6               	decfsz	??_isr,f
  5216     05C6  2DC5               	goto	u248_27
  5217     05C7  0BA7               	decfsz	??_isr+1,f
  5218     05C8  2DC5               	goto	u248_27
  5219     05C9  0BA8               	decfsz	??_isr+2,f
  5220     05CA  2DC5               	goto	u248_27
  5221     05CB  2DCC               	nop2
  5222                           
  5223                           ;main.c: 68:         }
  5224     05CC  2DD8               	goto	i1l2215
  5225     05CD                     i1l135:	
  5226                           ;main.c: 70:         else if (PORTBbits.RB1 ==0){
  5227                           
  5228     05CD  1886               	btfsc	6,1	;volatile
  5229     05CE  2DD0               	goto	u173_21
  5230     05CF  2DD1               	goto	u173_20
  5231     05D0                     u173_21:
  5232     05D0  2DD8               	goto	i1l2215
  5233     05D1                     u173_20:
  5234     05D1                     i1l2201:
  5235                           
  5236                           ;main.c: 71:             hour--;
  5237     05D1  30FF               	movlw	255
  5238     05D2  07D6               	addwf	_hour,f
  5239     05D3  1803               	skipnc
  5240     05D4  0AD7               	incf	_hour+1,f
  5241     05D5  30FF               	movlw	255
  5242     05D6  07D7               	addwf	_hour+1,f
  5243     05D7  2D8D               	goto	i1l2189
  5244     05D8                     i1l2215:
  5245                           
  5246                           ;main.c: 81:         if (PORTBbits.RB2==0){
  5247     05D8  1283               	bcf	3,5	;RP0=0, select bank0
  5248     05D9  1303               	bcf	3,6	;RP1=0, select bank0
  5249     05DA  1906               	btfsc	6,2	;volatile
  5250     05DB  2DDD               	goto	u174_21
  5251     05DC  2DDE               	goto	u174_20
  5252     05DD                     u174_21:
  5253     05DD  2E35               	goto	i1l139
  5254     05DE                     u174_20:
  5255     05DE                     i1l2217:
  5256                           
  5257                           ;main.c: 83:             min++;
  5258     05DE  3001               	movlw	1
  5259     05DF  07D4               	addwf	_min,f
  5260     05E0  1803               	skipnc
  5261     05E1  0AD5               	incf	_min+1,f
  5262     05E2  3000               	movlw	0
  5263     05E3  07D5               	addwf	_min+1,f
  5264     05E4                     i1l2219:
  5265                           
  5266                           ;main.c: 84:             if (min > 59){
  5267     05E4  0855               	movf	_min+1,w
  5268     05E5  3A80               	xorlw	128
  5269     05E6  00FF               	movwf	btemp+1
  5270     05E7  3080               	movlw	128
  5271     05E8  027F               	subwf	btemp+1,w
  5272     05E9  1D03               	skipz
  5273     05EA  2DED               	goto	u175_25
  5274     05EB  303C               	movlw	60
  5275     05EC  0254               	subwf	_min,w
  5276     05ED                     u175_25:
  5277     05ED  1C03               	skipc
  5278     05EE  2DF0               	goto	u175_21
  5279     05EF  2DF1               	goto	u175_20
  5280     05F0                     u175_21:
  5281     05F0  2DF5               	goto	i1l2223
  5282     05F1                     u175_20:
  5283     05F1                     i1l2221:
  5284                           
  5285                           ;main.c: 85:                 min = 0;
  5286     05F1  1283               	bcf	3,5	;RP0=0, select bank0
  5287     05F2  1303               	bcf	3,6	;RP1=0, select bank0
  5288     05F3  01D4               	clrf	_min
  5289     05F4  01D5               	clrf	_min+1
  5290     05F5                     i1l2223:
  5291                           
  5292                           ;main.c: 87:             I2C_Master_Start();
  5293     05F5  120A  158A  224D  120A  118A  	fcall	i1_I2C_Master_Start
  5294     05FA                     i1l2225:
  5295                           
  5296                           ;main.c: 88:             I2C_Master_Write(0xD0);
  5297     05FA  30D0               	movlw	208
  5298     05FB  00FB               	movwf	i1I2C_Master_Write@d
  5299     05FC  3000               	movlw	0
  5300     05FD  00FC               	movwf	i1I2C_Master_Write@d+1
  5301     05FE  120A  158A  227A  120A  118A  	fcall	i1_I2C_Master_Write
  5302     0603                     i1l2227:
  5303                           
  5304                           ;main.c: 89:             I2C_Master_Write(0x01);
  5305     0603  3001               	movlw	1
  5306     0604  00FB               	movwf	i1I2C_Master_Write@d
  5307     0605  3000               	movlw	0
  5308     0606  00FC               	movwf	i1I2C_Master_Write@d+1
  5309     0607  120A  158A  227A  120A  118A  	fcall	i1_I2C_Master_Write
  5310     060C                     i1l2229:
  5311                           
  5312                           ;main.c: 90:             I2C_Master_Write(d2b(min));
  5313     060C  1283               	bcf	3,5	;RP0=0, select bank0
  5314     060D  1303               	bcf	3,6	;RP1=0, select bank0
  5315     060E  0855               	movf	_min+1,w
  5316     060F  00FA               	movwf	i1d2b@to_convert+1
  5317     0610  0854               	movf	_min,w
  5318     0611  00F9               	movwf	i1d2b@to_convert
  5319     0612  120A  118A  27A1  120A  118A  	fcall	i1_d2b
  5320     0617  087A               	movf	?i1_d2b+1,w
  5321     0618  00FC               	movwf	i1I2C_Master_Write@d+1
  5322     0619  0879               	movf	?i1_d2b,w
  5323     061A  00FB               	movwf	i1I2C_Master_Write@d
  5324     061B  120A  158A  227A  120A  118A  	fcall	i1_I2C_Master_Write
  5325     0620                     i1l2231:
  5326                           
  5327                           ;main.c: 91:             I2C_Master_Stop();
  5328     0620  120A  158A  2256  120A  118A  	fcall	i1_I2C_Master_Stop
  5329     0625                     i1l2233:
  5330                           
  5331                           ;main.c: 92:             _delay((unsigned long)((100)*(8000000/4000.0)));
  5332     0625  3002               	movlw	2
  5333     0626  1283               	bcf	3,5	;RP0=0, select bank0
  5334     0627  1303               	bcf	3,6	;RP1=0, select bank0
  5335     0628  00A8               	movwf	??_isr+2
  5336     0629  3004               	movlw	4
  5337     062A  00A7               	movwf	??_isr+1
  5338     062B  30B9               	movlw	185
  5339     062C  00A6               	movwf	??_isr
  5340     062D                     u249_27:
  5341     062D  0BA6               	decfsz	??_isr,f
  5342     062E  2E2D               	goto	u249_27
  5343     062F  0BA7               	decfsz	??_isr+1,f
  5344     0630  2E2D               	goto	u249_27
  5345     0631  0BA8               	decfsz	??_isr+2,f
  5346     0632  2E2D               	goto	u249_27
  5347     0633  2E34               	nop2
  5348                           
  5349                           ;main.c: 93:         }
  5350     0634  2E40               	goto	i1l2249
  5351     0635                     i1l139:	
  5352                           ;main.c: 95:         else if (PORTBbits.RB3 ==0){
  5353                           
  5354     0635  1986               	btfsc	6,3	;volatile
  5355     0636  2E38               	goto	u176_21
  5356     0637  2E39               	goto	u176_20
  5357     0638                     u176_21:
  5358     0638  2E40               	goto	i1l2249
  5359     0639                     u176_20:
  5360     0639                     i1l2235:
  5361                           
  5362                           ;main.c: 96:             min--;
  5363     0639  30FF               	movlw	255
  5364     063A  07D4               	addwf	_min,f
  5365     063B  1803               	skipnc
  5366     063C  0AD5               	incf	_min+1,f
  5367     063D  30FF               	movlw	255
  5368     063E  07D5               	addwf	_min+1,f
  5369     063F  2DF5               	goto	i1l2223
  5370     0640                     i1l2249:
  5371                           
  5372                           ;main.c: 105:         if (PORTBbits.RB4==0){
  5373     0640  1283               	bcf	3,5	;RP0=0, select bank0
  5374     0641  1303               	bcf	3,6	;RP1=0, select bank0
  5375     0642  1A06               	btfsc	6,4	;volatile
  5376     0643  2E45               	goto	u177_21
  5377     0644  2E46               	goto	u177_20
  5378     0645                     u177_21:
  5379     0645  2E9F               	goto	i1l143
  5380     0646                     u177_20:
  5381     0646                     i1l2251:
  5382                           
  5383                           ;main.c: 107:             date++;
  5384     0646  3001               	movlw	1
  5385     0647  07D8               	addwf	_date,f
  5386     0648  1803               	skipnc
  5387     0649  0AD9               	incf	_date+1,f
  5388     064A  3000               	movlw	0
  5389     064B  07D9               	addwf	_date+1,f
  5390     064C                     i1l2253:
  5391                           
  5392                           ;main.c: 108:             if (date > 31){
  5393     064C  0859               	movf	_date+1,w
  5394     064D  3A80               	xorlw	128
  5395     064E  00FF               	movwf	btemp+1
  5396     064F  3080               	movlw	128
  5397     0650  027F               	subwf	btemp+1,w
  5398     0651  1D03               	skipz
  5399     0652  2E55               	goto	u178_25
  5400     0653  3020               	movlw	32
  5401     0654  0258               	subwf	_date,w
  5402     0655                     u178_25:
  5403     0655  1C03               	skipc
  5404     0656  2E58               	goto	u178_21
  5405     0657  2E59               	goto	u178_20
  5406     0658                     u178_21:
  5407     0658  2E5F               	goto	i1l2257
  5408     0659                     u178_20:
  5409     0659                     i1l2255:
  5410                           
  5411                           ;main.c: 109:                 date = 1;
  5412     0659  3001               	movlw	1
  5413     065A  1283               	bcf	3,5	;RP0=0, select bank0
  5414     065B  1303               	bcf	3,6	;RP1=0, select bank0
  5415     065C  00D8               	movwf	_date
  5416     065D  3000               	movlw	0
  5417     065E  00D9               	movwf	_date+1
  5418     065F                     i1l2257:
  5419                           
  5420                           ;main.c: 111:             I2C_Master_Start();
  5421     065F  120A  158A  224D  120A  118A  	fcall	i1_I2C_Master_Start
  5422     0664                     i1l2259:
  5423                           
  5424                           ;main.c: 112:             I2C_Master_Write(0xD0);
  5425     0664  30D0               	movlw	208
  5426     0665  00FB               	movwf	i1I2C_Master_Write@d
  5427     0666  3000               	movlw	0
  5428     0667  00FC               	movwf	i1I2C_Master_Write@d+1
  5429     0668  120A  158A  227A  120A  118A  	fcall	i1_I2C_Master_Write
  5430     066D                     i1l2261:
  5431                           
  5432                           ;main.c: 113:             I2C_Master_Write(0x04);
  5433     066D  3004               	movlw	4
  5434     066E  00FB               	movwf	i1I2C_Master_Write@d
  5435     066F  3000               	movlw	0
  5436     0670  00FC               	movwf	i1I2C_Master_Write@d+1
  5437     0671  120A  158A  227A  120A  118A  	fcall	i1_I2C_Master_Write
  5438     0676                     i1l2263:
  5439                           
  5440                           ;main.c: 114:             I2C_Master_Write(d2b(date));
  5441     0676  1283               	bcf	3,5	;RP0=0, select bank0
  5442     0677  1303               	bcf	3,6	;RP1=0, select bank0
  5443     0678  0859               	movf	_date+1,w
  5444     0679  00FA               	movwf	i1d2b@to_convert+1
  5445     067A  0858               	movf	_date,w
  5446     067B  00F9               	movwf	i1d2b@to_convert
  5447     067C  120A  118A  27A1  120A  118A  	fcall	i1_d2b
  5448     0681  087A               	movf	?i1_d2b+1,w
  5449     0682  00FC               	movwf	i1I2C_Master_Write@d+1
  5450     0683  0879               	movf	?i1_d2b,w
  5451     0684  00FB               	movwf	i1I2C_Master_Write@d
  5452     0685  120A  158A  227A  120A  118A  	fcall	i1_I2C_Master_Write
  5453     068A                     i1l2265:
  5454                           
  5455                           ;main.c: 115:             I2C_Master_Stop();
  5456     068A  120A  158A  2256  120A  118A  	fcall	i1_I2C_Master_Stop
  5457     068F                     i1l2267:
  5458                           
  5459                           ;main.c: 116:             _delay((unsigned long)((100)*(8000000/4000.0)));
  5460     068F  3002               	movlw	2
  5461     0690  1283               	bcf	3,5	;RP0=0, select bank0
  5462     0691  1303               	bcf	3,6	;RP1=0, select bank0
  5463     0692  00A8               	movwf	??_isr+2
  5464     0693  3004               	movlw	4
  5465     0694  00A7               	movwf	??_isr+1
  5466     0695  30B9               	movlw	185
  5467     0696  00A6               	movwf	??_isr
  5468     0697                     u250_27:
  5469     0697  0BA6               	decfsz	??_isr,f
  5470     0698  2E97               	goto	u250_27
  5471     0699  0BA7               	decfsz	??_isr+1,f
  5472     069A  2E97               	goto	u250_27
  5473     069B  0BA8               	decfsz	??_isr+2,f
  5474     069C  2E97               	goto	u250_27
  5475     069D  2E9E               	nop2
  5476                           
  5477                           ;main.c: 117:         }
  5478     069E  2EB7               	goto	i1l2287
  5479     069F                     i1l143:	
  5480                           ;main.c: 119:         else if (PORTBbits.RB5 ==0){
  5481                           
  5482     069F  1A86               	btfsc	6,5	;volatile
  5483     06A0  2EA2               	goto	u179_21
  5484     06A1  2EA3               	goto	u179_20
  5485     06A2                     u179_21:
  5486     06A2  2EB7               	goto	i1l2287
  5487     06A3                     u179_20:
  5488     06A3                     i1l2269:
  5489                           
  5490                           ;main.c: 120:              date--;
  5491     06A3  30FF               	movlw	255
  5492     06A4  07D8               	addwf	_date,f
  5493     06A5  1803               	skipnc
  5494     06A6  0AD9               	incf	_date+1,f
  5495     06A7  30FF               	movlw	255
  5496     06A8  07D9               	addwf	_date+1,f
  5497     06A9                     i1l2271:
  5498                           
  5499                           ;main.c: 121:             if (date <= 0){
  5500     06A9  0859               	movf	_date+1,w
  5501     06AA  3A80               	xorlw	128
  5502     06AB  00FF               	movwf	btemp+1
  5503     06AC  3080               	movlw	128
  5504     06AD  027F               	subwf	btemp+1,w
  5505     06AE  1D03               	skipz
  5506     06AF  2EB2               	goto	u180_25
  5507     06B0  3001               	movlw	1
  5508     06B1  0258               	subwf	_date,w
  5509     06B2                     u180_25:
  5510     06B2  1803               	skipnc
  5511     06B3  2EB5               	goto	u180_21
  5512     06B4  2EB6               	goto	u180_20
  5513     06B5                     u180_21:
  5514     06B5  2E5F               	goto	i1l2257
  5515     06B6                     u180_20:
  5516     06B6  2E59               	goto	i1l2255
  5517     06B7                     i1l2287:
  5518                           
  5519                           ;main.c: 131:         if (PORTBbits.RB6==0){
  5520     06B7  1283               	bcf	3,5	;RP0=0, select bank0
  5521     06B8  1303               	bcf	3,6	;RP1=0, select bank0
  5522     06B9  1B06               	btfsc	6,6	;volatile
  5523     06BA  2EBC               	goto	u181_21
  5524     06BB  2EBD               	goto	u181_20
  5525     06BC                     u181_21:
  5526     06BC  2F03               	goto	i1l148
  5527     06BD                     u181_20:
  5528     06BD                     i1l2289:
  5529                           
  5530                           ;main.c: 133:             year++;
  5531     06BD  3001               	movlw	1
  5532     06BE  07DC               	addwf	_year,f
  5533     06BF  1803               	skipnc
  5534     06C0  0ADD               	incf	_year+1,f
  5535     06C1  3000               	movlw	0
  5536     06C2  07DD               	addwf	_year+1,f
  5537     06C3                     i1l2291:
  5538                           
  5539                           ;main.c: 135:             I2C_Master_Start();
  5540     06C3  120A  158A  224D  120A  118A  	fcall	i1_I2C_Master_Start
  5541     06C8                     i1l2293:
  5542                           
  5543                           ;main.c: 136:             I2C_Master_Write(0xD0);
  5544     06C8  30D0               	movlw	208
  5545     06C9  00FB               	movwf	i1I2C_Master_Write@d
  5546     06CA  3000               	movlw	0
  5547     06CB  00FC               	movwf	i1I2C_Master_Write@d+1
  5548     06CC  120A  158A  227A  120A  118A  	fcall	i1_I2C_Master_Write
  5549     06D1                     i1l2295:
  5550                           
  5551                           ;main.c: 137:             I2C_Master_Write(0x06);
  5552     06D1  3006               	movlw	6
  5553     06D2  00FB               	movwf	i1I2C_Master_Write@d
  5554     06D3  3000               	movlw	0
  5555     06D4  00FC               	movwf	i1I2C_Master_Write@d+1
  5556     06D5  120A  158A  227A  120A  118A  	fcall	i1_I2C_Master_Write
  5557     06DA                     i1l2297:
  5558                           
  5559                           ;main.c: 138:             I2C_Master_Write(d2b(year));
  5560     06DA  1283               	bcf	3,5	;RP0=0, select bank0
  5561     06DB  1303               	bcf	3,6	;RP1=0, select bank0
  5562     06DC  085D               	movf	_year+1,w
  5563     06DD  00FA               	movwf	i1d2b@to_convert+1
  5564     06DE  085C               	movf	_year,w
  5565     06DF  00F9               	movwf	i1d2b@to_convert
  5566     06E0  120A  118A  27A1  120A  118A  	fcall	i1_d2b
  5567     06E5  087A               	movf	?i1_d2b+1,w
  5568     06E6  00FC               	movwf	i1I2C_Master_Write@d+1
  5569     06E7  0879               	movf	?i1_d2b,w
  5570     06E8  00FB               	movwf	i1I2C_Master_Write@d
  5571     06E9  120A  158A  227A  120A  118A  	fcall	i1_I2C_Master_Write
  5572     06EE                     i1l2299:
  5573                           
  5574                           ;main.c: 139:             I2C_Master_Stop();
  5575     06EE  120A  158A  2256  120A  118A  	fcall	i1_I2C_Master_Stop
  5576     06F3                     i1l2301:
  5577                           
  5578                           ;main.c: 140:             _delay((unsigned long)((100)*(8000000/4000.0)));
  5579     06F3  3002               	movlw	2
  5580     06F4  1283               	bcf	3,5	;RP0=0, select bank0
  5581     06F5  1303               	bcf	3,6	;RP1=0, select bank0
  5582     06F6  00A8               	movwf	??_isr+2
  5583     06F7  3004               	movlw	4
  5584     06F8  00A7               	movwf	??_isr+1
  5585     06F9  30B9               	movlw	185
  5586     06FA  00A6               	movwf	??_isr
  5587     06FB                     u251_27:
  5588     06FB  0BA6               	decfsz	??_isr,f
  5589     06FC  2EFB               	goto	u251_27
  5590     06FD  0BA7               	decfsz	??_isr+1,f
  5591     06FE  2EFB               	goto	u251_27
  5592     06FF  0BA8               	decfsz	??_isr+2,f
  5593     0700  2EFB               	goto	u251_27
  5594     0701  2F02               	nop2
  5595                           
  5596                           ;main.c: 141:         }
  5597     0702  2F0E               	goto	i1l2317
  5598     0703                     i1l148:	
  5599                           ;main.c: 143:         else if (PORTBbits.RB7 ==0){
  5600                           
  5601     0703  1B86               	btfsc	6,7	;volatile
  5602     0704  2F06               	goto	u182_21
  5603     0705  2F07               	goto	u182_20
  5604     0706                     u182_21:
  5605     0706  2F0E               	goto	i1l2317
  5606     0707                     u182_20:
  5607     0707                     i1l2303:
  5608                           
  5609                           ;main.c: 144:             year--;
  5610     0707  30FF               	movlw	255
  5611     0708  07DC               	addwf	_year,f
  5612     0709  1803               	skipnc
  5613     070A  0ADD               	incf	_year+1,f
  5614     070B  30FF               	movlw	255
  5615     070C  07DD               	addwf	_year+1,f
  5616     070D  2EC3               	goto	i1l2291
  5617     070E                     i1l2317:
  5618                           
  5619                           ;main.c: 155:         INTCONbits.RBIF=0;
  5620     070E  100B               	bcf	11,0	;volatile
  5621     070F                     i1l151:
  5622     070F  1283               	bcf	3,5	;RP0=0, select bank0
  5623     0710  1303               	bcf	3,6	;RP1=0, select bank0
  5624     0711  082B               	movf	??_isr+5,w
  5625     0712  00FF               	movwf	btemp+1
  5626     0713  082A               	movf	??_isr+4,w
  5627     0714  008A               	movwf	10
  5628     0715  0E29               	swapf	??_isr+3,w
  5629     0716  0083               	movwf	3
  5630     0717  0EFE               	swapf	btemp,f
  5631     0718  0E7E               	swapf	btemp,w
  5632     0719  0009               	retfie
  5633     071A                     __end_of_isr:
  5634                           
  5635                           	psect	intentry
  5636     0004                     __pintentry:	
  5637                           ;incstack = 0
  5638                           ; Regs used in _isr: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5639                           
  5640     0004                     interrupt_function:
  5641     007E                     saved_w	set	btemp
  5642     0004  00FE               	movwf	btemp
  5643     0005  0E03               	swapf	3,w
  5644     0006  1283               	bcf	3,5	;RP0=0, select bank0
  5645     0007  1303               	bcf	3,6	;RP1=0, select bank0
  5646     0008  00A9               	movwf	??_isr+3
  5647     0009  080A               	movf	10,w
  5648     000A  00AA               	movwf	??_isr+4
  5649     000B  087F               	movf	btemp+1,w
  5650     000C  00AB               	movwf	??_isr+5
  5651     000D  120A  118A  2D6E   	ljmp	_isr
  5652                           
  5653                           	psect	text25
  5654     07A1                     __ptext25:	
  5655 ;; *************** function i1_d2b *****************
  5656 ;; Defined at:
  5657 ;;		line 379 in file "main.c"
  5658 ;; Parameters:    Size  Location     Type
  5659 ;;  to_convert      2    9[COMMON] int 
  5660 ;; Auto vars:     Size  Location     Type
  5661 ;;  multiplier      2    4[BANK0 ] unsigned int 
  5662 ;;  bcd             2    2[BANK0 ] unsigned int 
  5663 ;;  digit           2    0[BANK0 ] unsigned int 
  5664 ;; Return value:  Size  Location     Type
  5665 ;;                  2    9[COMMON] int 
  5666 ;; Registers used:
  5667 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5668 ;; Tracked objects:
  5669 ;;		On entry : 0/0
  5670 ;;		On exit  : 0/0
  5671 ;;		Unchanged: 0/0
  5672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5673 ;;      Params:         2       0       0       0       0
  5674 ;;      Locals:         0       6       0       0       0
  5675 ;;      Temps:          0       0       0       0       0
  5676 ;;      Totals:         2       6       0       0       0
  5677 ;;Total ram usage:        8 bytes
  5678 ;; Hardware stack levels used: 1
  5679 ;; Hardware stack levels required when called: 1
  5680 ;; This function calls:
  5681 ;;		i1___awdiv
  5682 ;;		i1___awmod
  5683 ;;		i1___wmul
  5684 ;; This function is called by:
  5685 ;;		_isr
  5686 ;; This function uses a non-reentrant model
  5687 ;;
  5688                           
  5689     07A1                     i1_d2b:	
  5690                           ;psect for function i1_d2b
  5691                           
  5692     07A1                     i1l2163:	
  5693                           ;incstack = 0
  5694                           ; Regs used in i1_d2b: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5695                           
  5696                           
  5697                           ;main.c: 380:     unsigned int bcd=0;
  5698     07A1  1283               	bcf	3,5	;RP0=0, select bank0
  5699     07A2  1303               	bcf	3,6	;RP1=0, select bank0
  5700     07A3  01A2               	clrf	i1d2b@bcd
  5701     07A4  01A3               	clrf	i1d2b@bcd+1
  5702     07A5                     i1l2165:
  5703                           
  5704                           ;main.c: 381:     unsigned int multiplier = 1;
  5705     07A5  3001               	movlw	1
  5706     07A6  00A4               	movwf	i1d2b@multiplier
  5707     07A7  3000               	movlw	0
  5708     07A8  00A5               	movwf	i1d2b@multiplier+1
  5709                           
  5710                           ;main.c: 383:     while (to_convert >0){
  5711     07A9  2FEA               	goto	i1l2173
  5712     07AA                     i1l2167:
  5713                           
  5714                           ;main.c: 384:         unsigned int digit = to_convert % 10;
  5715     07AA  300A               	movlw	10
  5716     07AB  00F0               	movwf	i1___awmod@divisor
  5717     07AC  3000               	movlw	0
  5718     07AD  00F1               	movwf	i1___awmod@divisor+1
  5719     07AE  087A               	movf	i1d2b@to_convert+1,w
  5720     07AF  00F3               	movwf	i1___awmod@dividend+1
  5721     07B0  0879               	movf	i1d2b@to_convert,w
  5722     07B1  00F2               	movwf	i1___awmod@dividend
  5723     07B2  120A  158A  24D8  120A  118A  	fcall	i1___awmod
  5724     07B7  0871               	movf	?i1___awmod+1,w
  5725     07B8  1283               	bcf	3,5	;RP0=0, select bank0
  5726     07B9  1303               	bcf	3,6	;RP1=0, select bank0
  5727     07BA  00A1               	movwf	i1d2b@digit+1
  5728     07BB  0870               	movf	?i1___awmod,w
  5729     07BC  00A0               	movwf	i1d2b@digit
  5730                           
  5731                           ;main.c: 385:         bcd += digit * multiplier;
  5732     07BD  0821               	movf	i1d2b@digit+1,w
  5733     07BE  00F1               	movwf	i1___wmul@multiplier+1
  5734     07BF  0820               	movf	i1d2b@digit,w
  5735     07C0  00F0               	movwf	i1___wmul@multiplier
  5736     07C1  0825               	movf	i1d2b@multiplier+1,w
  5737     07C2  00F3               	movwf	i1___wmul@multiplicand+1
  5738     07C3  0824               	movf	i1d2b@multiplier,w
  5739     07C4  00F2               	movwf	i1___wmul@multiplicand
  5740     07C5  120A  158A  232C  120A  118A  	fcall	i1___wmul
  5741     07CA  0870               	movf	?i1___wmul,w
  5742     07CB  1283               	bcf	3,5	;RP0=0, select bank0
  5743     07CC  1303               	bcf	3,6	;RP1=0, select bank0
  5744     07CD  07A2               	addwf	i1d2b@bcd,f
  5745     07CE  1803               	skipnc
  5746     07CF  0AA3               	incf	i1d2b@bcd+1,f
  5747     07D0  0871               	movf	?i1___wmul+1,w
  5748     07D1  07A3               	addwf	i1d2b@bcd+1,f
  5749     07D2                     i1l2169:
  5750                           
  5751                           ;main.c: 386:         multiplier *= 16;
  5752     07D2  3004               	movlw	4
  5753     07D3                     u168_25:
  5754     07D3  1003               	clrc
  5755     07D4  0DA4               	rlf	i1d2b@multiplier,f
  5756     07D5  0DA5               	rlf	i1d2b@multiplier+1,f
  5757     07D6  3EFF               	addlw	-1
  5758     07D7  1D03               	skipz
  5759     07D8  2FD3               	goto	u168_25
  5760     07D9                     i1l2171:
  5761                           
  5762                           ;main.c: 387:         to_convert /= 10;
  5763     07D9  300A               	movlw	10
  5764     07DA  00F0               	movwf	i1___awdiv@divisor
  5765     07DB  3000               	movlw	0
  5766     07DC  00F1               	movwf	i1___awdiv@divisor+1
  5767     07DD  087A               	movf	i1d2b@to_convert+1,w
  5768     07DE  00F3               	movwf	i1___awdiv@dividend+1
  5769     07DF  0879               	movf	i1d2b@to_convert,w
  5770     07E0  00F2               	movwf	i1___awdiv@dividend
  5771     07E1  120A  158A  264F  120A  118A  	fcall	i1___awdiv
  5772     07E6  0871               	movf	?i1___awdiv+1,w
  5773     07E7  00FA               	movwf	i1d2b@to_convert+1
  5774     07E8  0870               	movf	?i1___awdiv,w
  5775     07E9  00F9               	movwf	i1d2b@to_convert
  5776     07EA                     i1l2173:
  5777                           
  5778                           ;main.c: 383:     while (to_convert >0){
  5779     07EA  087A               	movf	i1d2b@to_convert+1,w
  5780     07EB  3A80               	xorlw	128
  5781     07EC  00FF               	movwf	btemp+1
  5782     07ED  3080               	movlw	128
  5783     07EE  027F               	subwf	btemp+1,w
  5784     07EF  1D03               	skipz
  5785     07F0  2FF3               	goto	u169_25
  5786     07F1  3001               	movlw	1
  5787     07F2  0279               	subwf	i1d2b@to_convert,w
  5788     07F3                     u169_25:
  5789     07F3  1803               	skipnc
  5790     07F4  2FF6               	goto	u169_21
  5791     07F5  2FF7               	goto	u169_20
  5792     07F6                     u169_21:
  5793     07F6  2FAA               	goto	i1l2167
  5794     07F7                     u169_20:
  5795     07F7                     i1l2175:
  5796                           
  5797                           ;main.c: 389:    return bcd;
  5798     07F7  1283               	bcf	3,5	;RP0=0, select bank0
  5799     07F8  1303               	bcf	3,6	;RP1=0, select bank0
  5800     07F9  0823               	movf	i1d2b@bcd+1,w
  5801     07FA  00FA               	movwf	?i1_d2b+1
  5802     07FB  0822               	movf	i1d2b@bcd,w
  5803     07FC  00F9               	movwf	?i1_d2b
  5804     07FD                     i1l171:
  5805     07FD  0008               	return
  5806     07FE                     __end_ofi1_d2b:
  5807                           
  5808                           	psect	text26
  5809     0B2C                     __ptext26:	
  5810 ;; *************** function i1___wmul *****************
  5811 ;; Defined at:
  5812 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\Umul16.c"
  5813 ;; Parameters:    Size  Location     Type
  5814 ;;  multiplier      2    0[COMMON] unsigned int 
  5815 ;;  multiplicand    2    2[COMMON] unsigned int 
  5816 ;; Auto vars:     Size  Location     Type
  5817 ;;  product         2    4[COMMON] unsigned int 
  5818 ;; Return value:  Size  Location     Type
  5819 ;;                  2    0[COMMON] unsigned int 
  5820 ;; Registers used:
  5821 ;;		wreg, status,2, status,0
  5822 ;; Tracked objects:
  5823 ;;		On entry : 0/0
  5824 ;;		On exit  : 0/0
  5825 ;;		Unchanged: 0/0
  5826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5827 ;;      Params:         4       0       0       0       0
  5828 ;;      Locals:         2       0       0       0       0
  5829 ;;      Temps:          0       0       0       0       0
  5830 ;;      Totals:         6       0       0       0       0
  5831 ;;Total ram usage:        6 bytes
  5832 ;; Hardware stack levels used: 1
  5833 ;; This function calls:
  5834 ;;		Nothing
  5835 ;; This function is called by:
  5836 ;;		i1_d2b
  5837 ;; This function uses a non-reentrant model
  5838 ;;
  5839                           
  5840     0B2C                     i1___wmul:	
  5841                           ;psect for function i1___wmul
  5842                           
  5843     0B2C                     i1l1941:	
  5844                           ;incstack = 0
  5845                           ; Regs used in i1___wmul: [wreg+status,2+status,0]
  5846                           
  5847     0B2C  01F4               	clrf	i1___wmul@product
  5848     0B2D  01F5               	clrf	i1___wmul@product+1
  5849     0B2E                     i1l1943:
  5850     0B2E  1C70               	btfss	i1___wmul@multiplier,0
  5851     0B2F  2B31               	goto	u139_21
  5852     0B30  2B32               	goto	u139_20
  5853     0B31                     u139_21:
  5854     0B31  2B38               	goto	i1l337
  5855     0B32                     u139_20:
  5856     0B32                     i1l1945:
  5857     0B32  0872               	movf	i1___wmul@multiplicand,w
  5858     0B33  07F4               	addwf	i1___wmul@product,f
  5859     0B34  1803               	skipnc
  5860     0B35  0AF5               	incf	i1___wmul@product+1,f
  5861     0B36  0873               	movf	i1___wmul@multiplicand+1,w
  5862     0B37  07F5               	addwf	i1___wmul@product+1,f
  5863     0B38                     i1l337:
  5864     0B38  3001               	movlw	1
  5865     0B39                     u140_25:
  5866     0B39  1003               	clrc
  5867     0B3A  0DF2               	rlf	i1___wmul@multiplicand,f
  5868     0B3B  0DF3               	rlf	i1___wmul@multiplicand+1,f
  5869     0B3C  3EFF               	addlw	-1
  5870     0B3D  1D03               	skipz
  5871     0B3E  2B39               	goto	u140_25
  5872     0B3F                     i1l1947:
  5873     0B3F  3001               	movlw	1
  5874     0B40                     u141_25:
  5875     0B40  1003               	clrc
  5876     0B41  0CF1               	rrf	i1___wmul@multiplier+1,f
  5877     0B42  0CF0               	rrf	i1___wmul@multiplier,f
  5878     0B43  3EFF               	addlw	-1
  5879     0B44  1D03               	skipz
  5880     0B45  2B40               	goto	u141_25
  5881     0B46                     i1l1949:
  5882     0B46  0870               	movf	i1___wmul@multiplier,w
  5883     0B47  0471               	iorwf	i1___wmul@multiplier+1,w
  5884     0B48  1D03               	btfss	3,2
  5885     0B49  2B4B               	goto	u142_21
  5886     0B4A  2B4C               	goto	u142_20
  5887     0B4B                     u142_21:
  5888     0B4B  2B2E               	goto	i1l1943
  5889     0B4C                     u142_20:
  5890     0B4C                     i1l1951:
  5891     0B4C  0875               	movf	i1___wmul@product+1,w
  5892     0B4D  00F1               	movwf	?i1___wmul+1
  5893     0B4E  0874               	movf	i1___wmul@product,w
  5894     0B4F  00F0               	movwf	?i1___wmul
  5895     0B50                     i1l339:
  5896     0B50  0008               	return
  5897     0B51                     __end_ofi1___wmul:
  5898                           
  5899                           	psect	text27
  5900     0CD8                     __ptext27:	
  5901 ;; *************** function i1___awmod *****************
  5902 ;; Defined at:
  5903 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  5904 ;; Parameters:    Size  Location     Type
  5905 ;;  divisor         2    0[COMMON] int 
  5906 ;;  dividend        2    2[COMMON] int 
  5907 ;; Auto vars:     Size  Location     Type
  5908 ;;  sign            1    6[COMMON] unsigned char 
  5909 ;;  counter         1    5[COMMON] unsigned char 
  5910 ;; Return value:  Size  Location     Type
  5911 ;;                  2    0[COMMON] int 
  5912 ;; Registers used:
  5913 ;;		wreg, status,2, status,0
  5914 ;; Tracked objects:
  5915 ;;		On entry : 0/0
  5916 ;;		On exit  : 0/0
  5917 ;;		Unchanged: 0/0
  5918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5919 ;;      Params:         4       0       0       0       0
  5920 ;;      Locals:         2       0       0       0       0
  5921 ;;      Temps:          1       0       0       0       0
  5922 ;;      Totals:         7       0       0       0       0
  5923 ;;Total ram usage:        7 bytes
  5924 ;; Hardware stack levels used: 1
  5925 ;; This function calls:
  5926 ;;		Nothing
  5927 ;; This function is called by:
  5928 ;;		i1_d2b
  5929 ;; This function uses a non-reentrant model
  5930 ;;
  5931                           
  5932     0CD8                     i1___awmod:	
  5933                           ;psect for function i1___awmod
  5934                           
  5935     0CD8                     i1l1999:	
  5936                           ;incstack = 0
  5937                           ; Regs used in i1___awmod: [wreg+status,2+status,0]
  5938                           
  5939     0CD8  01F6               	clrf	i1___awmod@sign
  5940     0CD9                     i1l2001:
  5941     0CD9  1FF3               	btfss	i1___awmod@dividend+1,7
  5942     0CDA  2CDC               	goto	u153_21
  5943     0CDB  2CDD               	goto	u153_20
  5944     0CDC                     u153_21:
  5945     0CDC  2CE4               	goto	i1l2007
  5946     0CDD                     u153_20:
  5947     0CDD                     i1l2003:
  5948     0CDD  09F2               	comf	i1___awmod@dividend,f
  5949     0CDE  09F3               	comf	i1___awmod@dividend+1,f
  5950     0CDF  0AF2               	incf	i1___awmod@dividend,f
  5951     0CE0  1903               	skipnz
  5952     0CE1  0AF3               	incf	i1___awmod@dividend+1,f
  5953     0CE2                     i1l2005:
  5954     0CE2  01F6               	clrf	i1___awmod@sign
  5955     0CE3  0AF6               	incf	i1___awmod@sign,f
  5956     0CE4                     i1l2007:
  5957     0CE4  1FF1               	btfss	i1___awmod@divisor+1,7
  5958     0CE5  2CE7               	goto	u154_21
  5959     0CE6  2CE8               	goto	u154_20
  5960     0CE7                     u154_21:
  5961     0CE7  2CED               	goto	i1l2011
  5962     0CE8                     u154_20:
  5963     0CE8                     i1l2009:
  5964     0CE8  09F0               	comf	i1___awmod@divisor,f
  5965     0CE9  09F1               	comf	i1___awmod@divisor+1,f
  5966     0CEA  0AF0               	incf	i1___awmod@divisor,f
  5967     0CEB  1903               	skipnz
  5968     0CEC  0AF1               	incf	i1___awmod@divisor+1,f
  5969     0CED                     i1l2011:
  5970     0CED  0870               	movf	i1___awmod@divisor,w
  5971     0CEE  0471               	iorwf	i1___awmod@divisor+1,w
  5972     0CEF  1903               	btfsc	3,2
  5973     0CF0  2CF2               	goto	u155_21
  5974     0CF1  2CF3               	goto	u155_20
  5975     0CF2                     u155_21:
  5976     0CF2  2D22               	goto	i1l2029
  5977     0CF3                     u155_20:
  5978     0CF3                     i1l2013:
  5979     0CF3  01F5               	clrf	i1___awmod@counter
  5980     0CF4  0AF5               	incf	i1___awmod@counter,f
  5981     0CF5  2D01               	goto	i1l2019
  5982     0CF6                     i1l2015:
  5983     0CF6  3001               	movlw	1
  5984     0CF7                     u156_25:
  5985     0CF7  1003               	clrc
  5986     0CF8  0DF0               	rlf	i1___awmod@divisor,f
  5987     0CF9  0DF1               	rlf	i1___awmod@divisor+1,f
  5988     0CFA  3EFF               	addlw	-1
  5989     0CFB  1D03               	skipz
  5990     0CFC  2CF7               	goto	u156_25
  5991     0CFD                     i1l2017:
  5992     0CFD  3001               	movlw	1
  5993     0CFE  00F4               	movwf	??i1___awmod
  5994     0CFF  0874               	movf	??i1___awmod,w
  5995     0D00  07F5               	addwf	i1___awmod@counter,f
  5996     0D01                     i1l2019:
  5997     0D01  1FF1               	btfss	i1___awmod@divisor+1,7
  5998     0D02  2D04               	goto	u157_21
  5999     0D03  2D05               	goto	u157_20
  6000     0D04                     u157_21:
  6001     0D04  2CF6               	goto	i1l2015
  6002     0D05                     u157_20:
  6003     0D05                     i1l2021:
  6004     0D05  0871               	movf	i1___awmod@divisor+1,w
  6005     0D06  0273               	subwf	i1___awmod@dividend+1,w
  6006     0D07  1D03               	skipz
  6007     0D08  2D0B               	goto	u158_25
  6008     0D09  0870               	movf	i1___awmod@divisor,w
  6009     0D0A  0272               	subwf	i1___awmod@dividend,w
  6010     0D0B                     u158_25:
  6011     0D0B  1C03               	skipc
  6012     0D0C  2D0E               	goto	u158_21
  6013     0D0D  2D0F               	goto	u158_20
  6014     0D0E                     u158_21:
  6015     0D0E  2D15               	goto	i1l2025
  6016     0D0F                     u158_20:
  6017     0D0F                     i1l2023:
  6018     0D0F  0870               	movf	i1___awmod@divisor,w
  6019     0D10  02F2               	subwf	i1___awmod@dividend,f
  6020     0D11  0871               	movf	i1___awmod@divisor+1,w
  6021     0D12  1C03               	skipc
  6022     0D13  03F3               	decf	i1___awmod@dividend+1,f
  6023     0D14  02F3               	subwf	i1___awmod@dividend+1,f
  6024     0D15                     i1l2025:
  6025     0D15  3001               	movlw	1
  6026     0D16                     u159_25:
  6027     0D16  1003               	clrc
  6028     0D17  0CF1               	rrf	i1___awmod@divisor+1,f
  6029     0D18  0CF0               	rrf	i1___awmod@divisor,f
  6030     0D19  3EFF               	addlw	-1
  6031     0D1A  1D03               	skipz
  6032     0D1B  2D16               	goto	u159_25
  6033     0D1C                     i1l2027:
  6034     0D1C  3001               	movlw	1
  6035     0D1D  02F5               	subwf	i1___awmod@counter,f
  6036     0D1E  1D03               	btfss	3,2
  6037     0D1F  2D21               	goto	u160_21
  6038     0D20  2D22               	goto	u160_20
  6039     0D21                     u160_21:
  6040     0D21  2D05               	goto	i1l2021
  6041     0D22                     u160_20:
  6042     0D22                     i1l2029:
  6043     0D22  0876               	movf	i1___awmod@sign,w
  6044     0D23  1903               	btfsc	3,2
  6045     0D24  2D26               	goto	u161_21
  6046     0D25  2D27               	goto	u161_20
  6047     0D26                     u161_21:
  6048     0D26  2D2C               	goto	i1l2033
  6049     0D27                     u161_20:
  6050     0D27                     i1l2031:
  6051     0D27  09F2               	comf	i1___awmod@dividend,f
  6052     0D28  09F3               	comf	i1___awmod@dividend+1,f
  6053     0D29  0AF2               	incf	i1___awmod@dividend,f
  6054     0D2A  1903               	skipnz
  6055     0D2B  0AF3               	incf	i1___awmod@dividend+1,f
  6056     0D2C                     i1l2033:
  6057     0D2C  0873               	movf	i1___awmod@dividend+1,w
  6058     0D2D  00F1               	movwf	?i1___awmod+1
  6059     0D2E  0872               	movf	i1___awmod@dividend,w
  6060     0D2F  00F0               	movwf	?i1___awmod
  6061     0D30                     i1l503:
  6062     0D30  0008               	return
  6063     0D31                     __end_ofi1___awmod:
  6064                           
  6065                           	psect	text28
  6066     0E4F                     __ptext28:	
  6067 ;; *************** function i1___awdiv *****************
  6068 ;; Defined at:
  6069 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  6070 ;; Parameters:    Size  Location     Type
  6071 ;;  divisor         2    0[COMMON] int 
  6072 ;;  dividend        2    2[COMMON] int 
  6073 ;; Auto vars:     Size  Location     Type
  6074 ;;  quotient        2    7[COMMON] int 
  6075 ;;  sign            1    6[COMMON] unsigned char 
  6076 ;;  counter         1    5[COMMON] unsigned char 
  6077 ;; Return value:  Size  Location     Type
  6078 ;;                  2    0[COMMON] int 
  6079 ;; Registers used:
  6080 ;;		wreg, status,2, status,0
  6081 ;; Tracked objects:
  6082 ;;		On entry : 0/0
  6083 ;;		On exit  : 0/0
  6084 ;;		Unchanged: 0/0
  6085 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6086 ;;      Params:         4       0       0       0       0
  6087 ;;      Locals:         4       0       0       0       0
  6088 ;;      Temps:          1       0       0       0       0
  6089 ;;      Totals:         9       0       0       0       0
  6090 ;;Total ram usage:        9 bytes
  6091 ;; Hardware stack levels used: 1
  6092 ;; This function calls:
  6093 ;;		Nothing
  6094 ;; This function is called by:
  6095 ;;		i1_d2b
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099     0E4F                     i1___awdiv:	
  6100                           ;psect for function i1___awdiv
  6101                           
  6102     0E4F                     i1l1955:	
  6103                           ;incstack = 0
  6104                           ; Regs used in i1___awdiv: [wreg+status,2+status,0]
  6105                           
  6106     0E4F  01F6               	clrf	i1___awdiv@sign
  6107     0E50                     i1l1957:
  6108     0E50  1FF1               	btfss	i1___awdiv@divisor+1,7
  6109     0E51  2E53               	goto	u143_21
  6110     0E52  2E54               	goto	u143_20
  6111     0E53                     u143_21:
  6112     0E53  2E5B               	goto	i1l1963
  6113     0E54                     u143_20:
  6114     0E54                     i1l1959:
  6115     0E54  09F0               	comf	i1___awdiv@divisor,f
  6116     0E55  09F1               	comf	i1___awdiv@divisor+1,f
  6117     0E56  0AF0               	incf	i1___awdiv@divisor,f
  6118     0E57  1903               	skipnz
  6119     0E58  0AF1               	incf	i1___awdiv@divisor+1,f
  6120     0E59                     i1l1961:
  6121     0E59  01F6               	clrf	i1___awdiv@sign
  6122     0E5A  0AF6               	incf	i1___awdiv@sign,f
  6123     0E5B                     i1l1963:
  6124     0E5B  1FF3               	btfss	i1___awdiv@dividend+1,7
  6125     0E5C  2E5E               	goto	u144_21
  6126     0E5D  2E5F               	goto	u144_20
  6127     0E5E                     u144_21:
  6128     0E5E  2E68               	goto	i1l1969
  6129     0E5F                     u144_20:
  6130     0E5F                     i1l1965:
  6131     0E5F  09F2               	comf	i1___awdiv@dividend,f
  6132     0E60  09F3               	comf	i1___awdiv@dividend+1,f
  6133     0E61  0AF2               	incf	i1___awdiv@dividend,f
  6134     0E62  1903               	skipnz
  6135     0E63  0AF3               	incf	i1___awdiv@dividend+1,f
  6136     0E64                     i1l1967:
  6137     0E64  3001               	movlw	1
  6138     0E65  00F4               	movwf	??i1___awdiv
  6139     0E66  0874               	movf	??i1___awdiv,w
  6140     0E67  06F6               	xorwf	i1___awdiv@sign,f
  6141     0E68                     i1l1969:
  6142     0E68  01F7               	clrf	i1___awdiv@quotient
  6143     0E69  01F8               	clrf	i1___awdiv@quotient+1
  6144     0E6A                     i1l1971:
  6145     0E6A  0870               	movf	i1___awdiv@divisor,w
  6146     0E6B  0471               	iorwf	i1___awdiv@divisor+1,w
  6147     0E6C  1903               	btfsc	3,2
  6148     0E6D  2E6F               	goto	u145_21
  6149     0E6E  2E70               	goto	u145_20
  6150     0E6F                     u145_21:
  6151     0E6F  2EA7               	goto	i1l1991
  6152     0E70                     u145_20:
  6153     0E70                     i1l1973:
  6154     0E70  01F5               	clrf	i1___awdiv@counter
  6155     0E71  0AF5               	incf	i1___awdiv@counter,f
  6156     0E72  2E7E               	goto	i1l1979
  6157     0E73                     i1l1975:
  6158     0E73  3001               	movlw	1
  6159     0E74                     u146_25:
  6160     0E74  1003               	clrc
  6161     0E75  0DF0               	rlf	i1___awdiv@divisor,f
  6162     0E76  0DF1               	rlf	i1___awdiv@divisor+1,f
  6163     0E77  3EFF               	addlw	-1
  6164     0E78  1D03               	skipz
  6165     0E79  2E74               	goto	u146_25
  6166     0E7A                     i1l1977:
  6167     0E7A  3001               	movlw	1
  6168     0E7B  00F4               	movwf	??i1___awdiv
  6169     0E7C  0874               	movf	??i1___awdiv,w
  6170     0E7D  07F5               	addwf	i1___awdiv@counter,f
  6171     0E7E                     i1l1979:
  6172     0E7E  1FF1               	btfss	i1___awdiv@divisor+1,7
  6173     0E7F  2E81               	goto	u147_21
  6174     0E80  2E82               	goto	u147_20
  6175     0E81                     u147_21:
  6176     0E81  2E73               	goto	i1l1975
  6177     0E82                     u147_20:
  6178     0E82                     i1l1981:
  6179     0E82  3001               	movlw	1
  6180     0E83                     u148_25:
  6181     0E83  1003               	clrc
  6182     0E84  0DF7               	rlf	i1___awdiv@quotient,f
  6183     0E85  0DF8               	rlf	i1___awdiv@quotient+1,f
  6184     0E86  3EFF               	addlw	-1
  6185     0E87  1D03               	skipz
  6186     0E88  2E83               	goto	u148_25
  6187     0E89  0871               	movf	i1___awdiv@divisor+1,w
  6188     0E8A  0273               	subwf	i1___awdiv@dividend+1,w
  6189     0E8B  1D03               	skipz
  6190     0E8C  2E8F               	goto	u149_25
  6191     0E8D  0870               	movf	i1___awdiv@divisor,w
  6192     0E8E  0272               	subwf	i1___awdiv@dividend,w
  6193     0E8F                     u149_25:
  6194     0E8F  1C03               	skipc
  6195     0E90  2E92               	goto	u149_21
  6196     0E91  2E93               	goto	u149_20
  6197     0E92                     u149_21:
  6198     0E92  2E9A               	goto	i1l1987
  6199     0E93                     u149_20:
  6200     0E93                     i1l1983:
  6201     0E93  0870               	movf	i1___awdiv@divisor,w
  6202     0E94  02F2               	subwf	i1___awdiv@dividend,f
  6203     0E95  0871               	movf	i1___awdiv@divisor+1,w
  6204     0E96  1C03               	skipc
  6205     0E97  03F3               	decf	i1___awdiv@dividend+1,f
  6206     0E98  02F3               	subwf	i1___awdiv@dividend+1,f
  6207     0E99                     i1l1985:
  6208     0E99  1477               	bsf	i1___awdiv@quotient,0
  6209     0E9A                     i1l1987:
  6210     0E9A  3001               	movlw	1
  6211     0E9B                     u150_25:
  6212     0E9B  1003               	clrc
  6213     0E9C  0CF1               	rrf	i1___awdiv@divisor+1,f
  6214     0E9D  0CF0               	rrf	i1___awdiv@divisor,f
  6215     0E9E  3EFF               	addlw	-1
  6216     0E9F  1D03               	skipz
  6217     0EA0  2E9B               	goto	u150_25
  6218     0EA1                     i1l1989:
  6219     0EA1  3001               	movlw	1
  6220     0EA2  02F5               	subwf	i1___awdiv@counter,f
  6221     0EA3  1D03               	btfss	3,2
  6222     0EA4  2EA6               	goto	u151_21
  6223     0EA5  2EA7               	goto	u151_20
  6224     0EA6                     u151_21:
  6225     0EA6  2E82               	goto	i1l1981
  6226     0EA7                     u151_20:
  6227     0EA7                     i1l1991:
  6228     0EA7  0876               	movf	i1___awdiv@sign,w
  6229     0EA8  1903               	btfsc	3,2
  6230     0EA9  2EAB               	goto	u152_21
  6231     0EAA  2EAC               	goto	u152_20
  6232     0EAB                     u152_21:
  6233     0EAB  2EB1               	goto	i1l1995
  6234     0EAC                     u152_20:
  6235     0EAC                     i1l1993:
  6236     0EAC  09F7               	comf	i1___awdiv@quotient,f
  6237     0EAD  09F8               	comf	i1___awdiv@quotient+1,f
  6238     0EAE  0AF7               	incf	i1___awdiv@quotient,f
  6239     0EAF  1903               	skipnz
  6240     0EB0  0AF8               	incf	i1___awdiv@quotient+1,f
  6241     0EB1                     i1l1995:
  6242     0EB1  0878               	movf	i1___awdiv@quotient+1,w
  6243     0EB2  00F1               	movwf	?i1___awdiv+1
  6244     0EB3  0877               	movf	i1___awdiv@quotient,w
  6245     0EB4  00F0               	movwf	?i1___awdiv
  6246     0EB5                     i1l490:
  6247     0EB5  0008               	return
  6248     0EB6                     __end_ofi1___awdiv:
  6249                           
  6250                           	psect	text29
  6251     0A7A                     __ptext29:	
  6252 ;; *************** function i1_I2C_Master_Write *****************
  6253 ;; Defined at:
  6254 ;;		line 65 in file "I2C.c"
  6255 ;; Parameters:    Size  Location     Type
  6256 ;;  d               2   11[COMMON] unsigned int 
  6257 ;; Auto vars:     Size  Location     Type
  6258 ;;		None
  6259 ;; Return value:  Size  Location     Type
  6260 ;;                  1    wreg      void 
  6261 ;; Registers used:
  6262 ;;		wreg, status,2, status,0, pclath, cstack
  6263 ;; Tracked objects:
  6264 ;;		On entry : 0/0
  6265 ;;		On exit  : 0/0
  6266 ;;		Unchanged: 0/0
  6267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6268 ;;      Params:         2       0       0       0       0
  6269 ;;      Locals:         0       0       0       0       0
  6270 ;;      Temps:          0       0       0       0       0
  6271 ;;      Totals:         2       0       0       0       0
  6272 ;;Total ram usage:        2 bytes
  6273 ;; Hardware stack levels used: 1
  6274 ;; Hardware stack levels required when called: 1
  6275 ;; This function calls:
  6276 ;;		i1_I2C_Master_Wait
  6277 ;; This function is called by:
  6278 ;;		_isr
  6279 ;; This function uses a non-reentrant model
  6280 ;;
  6281                           
  6282     0A7A                     i1_I2C_Master_Write:	
  6283                           ;psect for function i1_I2C_Master_Write
  6284                           
  6285     0A7A                     i1l2159:	
  6286                           ;incstack = 0
  6287                           ; Regs used in i1_I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  6288                           
  6289                           
  6290                           ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
      +                          t();
  6291     0A7A  120A  158A  229A  120A  158A  	fcall	i1_I2C_Master_Wait
  6292     0A7F                     i1l2161:
  6293                           
  6294                           ;I2C.c: 68:     SSPBUF = d;
  6295     0A7F  087B               	movf	i1I2C_Master_Write@d,w
  6296     0A80  1283               	bcf	3,5	;RP0=0, select bank0
  6297     0A81  1303               	bcf	3,6	;RP1=0, select bank0
  6298     0A82  0093               	movwf	19	;volatile
  6299     0A83                     i1l47:
  6300     0A83  0008               	return
  6301     0A84                     __end_ofi1_I2C_Master_Write:
  6302                           
  6303                           	psect	text30
  6304     0A56                     __ptext30:	
  6305 ;; *************** function i1_I2C_Master_Stop *****************
  6306 ;; Defined at:
  6307 ;;		line 55 in file "I2C.c"
  6308 ;; Parameters:    Size  Location     Type
  6309 ;;		None
  6310 ;; Auto vars:     Size  Location     Type
  6311 ;;		None
  6312 ;; Return value:  Size  Location     Type
  6313 ;;                  1    wreg      void 
  6314 ;; Registers used:
  6315 ;;		wreg, status,2, status,0, pclath, cstack
  6316 ;; Tracked objects:
  6317 ;;		On entry : 0/0
  6318 ;;		On exit  : 0/0
  6319 ;;		Unchanged: 0/0
  6320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6321 ;;      Params:         0       0       0       0       0
  6322 ;;      Locals:         0       0       0       0       0
  6323 ;;      Temps:          0       0       0       0       0
  6324 ;;      Totals:         0       0       0       0       0
  6325 ;;Total ram usage:        0 bytes
  6326 ;; Hardware stack levels used: 1
  6327 ;; Hardware stack levels required when called: 1
  6328 ;; This function calls:
  6329 ;;		i1_I2C_Master_Wait
  6330 ;; This function is called by:
  6331 ;;		_isr
  6332 ;; This function uses a non-reentrant model
  6333 ;;
  6334                           
  6335     0A56                     i1_I2C_Master_Stop:	
  6336                           ;psect for function i1_I2C_Master_Stop
  6337                           
  6338     0A56                     i1l2155:	
  6339                           ;incstack = 0
  6340                           ; Regs used in i1_I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  6341                           
  6342                           
  6343                           ;I2C.c: 57:     I2C_Master_Wait();
  6344     0A56  120A  158A  229A  120A  158A  	fcall	i1_I2C_Master_Wait
  6345     0A5B                     i1l2157:
  6346                           
  6347                           ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  6348     0A5B  1683               	bsf	3,5	;RP0=1, select bank1
  6349     0A5C  1303               	bcf	3,6	;RP1=0, select bank1
  6350     0A5D  1511               	bsf	17,2	;volatile
  6351     0A5E                     i1l44:
  6352     0A5E  0008               	return
  6353     0A5F                     __end_ofi1_I2C_Master_Stop:
  6354                           
  6355                           	psect	text31
  6356     0A4D                     __ptext31:	
  6357 ;; *************** function i1_I2C_Master_Start *****************
  6358 ;; Defined at:
  6359 ;;		line 39 in file "I2C.c"
  6360 ;; Parameters:    Size  Location     Type
  6361 ;;		None
  6362 ;; Auto vars:     Size  Location     Type
  6363 ;;		None
  6364 ;; Return value:  Size  Location     Type
  6365 ;;                  1    wreg      void 
  6366 ;; Registers used:
  6367 ;;		wreg, status,2, status,0, pclath, cstack
  6368 ;; Tracked objects:
  6369 ;;		On entry : 0/0
  6370 ;;		On exit  : 0/0
  6371 ;;		Unchanged: 0/0
  6372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6373 ;;      Params:         0       0       0       0       0
  6374 ;;      Locals:         0       0       0       0       0
  6375 ;;      Temps:          0       0       0       0       0
  6376 ;;      Totals:         0       0       0       0       0
  6377 ;;Total ram usage:        0 bytes
  6378 ;; Hardware stack levels used: 1
  6379 ;; Hardware stack levels required when called: 1
  6380 ;; This function calls:
  6381 ;;		i1_I2C_Master_Wait
  6382 ;; This function is called by:
  6383 ;;		_isr
  6384 ;; This function uses a non-reentrant model
  6385 ;;
  6386                           
  6387     0A4D                     i1_I2C_Master_Start:	
  6388                           ;psect for function i1_I2C_Master_Start
  6389                           
  6390     0A4D                     i1l2151:	
  6391                           ;incstack = 0
  6392                           ; Regs used in i1_I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  6393                           
  6394                           
  6395                           ;I2C.c: 41:     I2C_Master_Wait();
  6396     0A4D  120A  158A  229A  120A  158A  	fcall	i1_I2C_Master_Wait
  6397     0A52                     i1l2153:
  6398                           
  6399                           ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  6400     0A52  1683               	bsf	3,5	;RP0=1, select bank1
  6401     0A53  1303               	bcf	3,6	;RP1=0, select bank1
  6402     0A54  1411               	bsf	17,0	;volatile
  6403     0A55                     i1l38:
  6404     0A55  0008               	return
  6405     0A56                     __end_ofi1_I2C_Master_Start:
  6406                           
  6407                           	psect	text32
  6408     0A9A                     __ptext32:	
  6409 ;; *************** function i1_I2C_Master_Wait *****************
  6410 ;; Defined at:
  6411 ;;		line 32 in file "I2C.c"
  6412 ;; Parameters:    Size  Location     Type
  6413 ;;		None
  6414 ;; Auto vars:     Size  Location     Type
  6415 ;;		None
  6416 ;; Return value:  Size  Location     Type
  6417 ;;                  1    wreg      void 
  6418 ;; Registers used:
  6419 ;;		wreg, status,2
  6420 ;; Tracked objects:
  6421 ;;		On entry : 0/0
  6422 ;;		On exit  : 0/0
  6423 ;;		Unchanged: 0/0
  6424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6425 ;;      Params:         0       0       0       0       0
  6426 ;;      Locals:         0       0       0       0       0
  6427 ;;      Temps:          0       0       0       0       0
  6428 ;;      Totals:         0       0       0       0       0
  6429 ;;Total ram usage:        0 bytes
  6430 ;; Hardware stack levels used: 1
  6431 ;; This function calls:
  6432 ;;		Nothing
  6433 ;; This function is called by:
  6434 ;;		i1_I2C_Master_Start
  6435 ;;		i1_I2C_Master_Stop
  6436 ;;		i1_I2C_Master_Write
  6437 ;; This function uses a non-reentrant model
  6438 ;;
  6439                           
  6440     0A9A                     i1_I2C_Master_Wait:	
  6441                           ;psect for function i1_I2C_Master_Wait
  6442                           
  6443     0A9A                     i1l1937:	
  6444                           ;incstack = 0
  6445                           ; Regs used in i1_I2C_Master_Wait: [wreg+status,2]
  6446                           
  6447     0A9A                     i1l32:	
  6448                           ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  6449                           
  6450     0A9A  1683               	bsf	3,5	;RP0=1, select bank1
  6451     0A9B  1303               	bcf	3,6	;RP1=0, select bank1
  6452     0A9C  1914               	btfsc	20,2	;volatile
  6453     0A9D  2A9F               	goto	u137_21
  6454     0A9E  2AA0               	goto	u137_20
  6455     0A9F                     u137_21:
  6456     0A9F  2A9A               	goto	i1l32
  6457     0AA0                     u137_20:
  6458     0AA0                     i1l1939:
  6459     0AA0  0811               	movf	17,w	;volatile
  6460     0AA1  391F               	andlw	31
  6461     0AA2  1D03               	btfss	3,2
  6462     0AA3  2AA5               	goto	u138_21
  6463     0AA4  2AA6               	goto	u138_20
  6464     0AA5                     u138_21:
  6465     0AA5  2A9A               	goto	i1l32
  6466     0AA6                     u138_20:
  6467     0AA6                     i1l35:
  6468     0AA6  0008               	return
  6469     0AA7                     __end_ofi1_I2C_Master_Wait:
  6470     007E                     btemp	set	126	;btemp
  6471     007E                     wtemp0	set	126
  6472                           
  6473                           	psect	idloc
  6474                           
  6475                           ;Config register IDLOC0 @ 0x2000
  6476                           ;	unspecified, using default values
  6477     2000                     	org	8192
  6478     2000  3FFF               	dw	16383
  6479                           
  6480                           ;Config register IDLOC1 @ 0x2001
  6481                           ;	unspecified, using default values
  6482     2001                     	org	8193
  6483     2001  3FFF               	dw	16383
  6484                           
  6485                           ;Config register IDLOC2 @ 0x2002
  6486                           ;	unspecified, using default values
  6487     2002                     	org	8194
  6488     2002  3FFF               	dw	16383
  6489                           
  6490                           ;Config register IDLOC3 @ 0x2003
  6491                           ;	unspecified, using default values
  6492     2003                     	org	8195
  6493     2003  3FFF               	dw	16383
  6494                           
  6495                           	psect	config
  6496                           
  6497                           ;Config register CONFIG1 @ 0x2007
  6498                           ;	Oscillator Selection bits
  6499                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  6500                           ;	Watchdog Timer Enable bit
  6501                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  6502                           ;	Power-up Timer Enable bit
  6503                           ;	PWRTE = OFF, PWRT disabled
  6504                           ;	RE3/MCLR pin function select bit
  6505                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  6506                           ;	Code Protection bit
  6507                           ;	CP = OFF, Program memory code protection is disabled
  6508                           ;	Data Code Protection bit
  6509                           ;	CPD = OFF, Data memory code protection is disabled
  6510                           ;	Brown Out Reset Selection bits
  6511                           ;	BOREN = OFF, BOR disabled
  6512                           ;	Internal External Switchover bit
  6513                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  6514                           ;	Fail-Safe Clock Monitor Enabled bit
  6515                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  6516                           ;	Low Voltage Programming Enable bit
  6517                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  6518                           ;	In-Circuit Debugger Mode bit
  6519                           ;	DEBUG = 0x1, unprogramme  6520     2007                     	org	8199
  6521     2007  20D4               	dw	8404
  6522                           
  6523                           ;Config register CONFIG2 @ 0x2008
  6524                           ;	Brown-out Reset Selection bit
  6525                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  6526                           ;	Flash Program Memory Self Write Enable bits
  6527                           ;	WRT = OFF, Write protection off
  6528     2008                     	org	8200
  6529     2008  3FFF               	dw	16383

Data Sizes:
    Strings     16
    Constant    0
    Data        12
    BSS         13
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     37      62
    BANK1            80      8       8
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 7
		 -> STR_4(CODE[7]), STR_3(CODE[5]), STR_2(CODE[4]), STR_1(CODE[5]), 
		 -> buffer3(BANK0[4]), buffer2(BANK0[4]), buffer(BANK0[4]), 

    uint8ToString@str	PTR unsigned char  size(1) Largest target is 4
		 -> buffer3(BANK0[4]), buffer2(BANK0[4]), buffer(BANK0[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1_I2C_Master_Write
    i1_d2b->i1___awdiv
    i1_I2C_Master_Write->i1_d2b

Critical Paths under _main in BANK0

    _uint8ToString->___awdiv
    _setup->_I2C_Master_Init
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port
    _I2C_Master_Init->___lldiv
    _d2b->___awdiv
    _b2d->_I2C_Master_Read
    _b2d->___wmul
    _I2C_Master_Write->_d2b

Critical Paths under _isr in BANK0

    _isr->i1_d2b
    i1_I2C_Master_Write->i1_d2b

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0   24300
                                             34 BANK0      3     3      0
                                              0 BANK1      8     8      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            ___awdiv
                            ___awmod
                                _b2d
                                _d2b
                              _setup
                      _uint8ToString
 ---------------------------------------------------------------------------------
 (1) _uint8ToString                                       10     9      1    4048
                                             21 BANK0     10     9      1
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    3242
                    _I2C_Master_Init
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                           _ioc_init
 ---------------------------------------------------------------------------------
 (2) _ioc_init                                             1     1      0      93
                                             12 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     7     5      2    1014
                                             17 BANK0      7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       4     4      0     254
                                             13 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       6     5      1     905
                                             16 BANK0      6     5      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Init                                             2     2      0     279
                                             16 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     155
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              3     3      0     155
                                             13 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0     124
                                             12 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                             26 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                             12 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _d2b                                                  8     6      2    4718
                                             21 BANK0      8     6      2
                            ___awdiv
                            ___awmod
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1513
                                             12 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1525
                                             12 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (1) _b2d                                                  4     2      2    1098
                                             18 BANK0      4     2      2
                    _I2C_Master_Read (ARG)
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     496
                                             12 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2    4861
                                             29 BANK0      2     0      2
                    _I2C_Master_Wait
                                _d2b (ARG)
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     695
                                             12 BANK0      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  6     6      0    1836
                                              6 BANK0      6     6      0
                 i1_I2C_Master_Start
                  i1_I2C_Master_Stop
                 i1_I2C_Master_Write
                              i1_d2b
 ---------------------------------------------------------------------------------
 (6) i1_d2b                                                8     6      2    1190
                                              9 COMMON     2     0      2
                                              0 BANK0      6     6      0
                          i1___awdiv
                          i1___awmod
                           i1___wmul
 ---------------------------------------------------------------------------------
 (7) i1___wmul                                             6     2      4     144
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (7) i1___awmod                                            7     3      4     348
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (7) i1___awdiv                                            9     5      4     352
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (6) i1_I2C_Master_Write                                   2     0      2     646
                                             11 COMMON     2     0      2
                  i1_I2C_Master_Wait
                              i1_d2b (ARG)
 ---------------------------------------------------------------------------------
 (6) i1_I2C_Master_Stop                                    0     0      0       0
                  i1_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) i1_I2C_Master_Start                                   0     0      0       0
                  i1_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (7) i1_I2C_Master_Wait                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_RepeatedStart
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
     _d2b (ARG)
       ___awdiv
       ___awmod
       ___wmul
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
   ___awdiv
   ___awmod
   _b2d
     _I2C_Master_Read (ARG)
     ___wmul (ARG)
   _d2b
   _setup
     _I2C_Master_Init
       ___lldiv
     _Lcd_Clear
     _Lcd_Init
       _Lcd_Cmd
       _Lcd_Port
     _Lcd_Set_Cursor
     _Lcd_Write_Char
     _Lcd_Write_String
     _ioc_init
   _uint8ToString
     ___awdiv
     ___awmod

 _isr (ROOT)
   i1_I2C_Master_Start
     i1_I2C_Master_Wait
   i1_I2C_Master_Stop
     i1_I2C_Master_Wait
   i1_I2C_Master_Write
     i1_I2C_Master_Wait
     i1_d2b (ARG)
       i1___awdiv
       i1___awmod
       i1___wmul
   i1_d2b

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      8       8       7       10.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     25      3E       5       77.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      53      12        0.0%
ABS                  0      0      53       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Fri Aug 11 00:08:59 2023

                               pc 0002                   ??_uint8ToString 0036                                l32 0AA7  
                              l41 0A67                                l50 0BC8                                l35 0AB3  
                              l51 0BCB                                l52 0BD2                                l44 0A79  
                              l29 0C45                                l38 0A70                                l47 0A8D  
                    ___awdiv@sign 0032                                fsr 0004               ___wmul@multiplicand 002E  
                i1___wmul@product 0074                               l200 0B1C                               l201 0B1D  
                             l202 0B23                               l203 0B24                               l204 0B2A  
                             l212 0AC0                               l221 0E4E                               l206 0B2B  
                             l230 0C8B                               l224 0C0B                               l209 0AEF  
                             l218 0CD7                               l162 0FFF                               l171 0DEC  
                             l251 0B0B                               l165 0BA0                               l503 0D8B  
                             l175 07A0                               l337 0B5F                               l339 0B77  
                             l373 0F1D                               l198 0B15                               l199 0B16  
                             l490 0F86                               _GIE 005F                               _RD3 0043  
                             _RD4 0044                               _RD5 0045                               _RD6 0046  
                             _RD7 0047                               _b2d 0B78                               _d2b 0D8C  
                             _min 0054                               _sec 0052                               _isr 056E  
                             fsr0 0004                               indf 0000                      ___awmod@sign 0032  
                            ?_b2d 0032                              ?_d2b 0035                              l3001 0235  
                            l3011 026F                              l3003 023F                              l3101 0497  
                            l3021 029A                              l3013 0274                              l3005 0244  
                            l3111 04CF                              l3103 04AC                              l3031 02D5  
                            l3023 02B5                              l3015 027F                              l3007 024F  
                            l3121 04FA                              l3113 04D8                              l3105 04B1  
                            l3041 030A                              l3033 02DA                              l3025 02BA  
                            l3017 028A                              l3009 026A                              l3131 052C  
                            l3123 0504                              l3115 04DE                              l3107 04BB  
                            l3051 034B                              l3043 0315                              l3035 02E5  
                            l3027 02BF                              l3019 028F                              l3141 0553  
                            l3133 0532                              l3125 050F                              l3117 04E9  
                            l3109 04C6                              l3061 0370                              l3053 0350  
                            l3045 0320                              l3037 0300                              l3029 02CA  
                            l3143 055C                              l3135 053B                              l3127 051A  
                            l3119 04EF                              l3071 03AB                              l3063 037B  
                            l3055 0355                              l3047 0325                              l3039 0305  
                            l2601 0AE1                              l3137 0544                              l3129 0523  
                            l3081 03E6                              l3073 03B6                              l3065 0396  
                            l3057 0360                              l3049 0330                              l2611 0ED8  
                            l2603 0AEC                              l3139 054A                              l3091 042E  
                            l3083 03F0                              l3075 03BB                              l3067 039B  
                            l3059 036B                              l2701 0B66                              l2621 0F06  
                            l2613 0EDC                              l2605 0EB6                              l3093 0443  
                            l3085 03FA                              l3077 03C6                              l3069 03A0  
                            l2703 0B6D                              l2711 0F21                              l2623 0F0F  
                            l2615 0EE5                              l2607 0EC8                              l2631 0C10  
                            l3095 0458                              l3087 0404                              l3079 03E1  
                            l2641 0AA7                              l2801 0A76                              l2705 0B73  
                            l2721 0F35                              l2713 0F25                              l2617 0EF7  
                            l2609 0ECB                              l2625 0F15                              l2633 0C13  
                            l3097 046D                              l3089 0419                              l2643 0AAD  
                            l2811 0BAE                              l2803 0A84                              l2731 0F4B  
                            l2723 0F39                              l2715 0F2A                              l2619 0F05  
                            l2635 0C42                              l2571 0B21                              l2651 0CA1  
                            l3099 0482                              l2813 0BB7                              l2805 0A89  
                            l2741 0F6B                              l2733 0F4F                              l2725 0F3B  
                            l2717 0F2C                              l2709 0F1E                              l2637 0C43  
                            l2629 0C0C                              l2573 0B28                              l2565 0B0F  
                            l2645 0AB4                              l2661 0CC6                              l2653 0CA4  
                            l2581 0BEB                              l2901 0792                              l2815 0BBC  
                            l2807 0BA1                              l2743 0F72                              l2735 0F53  
                            l2727 0F41                              l2719 0F30                              l2831 0DC6  
                            l2823 0D8C                              l2639 0C44                              l2567 0B13  
                            l2663 0CC9                              l2655 0CAA                              l2647 0C8F  
                            l2591 0C01                              l2583 0BEE                              l2575 0BD6  
                            l2671 0C67                              l2903 0796                              l2911 0047  
                            l2817 0BC4                              l2809 0BA6                              l2737 0F64  
                            l2729 0F44                              l2745 0F78                              l2761 0D3F  
                            l2753 0D31                              l2833 0DD9                              l2825 0D90  
                            l2569 0B1A                              l2665 0CCF                              l2649 0C94  
                            l2657 0CB3                              l2593 0C08                              l2585 0BF5  
                            l2577 0BDC                              l2673 0C6F                              l2681 0B09  
                            l2841 0F8D                              l2921 0080                              l2913 0051  
                            l2905 0032                              l2819 0BCC                              l2747 0F7D  
                            l2739 0F6A                              l2771 0D58                              l2763 0D43  
                            l2755 0D34                              l2835 0DE6                              l2827 0D95  
                            l2595 0AD7                              l2691 0E0D                              l2659 0CB9  
                            l2587 0BF8                              l2579 0BDD                              l2667 0C46  
                            l2683 0B0A                              l2675 0AF3                              l2851 0FA4  
                            l2843 0F97                              l2931 00C0                              l2923 008B  
                            l2915 0067                              l2907 0037                              l2749 0F82  
                            l2781 0D77                              l2773 0D5C                              l2765 0D48  
                            l2757 0D38                              l2829 0DBF                              l2597 0AD8  
                            l2693 0E13                              l2685 0DED                              l2589 0BFE  
                            l2669 0C4B                              l2677 0B03                              l2861 0FDE  
                            l2853 0FA5                              l2845 0F9D                              l2941 00F6  
                            l2933 00C5                              l2925 0096                              l2917 006C  
                            l2909 003C                              l2791 0A68                              l2695 0B51  
                            l2775 0D60                              l2767 0D4E                              l2783 0D7D  
                            l2759 0D3D                              l2599 0ADE                              l2687 0DF3  
                            l2679 0B06                              l2863 0FF3                              l2855 0FC7  
                            l2847 0FA0                              l2839 0F87                              l2871 071D  
                            l2951 0136                              l2943 0105                              l2935 00D0  
                            l2927 00AC                              l2919 007B                              l2793 0A6D  
                            l2697 0B55                              l2785 0D82                              l2777 0D6A  
                            l2769 0D51                              l2689 0DFD                              l2865 0FF9  
                            l2857 0FD2                              l2849 0FA3                              l2873 071F  
                            l2961 0165                              l2953 013B                              l2945 010A  
                            l2937 00DB                              l2929 00B1                              l2795 0A5F  
                            l2699 0B59                              l2867 0B78                              l2787 0D87  
                            l2779 0D70                              l2859 0FD8                              l2891 0766  
                            l2883 072E                              l2875 0720                              l2971 019B  
                            l2963 017B                              l2955 014A                              l2947 0115  
                            l2939 00F1                              l2797 0A64                              l2893 076D  
                            l2885 0749                              l2877 0725                              l2981 01D5  
                            l2973 01B1                              l2965 0180                              l2957 014F  
                            l2949 0120                              l2799 0A71                              l2895 076E  
                            l2887 074D                              l2879 072A                              l2991 0203  
                            l2983 01DF                              l2975 01B6                              l2967 0185  
                            l2959 015A                              l2897 0772                              l2889 0761  
                            l2993 0211                              l2985 01E4                              l2977 01C5  
                            l2969 0190                              l2899 078E                              l2995 0216  
                            l2987 01F3                              l2979 01CA                              l2997 0225  
                            l2989 01F8                              l2999 022A                              ?_isr 0070  
                            STR_1 0817                              STR_2 081C                              STR_3 0817  
                            STR_4 0810                              u2000 0CB9                              u2001 0CB8  
                            u2100 0F30                              u2020 0C55                              u2101 0F2F  
                            u2110 0F41                              u2030 0C79                              u2111 0F40  
                            u2015 0CBF                              u2200 0D43                              u2040 0C8B  
                            u2201 0D42                              u2041 0C8A                              u2050 0B59  
                            u2130 0F53                              u2210 0D4E                              u2051 0B58  
                            u2131 0F52                              u2211 0D4D                              u2300 0DE6  
                            _IOCB 0096                              u2125 0F45                              u2301 0DE5  
                            u2150 0F64                              u2230 0D60                              u2310 0725  
                            u2151 0F63                              u2231 0D5F                              u2311 0724  
                            u2080 0B73                              u2240 0D6A                              u2320 0766  
                            u2081 0B72                              u2065 0B60                              u2145 0F54  
                            u2241 0D69                              u2225 0D52                              u2305 0DE2  
                            u2321 0765                              u2170 0F78                              u2090 0F25  
                            u2330 07A0                              u2075 0B67                              u2171 0F77  
                            u2155 0F60                              u2091 0F24                              u2331 079F  
                            u2180 0F7D                              u2260 0D7D                              u2181 0F7C  
                            u2165 0F6C                              u2261 0D7C                              u2245 0D66  
                            u2270 0D82                              u2190 0D38                              u2271 0D81  
                            u2255 0D71                              u2191 0D37                              u2407 021E  
                            u2280 0BC4                              u2281 0BC3                              u2417 0564  
                            u2427 0BF2                              u2347 0074                              u1900 0EDC  
                            u1901 0EDB                              u2437 0C05                              u2357 00B9  
                            u1830 0B13                              u2295 0DC0                              u1831 0B12  
                            u2447 0DF9                              u2367 00FE                              u1920 0EF7  
                            u1840 0B1A                              u1921 0EF6                              u1841 0B19  
                            u2457 0E09                              u2377 0143                              u1850 0B21  
                            u1915 0EDE                              u1851 0B20                              u2467 0E19  
                            u2387 01BE                              u1940 0F15                              u1860 0B28  
                            u1941 0F14                              u1925 0EF3                              u1861 0B27  
                            u2477 0AE7                              u2397 01EC                              u1950 0C23  
                            u1935 0F07                              u1960 0AAD                              u1880 0EC8  
                            u1961 0AAC                              u1881 0EC7                              u1970 0AB3  
                            u1971 0AB2                              u1955 0C1E                              u1875 0BE0  
                            _PEIE 005E                              u1980 0C94                              u1981 0C93  
                            u1895 0ECD                              i1l32 0A9A                              i1l35 0AA6  
                            u1995 0C9A                              i1l44 0A5E                              i1l38 0A55  
                            i1l47 0A83                              _WPUB 0095                 ?_Lcd_Write_String 0031  
                            _date 0058  __end_of_I2C_Master_RepeatedStart 0A68                              _main 0032  
                            _hour 0056                              _year 005C                              btemp 007E  
                            start 0010                ??_Lcd_Write_String 0033                   __end_of_Lcd_Cmd 0AF0  
                           ??_b2d 0034                             ??_d2b 0037                             ??_isr 0026  
                ?_I2C_Master_Init 003A                  ?_I2C_Master_Read 002C                  ?_I2C_Master_Wait 0070  
                ?_I2C_Master_Stop 0070                             ?_main 0070                    i1___awdiv@sign 0076  
                 __end_of___awdiv 0F87                   __end_of___awmod 0D8C                             _ANSEL 0188  
                 __end_of___lldiv 0F1E                   ___awdiv@divisor 002C                             i1l143 069F  
                           i1l135 05CD                             i1l151 070F                             i1l171 07FD  
                           i1l139 0635                             i1l148 0703                             i1l503 0D30  
                           i1l337 0B38                             i1l339 0B50                             i1l490 0EB5  
                 ___awdiv@counter 0031                             i1_d2b 07A1                             _PORTA 0005  
                           _PORTB 0006                             _PORTD 0008                             _TRISA 0085  
                           _TRISB 0086                             _TRISD 0088                             _SSPIE 0463  
                           _SSPIF 0063                    i1___awmod@sign 0076                             _month 005A  
                           _setup 0F87                             pclath 000A                  __end_ofi1___wmul 0B51  
                           status 0003               i1___wmul@multiplier 0070                             wtemp0 007E  
                     ioc_init@pin 002C                  __end_of_Lcd_Init 0E4F                  __end_of_Lcd_Port 0B2C  
                 __initialization 0013                      __end_of_main 056E                            ??_main 0042  
                          ?i1_d2b 0079                 ?_I2C_Master_Start 0070                 ?_I2C_Master_Write 003D  
              ??_I2C_Master_Start 002C                ??_I2C_Master_Write 003F                  ___awdiv@dividend 002E  
                          ?_setup 0070                            _ANSELH 0189                            i1l2001 0CD9  
                          i1l2011 0CED                            i1l2003 0CDD                            i1l2021 0D05  
                          i1l2013 0CF3                            i1l2005 0CE2                            i1l2031 0D27  
                          i1l2023 0D0F                            i1l2015 0CF6                            i1l2007 0CE4  
                          i1l2033 0D2C                            i1l2025 0D15                            i1l2017 0CFD  
                          i1l2009 0CE8                            i1l2201 05D1                            i1l2027 0D1C  
                          i1l2019 0D01                            i1l2029 0D22                            i1l2301 06F3  
                          i1l2221 05F1                            i1l2151 0A4D                            i1l2303 0707  
                          i1l2231 0620                            i1l2223 05F5                            i1l2215 05D8  
                          i1l2153 0A52                            i1l2161 0A7F                            i1l2233 0625  
                          i1l2225 05FA                            i1l2217 05DE                            d2b@bcd 0039  
                          i1l2155 0A56                            i1l2171 07D9                            i1l2163 07A1  
                          i1l2251 0646                            i1l2235 0639                            i1l2227 0603  
                          i1l2219 05E4                            i1l2157 0A5B                            i1l2173 07EA  
                          i1l2165 07A5                            i1l2317 070E                            i1l2261 066D  
                          i1l2253 064C                            i1l2229 060C                            i1l2181 0572  
                          i1l2159 0A7A                            i1l2175 07F7                            i1l2167 07AA  
                          i1l2271 06A9                            i1l2263 0676                            i1l2255 0659  
                          i1l2191 0592                            i1l2183 0576                            i1l2169 07D2  
                          i1l2265 068A                            i1l2257 065F                            i1l2249 0640  
                          i1l2193 059B                            i1l2185 057C                            i1l2291 06C3  
                          i1l2267 068F                            i1l2259 0664                            i1l2195 05A4  
                          i1l2187 0589                            i1l2179 056E                            i1l2293 06C8  
                          i1l2269 06A3                            i1l2197 05B8                            i1l2189 058D  
                          i1l2295 06D1                            i1l2287 06B7                            i1l2199 05BD  
                          i1l2297 06DA                            i1l2289 06BD                            i1l2299 06EE  
                          i1l1941 0B2C                            i1l1951 0B4C                            i1l1943 0B2E  
                          i1l1937 0A9A                            i1l1961 0E59                            i1l1945 0B32  
                          i1l1939 0AA0                            i1l1971 0E6A                            i1l1963 0E5B  
                          i1l1955 0E4F                            i1l1947 0B3F                            i1l1981 0E82  
                          i1l1973 0E70                            i1l1965 0E5F                            i1l1957 0E50  
                          i1l1949 0B46                            i1l1983 0E93                            i1l1975 0E73  
                          i1l1991 0EA7                            i1l1967 0E64                            i1l1959 0E54  
                          i1l1993 0EAC                            i1l1985 0E99                            i1l1977 0E7A  
                          i1l1969 0E68                            i1l1995 0EB1                            i1l1987 0E9A  
                          i1l1979 0E7E                            i1l1989 0EA1                            u140_25 0B39  
                          i1l1999 0CD8                            u141_25 0B40                            u142_20 0B4C  
                          u142_21 0B4B                            u150_25 0E9B                            u151_20 0EA7  
                          u143_20 0E54                            u151_21 0EA6                            u143_21 0E53  
                          u152_20 0EAC                            u144_20 0E5F                            u160_20 0D22  
                          u152_21 0EAB                            u144_21 0E5E                            u160_21 0D21  
                          u137_20 0AA0                            u145_20 0E70                            u161_20 0D27  
                          u153_20 0CDD                            u137_21 0A9F                            u145_21 0E6F  
                          u161_21 0D26                            u153_21 0CDC                            u138_20 0AA6  
                          u154_20 0CE8                            u170_20 0572                            u138_21 0AA5  
                          u154_21 0CE7                            u170_21 0571                            u146_25 0E74  
                          u250_27 0697                            u147_20 0E82                            u155_20 0CF3  
                          u139_20 0B32                            u171_20 0576                            u147_21 0E81  
                          u155_21 0CF2                            u139_21 0B31                            u171_21 0575  
                          u251_27 06FB                            u180_20 06B6                            u172_20 0589  
                          u180_21 06B5                            u172_21 0588                            u148_25 0E83  
                          u156_25 0CF7                            u180_25 06B2                            u172_25 0585  
                          u149_20 0E93                            u157_20 0D05                            u181_20 06BD  
                          u173_20 05D1                            u149_21 0E92                            u157_21 0D04  
                          u181_21 06BC                            u173_21 05D0                            u149_25 0E8F  
                          u158_20 0D0F                            u182_20 0707                            u174_20 05DE  
                          u158_21 0D0E                            u182_21 0706                            u174_21 05DD  
                          u158_25 0D0B                            u175_20 05F1                            u175_21 05F0  
                          u159_25 0D16                            u175_25 05ED                            u176_20 0639  
                          u176_21 0638                            u168_25 07D3                            u248_27 05C5  
                          u169_20 07F7                            u177_20 0646                            u169_21 07F6  
                          u177_21 0645                            u169_25 07F3                            u249_27 062D  
                          u178_20 0659                            u178_21 0658                            u178_25 0655  
                          u179_20 06A3                            u179_21 06A2                         ??_Lcd_Cmd 002D  
                          _SSPADD 0093                            _TRISC3 043B                            _TRISC4 043C  
                          _SSPCON 0014                            _SSPBUF 0013          _I2C_Master_RepeatedStart 0A5F  
              uint8ToString@right 003D                     d2b@to_convert 0035                            ___wmul 0B51  
                       ??___awdiv 0030                         ??___awmod 0030                  __end_of_ioc_init 0B0C  
                       ??___lldiv 0034                            _buffer 004E                     d2b@multiplier 003B  
                ___awdiv@quotient 0033                   ___awmod@divisor 002C                   ___awmod@counter 0031  
               __end_ofi1___awdiv 0EB6                 __end_ofi1___awmod 0D31                            saved_w 007E  
                 Lcd_Set_Cursor@a 0032                   Lcd_Set_Cursor@b 0030                   Lcd_Set_Cursor@y 0034  
                 Lcd_Set_Cursor@z 0033           __end_of__initialization 002E                 __end_of_Lcd_Clear 0AC1  
                   __end_ofi1_d2b 07FE                    __pcstackCOMMON 0070                      __pidataBANK0 0A8E  
                   __end_of_setup 1000                         ?i1___wmul 0070                    _Lcd_Set_Cursor 0C8C  
                         ??i1_d2b 007B                    _OPTION_REGbits 0081                  uint8ToString@num 0039  
                uint8ToString@str 0035                         ?_Lcd_Init 0070                         ?_Lcd_Port 0070  
                         ??_setup 0042                        __pbssBANK0 0045               i1I2C_Master_Write@d 007B  
                      __pmaintext 0032                           ?___wmul 002C                        __pintentry 0004  
          __end_of_Lcd_Set_Cursor 0CD8             __end_of_uint8ToString 07A1                   i1d2b@to_convert 0079  
                      ??i1___wmul 0074                i1___awdiv@dividend 0072                   i1d2b@multiplier 0024  
                      ??_Lcd_Init 0030                        ??_Lcd_Port 002C                           _SSPCON2 0091  
                         _SSPSTAT 0094                        __stringtab 0800                         ?_ioc_init 0070  
                  _Lcd_Write_Char 0BD3                           _Lcd_Cmd 0AD4                i1___awdiv@quotient 0077  
                         ___awdiv 0F1E                           ___awmod 0D31                           ___lldiv 0EB6  
                 ?_Lcd_Set_Cursor 0030                           __ptext1 071A                           __ptext2 0F87  
                         __ptext3 0AF0                           __ptext4 0C46                           __ptext5 0BD3  
                         __ptext6 0C8C                           __ptext7 0DED                           __ptext8 0AB4  
                         __ptext9 0AD4                           _buffer2 004A                           _buffer3 0046  
               i1_I2C_Master_Wait 0A9A                 i1_I2C_Master_Stop 0A56                ?i1_I2C_Master_Wait 0070  
                ___awmod@dividend 002E                ?i1_I2C_Master_Stop 0070            __end_of_Lcd_Write_Char 0C0C  
            end_of_initialization 002E               ??i1_I2C_Master_Wait 0070               ??i1_I2C_Master_Stop 0070  
      ??_I2C_Master_RepeatedStart 002C                        ??_ioc_init 002C                   ___lldiv@divisor 002C  
                 ___lldiv@counter 0039                  I2C_Master_Init@c 003A                  I2C_Master_Read@a 002C  
                       Lcd_Port@a 002C         __end_ofi1_I2C_Master_Wait 0AA7             i1___wmul@multiplicand 0072  
       __end_ofi1_I2C_Master_Stop 0A5F                         _PORTBbits 0006                         _PORTDbits 0008  
                       _TRISCbits 0087                         i1___awdiv 0E4F                         i1___awmod 0CD8  
                 ?_Lcd_Write_Char 0070                 Lcd_Write_String@a 0031                 Lcd_Write_String@i 0036  
                      main@month0 00A4                        main@month1 00A5                         _Lcd_Clear 0AB4  
                  __end_of___wmul 0B78                  _Lcd_Write_String 0C46        __end_ofi1_I2C_Master_Start 0A56  
      __end_ofi1_I2C_Master_Write 0A84               start_initialization 0013                       __end_of_b2d 0BA1  
                     __end_of_d2b 0DED                       __end_of_isr 071A                        ?i1___awdiv 0070  
                      ?i1___awmod 0070                 ??_I2C_Master_Init 003E                 ??_I2C_Master_Read 002E  
               ??_I2C_Master_Wait 002C                 ??_I2C_Master_Stop 002C                 uint8ToString@left 003C  
               uint8ToString@temp 003E                        ?_Lcd_Clear 0070                          ??___wmul 0030  
                      init_fetch0 0AC1             uint8ToString@tempChar 003A                       __pdataBANK0 0052  
              i1___awmod@dividend 0072                   Lcd_Write_Char@a 0030                   Lcd_Write_Char@y 002F  
                       ___latbits 0002                     __pcstackBANK0 0020                     __pcstackBANK1 00A0  
                        ?_Lcd_Cmd 0070                  _I2C_Master_Start 0A68                  _I2C_Master_Write 0A84  
                ??_Lcd_Set_Cursor 0031                          ?___awdiv 002C                          ?___awmod 002C  
                        ?___lldiv 002C                 i1___awdiv@divisor 0070                 i1___awdiv@counter 0075  
                       __pstrings 0800                       ??i1___awdiv 0074                       ??i1___awmod 0074  
               interrupt_function 0004                    ___wmul@product 0030                          d2b@digit 0037  
                        i1d2b@bcd 0022                          Lcd_Cmd@a 002F                       ??_Lcd_Clear 0030  
                     __stringbase 080F                 ___wmul@multiplier 002C                          i1___wmul 0B2C  
                       main@date0 00A2                         main@date1 00A3                  ??_Lcd_Write_Char 002D  
                       main@hour0 00A0                         main@hour1 00A1                         main@year0 00A6  
                       main@year1 00A7                          _Lcd_Init 0DED                          _Lcd_Port 0B0C  
             I2C_Master_Read@temp 0030          __end_of_Lcd_Write_String 0C8C                 i1___awmod@divisor 0070  
               i1___awmod@counter 0075         ?_I2C_Master_RepeatedStart 0070                __end_of__stringtab 0810  
                   _uint8ToString 071A                    uint8ToString@i 003B                   _I2C_Master_Init 0C0C  
                 _I2C_Master_Read 0BA1                   _I2C_Master_Wait 0AA7                   _I2C_Master_Stop 0A71  
                        __ptext10 0B0C                          __ptext11 0C0C                          __ptext20 0A68  
                        __ptext12 0EB6                          __ptext21 0A5F                          __ptext13 0D8C  
                        __ptext30 0A56                          __ptext22 0BA1                          __ptext14 0D31  
                        __ptext31 0A4D                          __ptext23 0AA7                          __ptext15 0F1E  
                        __ptext32 0A9A                          __ptext24 056E                          __ptext16 0B78  
                        __ptext25 07A1                          __ptext17 0B51                          __ptext26 0B2C  
                        __ptext18 0A84                          __ptext27 0CD8                          __ptext19 0A71  
                        __ptext28 0E4F                          __ptext29 0A7A                i1_I2C_Master_Start 0A4D  
              i1_I2C_Master_Write 0A7A                          _ioc_init 0AF0               ?i1_I2C_Master_Start 0070  
             ?i1_I2C_Master_Write 007B                          _slaveVal 0045                    ?_uint8ToString 0035  
            ??i1_I2C_Master_Start 0070              ??i1_I2C_Master_Write 007D          __end_of_I2C_Master_Start 0A71  
        __end_of_I2C_Master_Write 0A8E                        _INTCONbits 000B                          init_ram0 0AC5  
              Lcd_Write_Char@temp 002E                          intlevel1 0000                        i1d2b@digit 0020  
                ___lldiv@dividend 0030                         stringcode 080A                        _OSCCONbits 008F  
         __end_of_I2C_Master_Init 0C46           __end_of_I2C_Master_Read 0BD3           __end_of_I2C_Master_Wait 0AB4  
         __end_of_I2C_Master_Stop 0A7A                Lcd_Set_Cursor@temp 0035                  ___lldiv@quotient 0035  
               I2C_Master_Write@d 003D                          stringdir 080A                          stringtab 0800  
                     _SSPCON2bits 0091                     b2d@to_convert 0032  
